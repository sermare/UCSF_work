{
    "workflowName": "atac",
    "workflowProcessingEvents": [
        {
            "cromwellId": "cromid-4c79bf7",
            "timestamp": "2022-07-08T20:41:11.750Z",
            "description": "PickedUp",
            "cromwellVersion": "65"
        },
        {
            "description": "Finished",
            "timestamp": "2022-07-08T21:03:05.101Z",
            "cromwellId": "cromid-4c79bf7",
            "cromwellVersion": "65"
        }
    ],
    "actualWorkflowLanguageVersion": "1.0",
    "submittedFiles": {
        "workflow": "version 1.0\n\nstruct RuntimeEnvironment {\n    String docker\n    String singularity\n    String conda\n}\n\nworkflow atac {\n    String pipeline_ver = 'v2.2.0'\n\n    meta {\n        version: 'v2.2.0'\n\n        author: 'Jin wook Lee'\n        email: 'leepc12@gmail.com'\n        description: 'ENCODE ATAC-Seq pipeline. See https://github.com/ENCODE-DCC/atac-seq-pipeline for more details. e.g. example input JSON for Terra/Anvil.'\n        organization: 'ENCODE DCC'\n\n        specification_document: 'https://docs.google.com/document/d/1f0Cm4vRyDQDu0bMehHD7P7KOMxTOP-HiNoIvL1VcBt8/edit?usp=sharing'\n\n        default_docker: 'encodedcc/atac-seq-pipeline:v2.2.0'\n        default_singularity: 'https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif'\n        default_conda: 'encd-atac'\n        croo_out_def: 'https://storage.googleapis.com/encode-pipeline-output-definition/atac.croo.v5.json'\n\n        parameter_group: {\n            runtime_environment: {\n                title: 'Runtime environment',\n                description: 'Runtime environment such as container URIs (Docker, Singularity) and Conda environment name.'\n            },\n            pipeline_metadata: {\n                title: 'Pipeline metadata',\n                description: 'Metadata for a pipeline (e.g. title and description).'\n            },\n            reference_genome: {\n                title: 'Reference genome',\n                description: 'Genome specific files. e.g. reference FASTA, bowtie2 index, chromosome sizes file.',\n                help: 'Choose one atac.genome_tsv file that defines all genome specific parameters in it or define each genome specific parameter in input JSON to override those defined in genome TSV file. If you use Caper then use https://storage.googleapis.com/encode-pipeline-genome-data/genome_tsv/v1/[GENOME]_caper.tsv. Caper will automatically download/install all files defined in such TSV. Otherwise download genome TSV file by using a shell script (scripts/download_genome_data.sh [GENOME] [DEST_DIR]). Supported genomes are hg38, hg19, mm10 and mm9. See pipeline documentation if you want to build genome database from your own FASTA file. If some genome data are missing then analyses using such data will be skipped.'\n            },\n            input_genomic_data: {\n                title: 'Input genomic data',\n                description: 'Genomic input files for experiment.',\n                help: 'Pipeline can start with any types of experiment data (e.g. FASTQ, BAM, NODUP_BAM, TAG-ALIGN, PEAK). Choose one type and leave others empty. FASTQs have a variable for each biological replicate. e.g. atac.fastqs_rep1_R1 and atac.fastqs_rep2_R1. You can define up to 10 experiment replicates. For other types, there is an array to define file for each biological replicate. e.g. atac.bams: [\"rep1.bam\", \"rep1.bam\"]. Define sequential endedness with atac.paired_end, if you have mixed SE and PE replicates then define atac.paired_ends instead for each replicate. e.g. atac.paired_ends: [false, true].'\n            },\n            adapter_trimming: {\n                title: 'Adapter trimming',\n                description: 'Parameters for adapter trimming.',\n                help: 'Use atac.auto_detect_adapter to automatically detect/trim 3 adapters (Illumina: AGATCGGAAGAGC, Nextera: CTGTCTCTTATA, smallRNA: TGGAATTCTCGG) or manually define adapter sequence to be trimmed (atac.adapter or atac.adapters_repX_RY). Leave all parameters undefined/empty if your FASTQs are already trimmed.'\n            },\n            pipeline_parameter: {\n                title: 'Pipeline parameter',\n                description: 'Pipeline type and flags to turn on/off analyses.',\n                help: 'Pipeline can run as DNAse-seq mode. The only difference is TN5-shifting of read in ATAC-seq mode. Use atac.align_only to align FASTQs without peak calling.'\n            },\n            alignment: {\n                title: 'Alignment',\n                description: 'Parameters for alignment.',\n                help: 'Pipeline calculates mitochondrial fraction of reads in raw BAM. But after that it filters out mitochondrial reads (e.g. chrM, MT) from NODUP_BAMs (filtered/deduped). It is controlled by atac.filter_chrs array. If you want to keep mitochondrial reads then make this array empty.'\n            },\n            peak_calling: {\n                title: 'Peak calling',\n                description: 'Parameters for peak calling.',\n                help: 'This group includes statistical thresholds for peak-calling or post-peak-calling analyses: p-val, FDR, IDR.'\n            },\n            resource_parameter: {\n                title: 'Resource parameter',\n                description: 'Number of CPUs (threads), max. memory and walltime for tasks.',\n                help: 'Resource settings are used for determining an instance type on cloud backends (e.g. GCP, AWS) and used for submitting tasks to a cluster engine (e.g. SLURM, SGE, ...). Walltime (atac.*_time_hr) is only used for cluster engines. Other tasks default to use 1 CPU and 4GB of memory.'\n            }\n        }\n    }\n    input {\n        # group: runtime_environment\n        String docker = 'encodedcc/atac-seq-pipeline:v2.2.0'\n        String singularity = 'https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif'\n        String conda = 'encd-atac'\n        String conda_macs2 = 'encd-atac-macs2'\n        String conda_spp = 'encd-atac-spp'\n        String conda_python2 = 'encd-atac-py2'\n\n        # group: pipeline_metadata\n        String title = 'Untitled'\n        String description = 'No description'\n\n        # group: reference_genome\n        File? genome_tsv\n        String? genome_name\n        File? ref_fa\n        File? ref_mito_fa\n        File? bowtie2_idx_tar\n        File? bowtie2_mito_idx_tar\n        File? chrsz\n        File? blacklist\n        File? blacklist2\n        String? mito_chr_name\n        String? regex_bfilt_peak_chr_name\n        String? gensz\n        File? tss\n        File? dnase\n        File? prom\n        File? enh\n        File? reg2map\n        File? reg2map_bed\n        File? roadmap_meta\n\n        # group: input_genomic_data\n        Boolean? paired_end\n        Array[Boolean] paired_ends = []\n        Array[File] fastqs_rep1_R1 = []\n        Array[File] fastqs_rep1_R2 = []\n        Array[File] fastqs_rep2_R1 = []\n        Array[File] fastqs_rep2_R2 = []\n        Array[File] fastqs_rep3_R1 = []\n        Array[File] fastqs_rep3_R2 = []\n        Array[File] fastqs_rep4_R1 = []\n        Array[File] fastqs_rep4_R2 = []\n        Array[File] fastqs_rep5_R1 = []\n        Array[File] fastqs_rep5_R2 = []\n        Array[File] fastqs_rep6_R1 = []\n        Array[File] fastqs_rep6_R2 = []\n        Array[File] fastqs_rep7_R1 = []\n        Array[File] fastqs_rep7_R2 = []\n        Array[File] fastqs_rep8_R1 = []\n        Array[File] fastqs_rep8_R2 = []\n        Array[File] fastqs_rep9_R1 = []\n        Array[File] fastqs_rep9_R2 = []\n        Array[File] fastqs_rep10_R1 = []\n        Array[File] fastqs_rep10_R2 = []\n        Array[File] bams = []\n        Array[File] nodup_bams = []\n        Array[File] tas = []\n        Array[File] peaks = []\n        Array[File] peaks_pr1 = []\n        Array[File] peaks_pr2 = []\n        File? peak_pooled\n        File? peak_ppr1\n        File? peak_ppr2\n\n        # group: pipeline_parameter\n        String pipeline_type = 'atac'\n        Boolean align_only = false\n        Boolean true_rep_only = false\n        Boolean enable_xcor = false\n        Boolean enable_count_signal_track = false\n        Boolean enable_idr = true\n        Boolean enable_preseq = false\n        Boolean enable_fraglen_stat = true\n        Boolean enable_tss_enrich = true\n        Boolean enable_annot_enrich = true\n        Boolean enable_jsd = true\n        Boolean enable_compare_to_roadmap = false\n        Boolean enable_gc_bias = true\n\n        # group: adapter_trimming\n        String cutadapt_param = '-e 0.1 -m 5'\n        Boolean auto_detect_adapter = false\n        String? adapter\n        Array[String] adapters_rep1_R1 = []\n        Array[String] adapters_rep1_R2 = []\n        Array[String] adapters_rep2_R1 = []\n        Array[String] adapters_rep2_R2 = []\n        Array[String] adapters_rep3_R1 = []\n        Array[String] adapters_rep3_R2 = []\n        Array[String] adapters_rep4_R1 = []\n        Array[String] adapters_rep4_R2 = []\n        Array[String] adapters_rep5_R1 = []\n        Array[String] adapters_rep5_R2 = []\n        Array[String] adapters_rep6_R1 = []\n        Array[String] adapters_rep6_R2 = []\n        Array[String] adapters_rep7_R1 = []\n        Array[String] adapters_rep7_R2 = []\n        Array[String] adapters_rep8_R1 = []\n        Array[String] adapters_rep8_R2 = []\n        Array[String] adapters_rep9_R1 = []\n        Array[String] adapters_rep9_R2 = []\n        Array[String] adapters_rep10_R1 = []\n        Array[String] adapters_rep10_R2 = []\n\n        # group: alignment\n        Int multimapping = 4\n        String dup_marker = 'picard'\n        Boolean no_dup_removal = false\n        Int mapq_thresh = 30\n        Array[String] filter_chrs = ['chrM', 'MT']\n        Int subsample_reads = 0\n        Int xcor_subsample_reads = 25000000\n        Array[Int?] read_len = []\n        Int pseudoreplication_random_seed = 0\n\n        # group: peak_calling\n        Int cap_num_peak = 300000\n        Float pval_thresh = 0.01\n        Int smooth_win = 150\n        Float idr_thresh = 0.05\n\n        # group: resource_parameter\n        Int align_cpu = 6\n        Float align_mem_factor = 0.15\n        Int align_time_hr = 48\n        Float align_disk_factor = 8.0\n\n        Int filter_cpu = 4\n        Float filter_mem_factor = 0.4\n        Int filter_time_hr = 24\n        Float filter_disk_factor = 8.0\n\n        Int bam2ta_cpu = 2\n        Float bam2ta_mem_factor = 0.3\n        Int bam2ta_time_hr = 12\n        Float bam2ta_disk_factor = 4.0\n\n        Float spr_mem_factor = 20.0\n        Float spr_disk_factor = 30.0\n\n        Int jsd_cpu = 4\n        Float jsd_mem_factor = 0.1\n        Int jsd_time_hr = 12\n        Float jsd_disk_factor = 2.0\n\n        Int xcor_cpu = 2\n        Float xcor_mem_factor = 1.0\n        Int xcor_time_hr = 6\n        Float xcor_disk_factor = 4.5\n\n        Int call_peak_cpu = 2\n        Float call_peak_mem_factor = 4.0\n        Int call_peak_time_hr = 24\n        Float call_peak_disk_factor = 30.0\n\n        Float macs2_signal_track_mem_factor = 12.0\n        Int macs2_signal_track_time_hr = 24\n        Float macs2_signal_track_disk_factor = 80.0\n\n        Float preseq_mem_factor = 0.5\n        Float preseq_disk_factor = 5.0\n\n        String? filter_picard_java_heap\n        String? preseq_picard_java_heap\n        String? fraglen_stat_picard_java_heap\n        String? gc_bias_picard_java_heap\n    }\n\n    parameter_meta {\n        docker: {\n            description: 'Default Docker image URI to run WDL tasks.',\n            group: 'runtime_environment',\n            example: 'ubuntu:20.04'\n        }\n        singularity: {\n            description: 'Default Singularity image URI to run WDL tasks. For Singularity users only.',\n            group: 'runtime_environment',\n            example: 'docker://ubuntu:20.04'\n        }\n        conda: {\n            description: 'Default Conda environment name to run WDL tasks. For Conda users only.',\n            group: 'runtime_environment',\n            example: 'encd-atac'\n        }\n        conda_macs2: {\n            description: 'Conda environment name for task macs2. For Conda users only.',\n            group: 'runtime_environment',\n            example: 'encd-atac-macs2'\n        }\n        conda_spp: {\n            description: 'Conda environment name for tasks spp/xcor. For Conda users only.',\n            group: 'runtime_environment',\n            example: 'encd-atac-spp'\n        }\n        conda_python2: {\n            description: 'Conda environment name for tasks with python2 wrappers (tss_enrich). For Conda users only.',\n            group: 'runtime_environment',\n            example: 'encd-atac-py2'\n        }\n        title: {\n            description: 'Experiment title.',\n            group: 'pipeline_metadata',\n            example: 'ENCSR356KRQ (subsampled 1/400)'\n        }\n        description: {\n            description: 'Experiment description.',\n            group: 'pipeline_metadata',\n            example: 'ATAC-seq on primary keratinocytes in day 0.0 of differentiation (subsampled 1/400)'\n        }\n        genome_tsv: {\n            description: 'Reference genome database TSV.',\n            group: 'reference_genome',\n            help: 'This TSV files includes all genome specific parameters (e.g. reference FASTA, bowtie2 index). You can still invidiaully define any parameters in it. Parameters defined in input JSON will override those defined in genome TSV.',\n            example: 'https://storage.googleapis.com/encode-pipeline-genome-data/genome_tsv/v1/hg38_caper.tsv'\n        }\n        genome_name: {\n            description: 'Genome name.',\n            group: 'reference_genome'\n        }\n        ref_fa: {\n            description: 'Reference FASTA file.',\n            group: 'reference_genome'\n        }\n        ref_mito_fa: {\n            description: 'Reference FASTA file (mitochondrial reads only).',\n            group: 'reference_genome'\n        }\n        bowtie2_idx_tar: {\n            description: 'BWA index TAR file.',\n            group: 'reference_genome'\n        }\n        bowtie2_mito_idx_tar: {\n            description: 'BWA index TAR file (mitochondrial reads only).',\n            group: 'reference_genome'\n        }\n        chrsz: {\n            description: '2-col chromosome sizes file.',\n            group: 'reference_genome'\n        }\n        blacklist: {\n            description: 'Blacklist file in BED format.',\n            group: 'reference_genome',\n            help: 'Peaks will be filtered with this file.'\n        }\n        blacklist2: {\n            description: 'Secondary blacklist file in BED format.',\n            group: 'reference_genome',\n            help: 'If it is defined, it will be merged with atac.blacklist. Peaks will be filtered with merged blacklist.'\n        }\n        mito_chr_name: {\n            description: 'Mitochondrial chromosome name.',\n            group: 'reference_genome',\n            help: 'e.g. chrM, MT. Mitochondrial reads defined here will be filtered out during filtering BAMs in \"filter\" task.'\n        }\n        regex_bfilt_peak_chr_name: {\n            description: 'Reg-ex for chromosomes to keep while filtering peaks.',\n            group: 'reference_genome',\n            help: 'Chromosomes defined here will be kept. All other chromosomes will be filtered out in .bfilt. peak file. This is done along with blacklist filtering peak file.'\n        }\n        gensz: {\n            description: 'Genome sizes. \"hs\" for human, \"mm\" for mouse or sum of 2nd columnin chromosome sizes file.',\n            group: 'reference_genome'\n        }\n        tss: {\n            description: 'TSS file in BED format.',\n            group: 'reference_genome'\n        }\n        dnase: {\n            description: 'Open chromatin regions file in BED format.',\n            group: 'reference_genome'\n        }\n        prom: {\n            description: 'Promoter regions file in BED format.',\n            group: 'reference_genome'\n        }\n        enh: {\n            description: 'Enhancer regions file in BED format.',\n            group: 'reference_genome'\n        }\n        reg2map: {\n            description: 'Cell type signals file.',\n            group: 'reference_genome'\n        }\n        reg2map_bed: {\n            description: 'File of regions used to generate reg2map signals.',\n            group: 'reference_genome'\n        }\n        roadmap_meta: {\n            description: 'Roadmap metadata.',\n            group: 'reference_genome'\n        }\n        paired_end: {\n            description: 'Sequencing endedness.',\n            group: 'input_genomic_data',\n            help: 'Setting this on means that all replicates are paired ended. For mixed samples, use atac.paired_ends array instead.',\n            example: true\n        }\n        paired_ends: {\n            description: 'Sequencing endedness array (for mixed SE/PE datasets).',\n            group: 'input_genomic_data',\n            help: 'Whether each biological replicate is paired ended or not.'\n        }\n        fastqs_rep1_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 1.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from FASTQ files. Pipeline can start from any type of inputs (e.g. FASTQs, BAMs, ...). Choose one type and fill paramters for that type and leave other undefined. Especially for FASTQs, we have individual variable for each biological replicate to allow FASTQs of technical replicates can be merged. Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep1_R2). These FASTQs are usually technical replicates to be merged.',\n            example: [\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep1/pair1/ENCFF341MYG.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep1/pair1/ENCFF106QGY.subsampled.400.fastq.gz\"\n            ]\n        }\n        fastqs_rep1_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 1.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep1_R1). These FASTQs are usually technical replicates to be merged.',\n            example: [\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep1/pair2/ENCFF248EJF.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep1/pair2/ENCFF368TYI.subsampled.400.fastq.gz\"\n            ]\n        }\n        fastqs_rep2_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 2.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep2_R2). These FASTQs are usually technical replicates to be merged.',\n            example: [\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF641SFZ.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF751XTV.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF927LSG.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF859BDM.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF193RRC.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair1/ENCFF366DFI.subsampled.400.fastq.gz\"\n            ]\n        }\n        fastqs_rep2_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 2.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep2_R1). These FASTQs are usually technical replicates to be merged.',\n            example: [\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF031ARQ.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF590SYZ.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF734PEQ.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF007USV.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF886FSC.subsampled.400.fastq.gz\",\n                \"https://storage.googleapis.com/encode-pipeline-test-samples/encode-atac-seq-pipeline/ENCSR356KRQ/fastq_subsampled/rep2/pair2/ENCFF573UXK.subsampled.400.fastq.gz\"\n            ]\n        }\n        fastqs_rep3_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 3.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep3_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep3_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 3.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep3_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep4_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 4.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep4_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep4_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 4.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep4_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep5_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 5.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep5_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep5_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 5.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep5_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep6_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 6.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep6_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep6_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 6.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep6_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep7_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 7.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep7_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep7_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 7.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep7_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep8_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 8.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep8_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep8_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 8.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep8_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep9_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 9.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep9_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep9_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 9.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep9_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep10_R1: {\n            description: 'Read1 FASTQs to be merged for a biological replicate 10.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.fastqs_rep10_R2). These FASTQs are usually technical replicates to be merged.'\n        }\n        fastqs_rep10_R2: {\n            description: 'Read2 FASTQs to be merged for a biological replicate 10.',\n            group: 'input_genomic_data',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.fastqs_rep10_R1). These FASTQs are usually technical replicates to be merged.'\n        }\n        bams: {\n            description: 'List of unfiltered/raw BAM files for each biological replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from BAM files. Unfiltered/raw BAM file generated from aligner (e.g. bowtie2). Each entry for each biological replicate. e.g. [rep1.bam, rep2.bam, rep3.bam, ...].'\n        }\n        nodup_bams: {\n            description: 'List of filtered/deduped BAM files for each biological replicate',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from filtered BAM files. Filtered/deduped BAM file. Each entry for each biological replicate. e.g. [rep1.nodup.bam, rep2.nodup.bam, rep3.nodup.bam, ...].'\n        }\n        tas: {\n            description: 'List of TAG-ALIGN files for each biological replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from TAG-ALIGN files. TAG-ALIGN is in a 6-col BED format. It is a simplified version of BAM. Each entry for each biological replicate. e.g. [rep1.tagAlign.gz, rep2.tagAlign.gz, ...].'\n        }\n        peaks: {\n            description: 'List of NARROWPEAK files (not blacklist filtered) for each biological replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Each entry for each biological replicate. e.g. [rep1.narrowPeak.gz, rep2.narrowPeak.gz, ...]. Define other PEAK parameters (e.g. atac.peaks_pr1, atac.peak_pooled) according to your flag settings (e.g. atac.true_rep_only) and number of replicates. If you have more than one replicate then define atac.peak_pooled, atac.peak_ppr1 and atac.peak_ppr2. If atac.true_rep_only flag is on then do not define any parameters (atac.peaks_pr1, atac.peaks_pr2, atac.peak_ppr1 and atac.peak_ppr2) related to pseudo replicates.'\n        }\n        peaks_pr1: {\n            description: 'List of NARROWPEAK files (not blacklist filtered) for pseudo-replicate 1 of each biological replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Define if atac.true_rep_only flag is off.'\n        }\n        peaks_pr2: {\n            description: 'List of NARROWPEAK files (not blacklist filtered) for pseudo-replicate 2 of each biological replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Define if atac.true_rep_only flag is off.'\n        }\n        peak_pooled: {\n            description: 'NARROWPEAK file for pooled true replicate.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Define if you have multiple biological replicates. Pooled true replicate means analysis on pooled biological replicates.'\n        }\n        peak_ppr1: {\n            description: 'NARROWPEAK file for pooled pseudo replicate 1.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Define if you have multiple biological replicates and atac.true_rep_only flag is off. PPR1 means analysis on pooled 1st pseudo replicates. Each biological replicate is shuf/split into two pseudos. This is a pooling of each replicate\\'s 1st pseudos.'\n        }\n        peak_ppr2: {\n            description: 'NARROWPEAK file for pooled pseudo replicate 2.',\n            group: 'input_genomic_data',\n            help: 'Define if you want to start pipeline from PEAK files. Define if you have multiple biological replicates and atac.true_rep_only flag is off. PPR1 means analysis on pooled 2nd pseudo replicates. Each biological replicate is shuf/split into two pseudos. This is a pooling of each replicate\\'s 2nd pseudos.'\n        }\n\n        pipeline_type: {\n            description: 'Pipeline type. atac for ATAC-Seq or dnase for DNase-Seq.',\n            group: 'pipeline_parameter',\n            help: 'The only difference of two types is that TN5 shifting of TAG-ALIGN is done for atac. TAG-ALIGN is in 6-col BED format. It is a simplified version of BAM.',\n            choices: ['atac', 'dnase'],\n            example: 'atac'\n        }\n        align_only: {\n            description: 'Align only mode.',\n            group: 'pipeline_parameter',\n            help: 'Reads will be aligned but there will be no peak-calling on them.'\n        }\n        true_rep_only: {\n            description: 'Disables all analyses related to pseudo-replicates.',\n            group: 'pipeline_parameter',\n            help: 'Pipeline generates 2 pseudo-replicate from one biological replicate. This flag turns off all analyses related to pseudos (with prefix/suffix pr, ppr).'\n        }\n        enable_xcor: {\n            description: 'Enables cross-correlation analysis.',\n            group: 'pipeline_parameter',\n            help: 'Generates cross-correlation plot.'\n        }\n        enable_count_signal_track: {\n            description: 'Enables generation of count signal tracks.',\n            group: 'pipeline_parameter'\n        }\n        enable_idr: {\n            description: 'Enables IDR on MACS2 NARROWPEAKs.',\n            group: 'pipeline_parameter'\n        }\n        enable_preseq: {\n            description: 'Enables preseq analysis.',\n            group: 'pipeline_parameter'\n        }\n        enable_fraglen_stat: {\n            description: 'Enables calculation of fragment length distribution/statistics.',\n            group: 'pipeline_parameter'\n        }\n        enable_tss_enrich: {\n            description: 'Enables TSS enrichment plot generation.',\n            group: 'pipeline_parameter'\n        }\n        enable_annot_enrich: {\n            description: 'Enables annotated regions enrichment analysis.',\n            group: 'pipeline_parameter'\n        }\n        enable_jsd: {\n            description: 'Enables Jensen-Shannon Distance (JSD) plot generation.',\n            group: 'pipeline_parameter'\n        }\n        enable_compare_to_roadmap: {\n            description: 'Enables comparison to Roadmap.',\n            group: 'pipeline_parameter'\n        }\n        enable_gc_bias: {\n            description: 'Enables GC bias calculation.',\n            group: 'pipeline_parameter'\n        }\n\n        cutadapt_param: {\n            description: 'Parameters for cutadapt.',\n            group: 'adapter_trimming',\n            help: 'It is -e 0.1 -m 5 by default (err_rate=0.1, min_trim_len=5). You can define any parameters that cutadapt supports.'\n        }\n        auto_detect_adapter: {\n            description: 'Auto-detect/trim adapter sequences.',\n            group: 'adapter_trimming',\n            help: 'Can detect/trim three types of adapter sequences. Illumina: AGATCGGAAGAGC, Nextera: CTGTCTCTTATA, smallRNA: TGGAATTCTCGG.',\n            example: true\n        }\n        adapter: {\n            description: 'Adapter for all FASTQs.',\n            group: 'adapter_trimming',\n            help: 'Define if all FASTQs have the same adapter sequence. Otherwise define adapter sequence for individual FASTQ in atac.adapters_repX_R1 and atac.adapters_repX_R2 instead. Use atac.auto_detect_adapter if you want to detect adapters automatically. If all of your FASTQs are already trimmed then leave all adapter-related parameters undefined/empty.'\n        }\n        adapters_rep1_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 1.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep1_R2). You can combine this with atac.auto_detect_adapter. Pipeline will auto-detect/trim adapter sequences for null entry in this list. e.g. [\"AAGGCCTT\", null, \"AAGGCCTT\"].'\n        }\n        adapters_rep1_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 1.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep1_R1).'\n        }\n        adapters_rep2_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 2.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep2_R2).'\n        }\n        adapters_rep2_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 2.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep2_R1).'\n        }\n        adapters_rep3_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 3.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep3_R2).'\n        }\n        adapters_rep3_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 3.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep3_R1).'\n        }\n        adapters_rep4_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 4.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep4_R2).'\n        }\n        adapters_rep4_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 4.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep4_R1).'\n        }\n        adapters_rep5_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 5.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep5_R2).'\n        }\n        adapters_rep5_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 5.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep5_R1).'\n        }\n        adapters_rep6_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 6.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep6_R2).'\n        }\n        adapters_rep6_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 6.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep6_R1).'\n        }\n        adapters_rep7_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 7.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep7_R2).'\n        }\n        adapters_rep7_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 7.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep7_R1).'\n        }\n        adapters_rep8_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 8.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep8_R2).'\n        }\n        adapters_rep8_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 8.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep8_R1).'\n        }\n        adapters_rep9_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 9.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep9_R2).'\n        }\n        adapters_rep9_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 9.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep9_R1).'\n        }\n        adapters_rep10_R1: {\n            description: 'Adapter sequences for read1 FASTQs to be merged for a biological replicate 10.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read2 FASTQs (atac.adapters_rep10_R2).'\n        }\n        adapters_rep10_R2: {\n            description: 'Adapter sequences for read2 FASTQs to be merged for a biological replicate 10.',\n            group: 'adapter_trimming',\n            help: 'Make sure that they are consistent with read1 FASTQs (atac.adapters_rep10_R1).'\n        }\n\n        multimapping: {\n            description: 'Number of multimappers.',\n            group: 'alignment',\n            help: 'It is 4 by default. Set it to 0 if your sample does not have multimappers.'\n        }\n        dup_marker: {\n            description: 'Marker for duplicate reads. picard or sambamba.',\n            group: 'alignment',\n            help: 'picard for Picard MarkDuplicates or sambamba for sambamba markdup.'\n        }\n        no_dup_removal: {\n            description: 'Disable removal of duplicate reads during filtering BAM.',\n            group: 'alignment',\n            help: 'Duplicate reads are filtererd out during filtering BAMs to gerenate NODUP_BAM. This flag will keep all duplicate reads in NODUP_BAM. This flag does not affect naming of NODUP_BAM. NODUP_BAM will still have .nodup. suffix in its filename.'\n        }\n        mapq_thresh: {\n            description: 'Threshold for low MAPQ reads removal.',\n            group: 'alignment',\n            help: 'Low MAPQ reads are filtered out while filtering BAM.'\n        }\n        filter_chrs: {\n            description: 'List of chromosomes to be filtered out while filtering BAM.',\n            group: 'alignment',\n            help: 'It is [\"chrM\", \"MT\"] by default. Therefore, mitochondrial reads will be filtered out while filtering. Make it empty if you want to keep all reads.'\n        }\n        subsample_reads: {\n            description: 'Subsample reads. Shuffle and subsample reads.',\n            group: 'alignment',\n            help: 'This affects all downstream analyses after filtering BAM. (e.g. all TAG-ALIGN files, peak-calling). Reads will be shuffled only if actual number of reads in BAM exceeds this number.  0 means disabled.'\n        }\n        xcor_subsample_reads: {\n            description: 'Subsample reads for cross-corrlelation analysis only.',\n            group: 'alignment',\n            help: 'This does not affect downstream analyses after filtering BAM. It is for cross-correlation analysis only. 0 means disabled.'\n        }\n        read_len: {\n            description: 'Read length per biological replicate.',\n            group: 'alignment',\n            help: 'Pipeline can estimate read length from FASTQs. If you start pipeline from other types (BAM, NODUP_BAM, TA, ...) than FASTQ. Then provide this for some analyses that require read length (e.g. TSS enrichment plot).'\n        }\n        pseudoreplication_random_seed: {\n            description: 'Random seed (positive integer) used for pseudo-replication (shuffling reads in TAG-ALIGN and then split it into two).',\n            group: 'alignment',\n            help: 'Pseudo-replication (task spr) is done by using GNU \"shuf --random-source=sha256(random_seed)\". If this parameter == 0, then pipeline uses input TAG-ALIGN file\\'s size (in bytes) for the random_seed.'\n        }\n        cap_num_peak: {\n            description: 'Upper limit on the number of peaks.',\n            group: 'peak_calling',\n            help: 'Called peaks will be sorted in descending order of score and the number of peaks will be capped at this number by taking first N peaks.'\n        }\n        pval_thresh: {\n            description: 'p-value Threshold for MACS2 peak caller.',\n            group: 'peak_calling',\n            help: 'macs2 callpeak -p'\n        }\n        smooth_win: {\n            description: 'Size of smoothing windows for MACS2 peak caller.',\n            group: 'peak_calling',\n            help: 'This will be used for both generating MACS2 peaks/signal tracks.'\n        }\n        idr_thresh: {\n            description: 'IDR threshold.',\n            group: 'peak_calling'\n        }\n        align_cpu: {\n            description: 'Number of cores for task align.',\n            group: 'resource_parameter',\n            help: 'Task align merges/crops/maps FASTQs.'\n        }\n        align_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task align.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of FASTQs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        align_time_hr: {\n            description: 'Walltime (h) required for task align.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        align_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task align.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of FASTQs to determine required disk size of instance on GCP/AWS.'\n        }\n        filter_cpu: {\n            description: 'Number of cores for task filter.',\n            group: 'resource_parameter',\n            help: 'Task filter filters raw/unfilterd BAM to get filtered/deduped BAM.'\n        }\n        filter_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task filter.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of BAMs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        filter_time_hr: {\n            description: 'Walltime (h) required for task filter.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        filter_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task filter.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of BAMs to determine required disk size of instance on GCP/AWS.'\n        }\n        bam2ta_cpu: {\n            description: 'Number of cores for task bam2ta.',\n            group: 'resource_parameter',\n            help: 'Task bam2ta converts filtered/deduped BAM in to TAG-ALIGN (6-col BED) format.'\n        }\n        bam2ta_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task bam2ta.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        bam2ta_time_hr: {\n            description: 'Walltime (h) required for task bam2ta.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        bam2ta_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task bam2ta.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required disk size of instance on GCP/AWS.'\n        }\n        spr_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task spr.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        spr_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task spr.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required disk size of instance on GCP/AWS.'\n        }\n        jsd_cpu: {\n            description: 'Number of cores for task jsd.',\n            group: 'resource_parameter',\n            help: 'Task jsd plots Jensen-Shannon distance and metrics related to it.'\n        }\n        jsd_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task jsd.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        jsd_time_hr: {\n            description: 'Walltime (h) required for task jsd.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        jsd_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task jsd.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of filtered BAMs to determine required disk size of instance on GCP/AWS.'\n        }\n        xcor_cpu: {\n            description: 'Number of cores for task xcor.',\n            group: 'resource_parameter',\n            help: 'Task xcor does cross-correlation analysis (including a plot) on subsampled TAG-ALIGNs.'\n        }\n        xcor_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task xcor.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        xcor_time_hr: {\n            description: 'Walltime (h) required for task xcor.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        xcor_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task xcor.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required disk size of instance on GCP/AWS.'\n        }\n        call_peak_cpu: {\n            description: 'Number of cores for task call_peak. MACS2 is single-thread. No more than 2 is required.',\n            group: 'resource_parameter',\n            help: 'Task call_peak call peaks on TAG-ALIGNs by using MACS2 peak caller.'\n        }\n        call_peak_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task call_peak.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        call_peak_time_hr: {\n            description: 'Walltime (h) required for task call_peak.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        call_peak_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task call_peak.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required disk size of instance on GCP/AWS.'\n        }\n        macs2_signal_track_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task macs2_signal_track.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        macs2_signal_track_time_hr: {\n            description: 'Walltime (h) required for task macs2_signal_track.',\n            group: 'resource_parameter',\n            help: 'This is for HPCs only. e.g. SLURM, SGE, ...'\n        }\n        macs2_signal_track_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task macs2_signal_track.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of TAG-ALIGNs (BEDs) to determine required disk size of instance on GCP/AWS.'\n        }\n        preseq_mem_factor: {\n            description: 'Multiplication factor to determine memory required for task preseq.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of BAMs to determine required memory of instance (GCP/AWS) or job (HPCs).'\n        }\n        preseq_disk_factor: {\n            description: 'Multiplication factor to determine persistent disk size for task preseq.',\n            group: 'resource_parameter',\n            help: 'This factor will be multiplied to the size of BAMs to determine required disk size of instance on GCP/AWS.'\n        }\n        filter_picard_java_heap: {\n            description: 'Maximum Java heap (java -Xmx) in task filter.',\n            group: 'resource_parameter',\n            help: 'Maximum memory for Picard tools MarkDuplicates. If not defined, 90% of filter task\\'s memory will be used.'\n        }\n        preseq_picard_java_heap: {\n            description: 'Maximum Java heap (java -Xmx) in task preseq.',\n            group: 'resource_parameter',\n            help: 'Maximum memory for Picard tools EstimateLibraryComplexity. If not defined, 90% of preseq task\\'s memory will be used.'\n        }\n        fraglen_stat_picard_java_heap: {\n            description: 'Maximum Java heap (java -Xmx) in task fraglen_stat_pe (for paired end replicate only).',\n            group: 'resource_parameter',\n            help: 'Maximum memory for Picard tools CollectInsertSizeMetrics. If not defined, 90% of fraglen_stat tasks\\'s memory will be used.'\n        }\n        gc_bias_picard_java_heap: {\n            description: 'Maximum Java heap (java -Xmx) in task gc_bias.',\n            group: 'resource_parameter',\n            help: 'Maximum memory for Picard tools CollectGcBiasMetrics. If not defined, 90% of gc_bias tasks\\'s memory will be used.'\n        }\n    }\n    RuntimeEnvironment runtime_environment = {\n        'docker': docker, 'singularity': singularity, 'conda': conda\n    }\n    RuntimeEnvironment runtime_environment_spp = {\n        'docker': docker, 'singularity': singularity, 'conda': conda_spp\n    }\n    RuntimeEnvironment runtime_environment_macs2 = {\n        'docker': docker, 'singularity': singularity, 'conda': conda_macs2\n    }\n    RuntimeEnvironment runtime_environment_python2 = {\n        'docker': docker, 'singularity': singularity, 'conda': conda_python2\n    }\n\n    String aligner = 'bowtie2'\n    String peak_caller = 'macs2'\n    String peak_type = 'narrowPeak'\n    \n    # read genome data and paths\n    if ( defined(genome_tsv) ) {\n        call read_genome_tsv { input:\n            genome_tsv = genome_tsv,\n            runtime_environment = runtime_environment\n        }\n    }\n    File ref_fa_ = select_first([ref_fa, read_genome_tsv.ref_fa])\n    File bowtie2_idx_tar_ = select_first([bowtie2_idx_tar, read_genome_tsv.bowtie2_idx_tar])\n    File bowtie2_mito_idx_tar_ = select_first([bowtie2_mito_idx_tar, read_genome_tsv.bowtie2_mito_idx_tar])\n    File chrsz_ = select_first([chrsz, read_genome_tsv.chrsz])\n    String gensz_ = select_first([gensz, read_genome_tsv.gensz])\n    File? blacklist1_ = if defined(blacklist) then blacklist\n        else read_genome_tsv.blacklist\n    File? blacklist2_ = if defined(blacklist2) then blacklist2\n        else read_genome_tsv.blacklist2        \n    # merge multiple blacklists\n    # two blacklists can have different number of columns (3 vs 6)\n    # so we limit merged blacklist's columns to 3\n    Array[File] blacklists = select_all([blacklist1_, blacklist2_])\n    if ( length(blacklists) > 1 ) {\n        call pool_ta as pool_blacklist { input:\n            tas = blacklists,\n            col = 3,\n            runtime_environment = runtime_environment\n        }\n    }\n    File? blacklist_ = if length(blacklists) > 1 then pool_blacklist.ta_pooled\n        else if length(blacklists) > 0 then blacklists[0]\n        else blacklist2_\n    String mito_chr_name_ = select_first([mito_chr_name, read_genome_tsv.mito_chr_name])\n    String regex_bfilt_peak_chr_name_ = select_first([regex_bfilt_peak_chr_name, read_genome_tsv.regex_bfilt_peak_chr_name])\n    String genome_name_ = select_first([genome_name, read_genome_tsv.genome_name, basename(chrsz_)])\n\n    # read additional annotation data\n    File? tss_ = if defined(tss) then tss\n        else read_genome_tsv.tss\n    File? dnase_ = if defined(dnase) then dnase\n        else read_genome_tsv.dnase\n    File? prom_ = if defined(prom) then prom\n        else read_genome_tsv.prom\n    File? enh_ = if defined(enh) then enh\n        else read_genome_tsv.enh\n    File? reg2map_ = if defined(reg2map) then reg2map\n        else read_genome_tsv.reg2map\n    File? reg2map_bed_ = if defined(reg2map_bed) then reg2map_bed\n        else read_genome_tsv.reg2map_bed\n    File? roadmap_meta_ = if defined(roadmap_meta) then roadmap_meta\n        else read_genome_tsv.roadmap_meta\n\n    ### temp vars (do not define these)\n    String aligner_ = aligner\n    String peak_caller_ = peak_caller\n    String peak_type_ = peak_type\n    String idr_rank_ = if peak_caller_=='spp' then 'signal.value'\n                        else if peak_caller_=='macs2' then 'p.value'\n                        else 'p.value'\n    Int cap_num_peak_ = cap_num_peak\n    Int mapq_thresh_ = mapq_thresh\n\n    # temporary 2-dim fastqs array [rep_id][merge_id]\n    Array[Array[File]] fastqs_R1 = \n        if length(fastqs_rep10_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1,\n            fastqs_rep6_R1, fastqs_rep7_R1, fastqs_rep8_R1, fastqs_rep9_R1, fastqs_rep10_R1]\n        else if length(fastqs_rep9_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1,\n            fastqs_rep6_R1, fastqs_rep7_R1, fastqs_rep8_R1, fastqs_rep9_R1]\n        else if length(fastqs_rep8_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1,\n            fastqs_rep6_R1, fastqs_rep7_R1, fastqs_rep8_R1]\n        else if length(fastqs_rep7_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1,\n            fastqs_rep6_R1, fastqs_rep7_R1]\n        else if length(fastqs_rep6_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1,\n            fastqs_rep6_R1]\n        else if length(fastqs_rep5_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1, fastqs_rep5_R1]\n        else if length(fastqs_rep4_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1, fastqs_rep4_R1]\n        else if length(fastqs_rep3_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1, fastqs_rep3_R1]\n        else if length(fastqs_rep2_R1)>0 then\n            [fastqs_rep1_R1, fastqs_rep2_R1]\n        else if length(fastqs_rep1_R1)>0 then\n            [fastqs_rep1_R1]\n        else []\n    # no need to do that for R2 (R1 array will be used to determine presense of fastq for each rep)\n    Array[Array[File]] fastqs_R2 = \n        [fastqs_rep1_R2, fastqs_rep2_R2, fastqs_rep3_R2, fastqs_rep4_R2, fastqs_rep5_R2,\n        fastqs_rep6_R2, fastqs_rep7_R2, fastqs_rep8_R2, fastqs_rep9_R2, fastqs_rep10_R2]\n\n    # temporary 2-dim adapters array [rep_id][merge_id]\n    Array[Array[String]] adapters_R1 = \n        [adapters_rep1_R1, adapters_rep2_R1, adapters_rep3_R1, adapters_rep4_R1, adapters_rep5_R1,\n        adapters_rep6_R1, adapters_rep7_R1, adapters_rep8_R1, adapters_rep9_R1, adapters_rep10_R1]\n    Array[Array[String]] adapters_R2 = \n        [adapters_rep1_R2, adapters_rep2_R2, adapters_rep3_R2, adapters_rep4_R2, adapters_rep5_R2,\n        adapters_rep6_R2, adapters_rep7_R2, adapters_rep8_R2, adapters_rep9_R2, adapters_rep10_R2]\n\n    # temporary variables to get number of replicates\n    #       WDLic implementation of max(A,B,C,...)\n    Int num_rep_fastq = length(fastqs_R1)\n    Int num_rep_bam = if length(bams)<num_rep_fastq then num_rep_fastq\n        else length(bams)\n    Int num_rep_nodup_bam = if length(nodup_bams)<num_rep_bam then num_rep_bam\n        else length(nodup_bams)\n    Int num_rep_ta = if length(tas)<num_rep_nodup_bam then num_rep_nodup_bam\n        else length(tas)\n    Int num_rep_peak = if length(peaks)<num_rep_ta then num_rep_ta\n        else length(peaks)\n    Int num_rep = num_rep_peak\n\n    # sanity check for inputs\n    if ( num_rep == 0 ) {\n        call raise_exception as error_input_data  { input:\n            msg = 'No FASTQ/BAM/TAG-ALIGN/PEAK defined in your input JSON. Check if your FASTQs are defined as \"atac.fastqs_repX_RY\". DO NOT MISS suffix _R1 even for single ended FASTQ.',\n            runtime_environment = runtime_environment\n        }\n    }\n\n    # align each replicate\n    scatter(i in range(num_rep)) {\n        # to override endedness definition for individual replicate\n        #     paired_end will override paired_ends[i]\n        Boolean paired_end_ = if !defined(paired_end) && i<length(paired_ends) then paired_ends[i]\n            else select_first([paired_end])\n\n        Boolean has_input_of_align = i<length(fastqs_R1) && length(fastqs_R1[i])>0\n        Boolean has_output_of_align = i<length(bams)\n        if ( has_input_of_align && !has_output_of_align ) {\n            call align { input :\n                fastqs_R1 = fastqs_R1[i],\n                fastqs_R2 = fastqs_R2[i],\n                adapter = adapter,\n                adapters_R1 = adapters_R1[i],\n                adapters_R2 = adapters_R2[i],\n                paired_end = paired_end_,\n                auto_detect_adapter = auto_detect_adapter,\n                cutadapt_param = cutadapt_param,\n\n                aligner = aligner_,\n                mito_chr_name = mito_chr_name_,\n                chrsz = chrsz_,\n                multimapping = multimapping,\n                idx_tar = bowtie2_idx_tar_,\n                # resource\n                cpu = align_cpu,\n                mem_factor = align_mem_factor,\n                time_hr = align_time_hr,\n                disk_factor = align_disk_factor,\n                runtime_environment = runtime_environment\n            }\n        }\n        File? bam_ = if has_output_of_align then bams[i] else align.bam\n\n        # mito only mapping to get frac mito qc\n        Boolean has_input_of_align_mito = has_input_of_align &&\n            defined(bowtie2_mito_idx_tar_)\n        if ( has_input_of_align_mito ) {\n            call align as align_mito { input :\n                fastqs_R1 = fastqs_R1[i],\n                fastqs_R2 = fastqs_R2[i],\n                adapter = adapter,\n                adapters_R1 = adapters_R1[i],\n                adapters_R2 = adapters_R2[i],\n                paired_end = paired_end_,\n                auto_detect_adapter = auto_detect_adapter,\n                cutadapt_param = cutadapt_param,\n\n                aligner = aligner_,\n                mito_chr_name = mito_chr_name_,\n                chrsz = chrsz_,\n                multimapping = multimapping,\n                idx_tar = bowtie2_mito_idx_tar_,\n                # resource\n                cpu = align_cpu,\n                mem_factor = align_mem_factor,\n                time_hr = align_time_hr,\n                disk_factor = align_disk_factor,\n                runtime_environment = runtime_environment\n            }\n        }\n\n        if ( defined(align.non_mito_samstat_qc) && defined(align_mito.samstat_qc) ) {\n            call frac_mito { input:\n                non_mito_samstat = align.non_mito_samstat_qc,\n                mito_samstat = align_mito.samstat_qc,\n                runtime_environment = runtime_environment\n            }\n        }\n\n        Boolean has_input_of_filter = has_output_of_align || defined(align.bam)\n        Boolean has_output_of_filter = i<length(nodup_bams)\n        # skip if we already have output of this step\n        if ( has_input_of_filter && !has_output_of_filter ) {\n            call filter { input :\n                bam = bam_,\n                paired_end = paired_end_,\n                dup_marker = dup_marker,\n                mapq_thresh = mapq_thresh_,\n                filter_chrs = filter_chrs,\n                chrsz = chrsz_,\n                no_dup_removal = no_dup_removal,\n                multimapping = multimapping,\n                mito_chr_name = mito_chr_name_,\n\n                cpu = filter_cpu,\n                mem_factor = filter_mem_factor,\n                picard_java_heap = filter_picard_java_heap,\n                time_hr = filter_time_hr,\n                disk_factor = filter_disk_factor,\n                runtime_environment = runtime_environment\n            }\n        }\n        File? nodup_bam_ = if has_output_of_filter then nodup_bams[i] else filter.nodup_bam\n\n        Boolean has_input_of_bam2ta = has_output_of_filter || defined(filter.nodup_bam)\n        Boolean has_output_of_bam2ta = i<length(tas)\n        if ( has_input_of_bam2ta && !has_output_of_bam2ta ) {\n            call bam2ta { input :\n                bam = nodup_bam_,\n                disable_tn5_shift = if pipeline_type=='atac' then false else true,\n                subsample = subsample_reads,\n                paired_end = paired_end_,\n                mito_chr_name = mito_chr_name_,\n\n                cpu = bam2ta_cpu,\n                mem_factor = bam2ta_mem_factor,\n                time_hr = bam2ta_time_hr,\n                disk_factor = bam2ta_disk_factor,\n                runtime_environment = runtime_environment\n            }\n        }\n        File? ta_ = if has_output_of_bam2ta then tas[i] else bam2ta.ta\n\n        Boolean has_input_of_xcor = has_output_of_align || defined(align.bam)\n        if ( has_input_of_xcor && enable_xcor ) {\n            call filter as filter_no_dedup { input :\n                bam = bam_,\n                paired_end = paired_end_,\n                dup_marker = dup_marker,\n                mapq_thresh = mapq_thresh_,\n                filter_chrs = filter_chrs,\n                chrsz = chrsz_,\n                no_dup_removal = true,\n                multimapping = multimapping,\n                mito_chr_name = mito_chr_name_,\n\n                cpu = filter_cpu,\n                mem_factor = filter_mem_factor,\n                picard_java_heap = filter_picard_java_heap,\n                time_hr = filter_time_hr,\n                disk_factor = filter_disk_factor,\n                runtime_environment = runtime_environment\n            }\n            call bam2ta as bam2ta_no_dedup { input :\n                bam = filter_no_dedup.nodup_bam,  # output name is nodup but it's not deduped\n                disable_tn5_shift = if pipeline_type=='atac' then false else true,\n                subsample = 0,\n                paired_end = paired_end_,\n                mito_chr_name = mito_chr_name_,\n\n                cpu = bam2ta_cpu,\n                mem_factor = bam2ta_mem_factor,\n                time_hr = bam2ta_time_hr,\n                disk_factor = bam2ta_disk_factor,\n                runtime_environment = runtime_environment\n            }\n            # subsample tagalign (non-mito) and cross-correlation analysis\n            call xcor { input :\n                ta = bam2ta_no_dedup.ta,\n                subsample = xcor_subsample_reads,\n                paired_end = paired_end_,\n                mito_chr_name = mito_chr_name_,\n\n                cpu = xcor_cpu,\n                mem_factor = xcor_mem_factor,\n                time_hr = xcor_time_hr,\n                disk_factor = xcor_disk_factor,\n                runtime_environment = runtime_environment_spp\n            }\n        }\n\n        Boolean has_input_of_macs2_signal_track = has_output_of_bam2ta || defined(bam2ta.ta)\n        if ( has_input_of_macs2_signal_track ) {\n            # generate count signal track\n            call macs2_signal_track { input :\n                ta = ta_,\n                gensz = gensz_,\n                chrsz = chrsz_,\n                pval_thresh = pval_thresh,\n                smooth_win = smooth_win,\n\n                mem_factor = macs2_signal_track_mem_factor,\n                disk_factor = macs2_signal_track_disk_factor,\n                time_hr = macs2_signal_track_time_hr,\n\n                runtime_environment = runtime_environment_macs2\n            }\n        }\n\n        Boolean has_input_of_call_peak = has_output_of_bam2ta || defined(bam2ta.ta)\n        Boolean has_output_of_call_peak = i<length(peaks)\n        if ( has_input_of_call_peak && !has_output_of_call_peak && !align_only ) {\n            # call peaks on tagalign\n            call call_peak { input :\n                peak_caller = peak_caller_,\n                peak_type = peak_type_,\n                ta = ta_,\n                gensz = gensz_,\n                chrsz = chrsz_,\n                cap_num_peak = cap_num_peak_,\n                pval_thresh = pval_thresh,\n                smooth_win = smooth_win,\n                blacklist = blacklist_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n                cpu = call_peak_cpu,\n                mem_factor = call_peak_mem_factor,\n                disk_factor = call_peak_disk_factor,\n                time_hr = call_peak_time_hr,\n\n                runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                    else if peak_caller == 'macs2' then runtime_environment_macs2\n                    else runtime_environment\n            }\n        }\n        File? peak_ = if has_output_of_call_peak then peaks[i] else call_peak.peak\n\n        Boolean has_input_of_spr = has_output_of_bam2ta || defined(bam2ta.ta)\n        if ( has_input_of_spr && !align_only && !true_rep_only ) {\n            call spr { input :\n                ta = ta_,\n                paired_end = paired_end_,\n                pseudoreplication_random_seed = pseudoreplication_random_seed,\n                mem_factor = spr_mem_factor,\n                disk_factor = spr_disk_factor,\n                runtime_environment = runtime_environment\n            }\n        }\n\n        Boolean has_input_of_call_peak_pr1 = defined(spr.ta_pr1)\n        Boolean has_output_of_call_peak_pr1 = i<length(peaks_pr1)\n        if ( has_input_of_call_peak_pr1 && !has_output_of_call_peak_pr1 &&\n            !align_only && !true_rep_only ) {\n            # call peaks on 1st pseudo replicated tagalign \n            call call_peak as call_peak_pr1 { input :\n                peak_caller = peak_caller_,\n                peak_type = peak_type_,\n                ta = spr.ta_pr1,\n                gensz = gensz_,\n                chrsz = chrsz_,\n                cap_num_peak = cap_num_peak_,\n                pval_thresh = pval_thresh,\n                smooth_win = smooth_win,\n                blacklist = blacklist_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n                cpu = call_peak_cpu,\n                mem_factor = call_peak_mem_factor,\n                disk_factor = call_peak_disk_factor,\n                time_hr = call_peak_time_hr,\n\n                runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                    else if peak_caller == 'macs2' then runtime_environment_macs2\n                    else runtime_environment\n            }\n        }\n        File? peak_pr1_ = if has_output_of_call_peak_pr1 then peaks_pr1[i]\n            else call_peak_pr1.peak\n\n        Boolean has_input_of_call_peak_pr2 = defined(spr.ta_pr2)\n        Boolean has_output_of_call_peak_pr2 = i<length(peaks_pr2)\n        if ( has_input_of_call_peak_pr2 && !has_output_of_call_peak_pr2 &&\n            !align_only && !true_rep_only ) {\n            # call peaks on 2nd pseudo replicated tagalign \n            call call_peak as call_peak_pr2 { input :\n                peak_caller = peak_caller_,\n                peak_type = peak_type_,\n                ta = spr.ta_pr2,\n                gensz = gensz_,\n                chrsz = chrsz_,\n                cap_num_peak = cap_num_peak_,\n                pval_thresh = pval_thresh,\n                smooth_win = smooth_win,\n                blacklist = blacklist_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n                cpu = call_peak_cpu,\n                mem_factor = call_peak_mem_factor,\n                disk_factor = call_peak_disk_factor,\n                time_hr = call_peak_time_hr,\n\n                runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                    else if peak_caller == 'macs2' then runtime_environment_macs2\n                    else runtime_environment\n            }\n        }\n        File? peak_pr2_ = if has_output_of_call_peak_pr2 then peaks_pr2[i]\n            else call_peak_pr2.peak\n\n        Boolean has_input_of_count_signal_track = has_output_of_bam2ta || defined(bam2ta.ta)\n        if ( has_input_of_count_signal_track && enable_count_signal_track ) {\n            # generate count signal track\n            call count_signal_track { input :\n                ta = ta_,\n                chrsz = chrsz_,\n                runtime_environment = runtime_environment\n            }\n        }\n        # tasks factored out from ATAqC\n        Boolean has_input_of_tss_enrich = defined(nodup_bam_) && defined(tss_) && (\n            defined(align.read_len) || i<length(read_len) )\n        if ( enable_tss_enrich && has_input_of_tss_enrich ) {\n            call tss_enrich { input :\n                read_len = if i<length(read_len) then read_len[i]\n                    else align.read_len,\n                nodup_bam = nodup_bam_,\n                tss = tss_,\n                chrsz = chrsz_,\n                runtime_environment = runtime_environment_python2\n            }\n        }\n        if ( enable_fraglen_stat && paired_end_ && defined(nodup_bam_) ) {\n            call fraglen_stat_pe { input :\n                nodup_bam = nodup_bam_,\n                picard_java_heap = fraglen_stat_picard_java_heap,\n                runtime_environment = runtime_environment\n            }\n        }\n        if ( enable_preseq && defined(bam_) ) {\n            call preseq { input :\n                bam = bam_,\n                paired_end = paired_end_,\n                mem_factor = preseq_mem_factor,\n                disk_factor = preseq_disk_factor,\n                picard_java_heap = preseq_picard_java_heap,\n                runtime_environment = runtime_environment\n            }\n        }\n        if ( enable_gc_bias && defined(nodup_bam_) && defined(ref_fa_) ) {\n            call gc_bias { input :\n                nodup_bam = nodup_bam_,\n                ref_fa = ref_fa_,\n                picard_java_heap = gc_bias_picard_java_heap,\n                runtime_environment = runtime_environment\n            }\n        }\n        if ( enable_annot_enrich && defined(ta_) && defined(blacklist_) && defined(dnase_) && defined(prom_) && defined(enh_) ) {\n            call annot_enrich { input :\n                ta = ta_,\n                blacklist = blacklist_,\n                dnase = dnase_,\n                prom = prom_,\n                enh = enh_,\n                runtime_environment = runtime_environment\n            }\n        }\n        if ( enable_compare_to_roadmap && defined(macs2_signal_track.pval_bw) &&\n             defined(reg2map_) && defined(roadmap_meta_) &&\n             ( defined(reg2map_bed_) || defined(dnase_) ) ) {\n            call compare_signal_to_roadmap { input :\n                pval_bw = macs2_signal_track.pval_bw,\n                dnase = dnase_,\n                reg2map_bed = reg2map_bed_,\n                reg2map = reg2map_,\n                roadmap_meta = roadmap_meta_,\n                runtime_environment = runtime_environment\n            }\n        }\n    }\n\n    # if there are TAs for ALL replicates then pool them\n    Boolean has_all_inputs_of_pool_ta = length(select_all(ta_))==num_rep\n    if ( has_all_inputs_of_pool_ta && num_rep>1 ) {\n        # pool tagaligns from true replicates\n        call pool_ta { input :\n            tas = ta_,\n            prefix = 'rep',\n\n            runtime_environment = runtime_environment\n        }\n    }\n\n    # if there are pr1 TAs for ALL replicates then pool them\n    Boolean has_all_inputs_of_pool_ta_pr1 = length(select_all(spr.ta_pr1))==num_rep\n    if ( has_all_inputs_of_pool_ta_pr1 && num_rep>1 && !align_only && !true_rep_only ) {\n        # pool tagaligns from pseudo replicate 1\n        call pool_ta as pool_ta_pr1 { input :\n            tas = spr.ta_pr1,\n            prefix = 'rep-pr1',\n            runtime_environment = runtime_environment\n        }\n    }\n\n    # if there are pr2 TAs for ALL replicates then pool them\n    Boolean has_all_inputs_of_pool_ta_pr2 = length(select_all(spr.ta_pr2))==num_rep\n    if ( has_all_inputs_of_pool_ta_pr1 && num_rep>1 && !align_only && !true_rep_only ) {\n        # pool tagaligns from pseudo replicate 2\n        call pool_ta as pool_ta_pr2 { input :\n            tas = spr.ta_pr2,\n            prefix = 'rep-pr2',\n            runtime_environment = runtime_environment\n        }\n    }\n\n    Boolean has_input_of_call_peak_pooled = defined(pool_ta.ta_pooled)\n    Boolean has_output_of_call_peak_pooled = defined(peak_pooled)\n    if ( has_input_of_call_peak_pooled && !has_output_of_call_peak_pooled &&\n        !align_only && num_rep>1 ) {\n        # call peaks on pooled replicate\n        call call_peak as call_peak_pooled { input :\n            peak_caller = peak_caller_,\n            peak_type = peak_type_,\n            ta = pool_ta.ta_pooled,\n            gensz = gensz_,\n            chrsz = chrsz_,\n            cap_num_peak = cap_num_peak_,\n            pval_thresh = pval_thresh,\n            smooth_win = smooth_win,\n            blacklist = blacklist_,\n            regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n            cpu = call_peak_cpu,\n            mem_factor = call_peak_mem_factor,\n            disk_factor = call_peak_disk_factor,\n            time_hr = call_peak_time_hr,\n\n            runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                else if peak_caller == 'macs2' then runtime_environment_macs2\n                else runtime_environment\n        }\n    }\n    File? peak_pooled_ = if has_output_of_call_peak_pooled then peak_pooled\n        else call_peak_pooled.peak\n\n    Boolean has_input_of_count_signal_track_pooled = defined(pool_ta.ta_pooled)\n    if ( has_input_of_count_signal_track_pooled && enable_count_signal_track && num_rep>1 ) {\n        call count_signal_track as count_signal_track_pooled { input :\n            ta = pool_ta.ta_pooled,\n            chrsz = chrsz_,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    Boolean has_input_of_macs2_signal_track_pooled = defined(pool_ta.ta_pooled)\n    if ( has_input_of_macs2_signal_track_pooled && num_rep>1 ) {\n        call macs2_signal_track as macs2_signal_track_pooled { input :\n            ta = pool_ta.ta_pooled,\n            gensz = gensz_,\n            chrsz = chrsz_,\n            pval_thresh = pval_thresh,\n            smooth_win = smooth_win,\n\n            mem_factor = macs2_signal_track_mem_factor,\n            disk_factor = macs2_signal_track_disk_factor,\n            time_hr = macs2_signal_track_time_hr,\n            runtime_environment = runtime_environment_macs2\n        }\n    }\n\n    Boolean has_input_of_jsd = defined(blacklist_) &&\n        length(select_all(nodup_bam_))==num_rep\n    if ( has_input_of_jsd && num_rep > 0 && enable_jsd ) {\n        # fingerprint and JS-distance plot\n        call jsd { input :\n            nodup_bams = nodup_bam_,\n            blacklist = blacklist_,\n            mapq_thresh = mapq_thresh_,\n\n            cpu = jsd_cpu,\n            mem_factor = jsd_mem_factor,\n            time_hr = jsd_time_hr,\n            disk_factor = jsd_disk_factor,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    Boolean has_input_of_call_peak_ppr1 = defined(pool_ta_pr1.ta_pooled)\n    Boolean has_output_of_call_peak_ppr1 = defined(peak_ppr1)\n    if ( has_input_of_call_peak_ppr1 && !has_output_of_call_peak_ppr1 &&\n        !align_only && !true_rep_only && num_rep>1 ) {\n        # call peaks on 1st pooled pseudo replicates\n        call call_peak as call_peak_ppr1 { input :\n            peak_caller = peak_caller_,\n            peak_type = peak_type_,\n            ta = pool_ta_pr1.ta_pooled,\n            gensz = gensz_,\n            chrsz = chrsz_,\n            cap_num_peak = cap_num_peak_,\n            pval_thresh = pval_thresh,\n            smooth_win = smooth_win,\n            blacklist = blacklist_,\n            regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n            cpu = call_peak_cpu,\n            mem_factor = call_peak_mem_factor,\n            disk_factor = call_peak_disk_factor,\n            time_hr = call_peak_time_hr,\n\n            runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                else if peak_caller == 'macs2' then runtime_environment_macs2\n                else runtime_environment\n        }\n    }\n    File? peak_ppr1_ = if has_output_of_call_peak_ppr1 then peak_ppr1\n        else call_peak_ppr1.peak\n\n    Boolean has_input_of_call_peak_ppr2 = defined(pool_ta_pr2.ta_pooled)\n    Boolean has_output_of_call_peak_ppr2 = defined(peak_ppr2)\n    if ( has_input_of_call_peak_ppr2 && !has_output_of_call_peak_ppr2 &&\n        !align_only && !true_rep_only && num_rep>1 ) {\n        # call peaks on 2nd pooled pseudo replicates\n        call call_peak as call_peak_ppr2 { input :\n            peak_caller = peak_caller_,\n            peak_type = peak_type_,\n            ta = pool_ta_pr2.ta_pooled,\n            gensz = gensz_,\n            chrsz = chrsz_,\n            cap_num_peak = cap_num_peak_,\n            pval_thresh = pval_thresh,\n            smooth_win = smooth_win,\n            blacklist = blacklist_,\n            regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n\n            cpu = call_peak_cpu,\n            mem_factor = call_peak_mem_factor,\n            disk_factor = call_peak_disk_factor,\n            time_hr = call_peak_time_hr,\n            runtime_environment = if peak_caller == 'spp' then runtime_environment_spp\n                else if peak_caller == 'macs2' then runtime_environment_macs2\n                else runtime_environment\n        }\n    }\n    File? peak_ppr2_ = if has_output_of_call_peak_ppr2 then peak_ppr2\n        else call_peak_ppr2.peak\n\n    # do IDR/overlap on all pairs of two replicates (i,j)\n    #    where i and j are zero-based indices and 0 <= i < j < num_rep\n    scatter( pair in cross(range(num_rep),range(num_rep)) ) {\n        File? peak1_ = peak_[pair.left]\n        File? peak2_ = peak_[pair.right]\n        if ( !align_only && pair.left<pair.right ) {\n            # pair.left = 0-based index of 1st replicate\n            # pair.right = 0-based index of 2nd replicate\n            # Naive overlap on every pair of true replicates\n            call overlap { input :\n                prefix = 'rep'+(pair.left+1)+'_vs_rep'+(pair.right+1),\n                peak1 = peak1_,\n                peak2 = peak2_,\n                peak_pooled = peak_pooled_,\n                peak_type = peak_type_,\n                blacklist = blacklist_,\n                chrsz = chrsz_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n                ta = pool_ta.ta_pooled,\n                runtime_environment = runtime_environment\n            }\n        }\n        if ( enable_idr && !align_only && pair.left<pair.right ) {\n            # pair.left = 0-based index of 1st replicate\n            # pair.right = 0-based index of 2nd replicate\n            # IDR on every pair of true replicates\n            call idr { input :\n                prefix = 'rep'+(pair.left+1)+'_vs_rep'+(pair.right+1),\n                peak1 = peak1_,\n                peak2 = peak2_,\n                peak_pooled = peak_pooled_,\n                idr_thresh = idr_thresh,\n                peak_type = peak_type_,\n                rank = idr_rank_,\n                blacklist = blacklist_,\n                chrsz = chrsz_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n                ta = pool_ta.ta_pooled,\n                runtime_environment = runtime_environment\n            }\n        }\n    }\n\n    # overlap on pseudo-replicates (pr1, pr2) for each true replicate\n    if ( !align_only && !true_rep_only ) {\n        scatter( i in range(num_rep) ) {\n            call overlap as overlap_pr { input :\n                prefix = 'rep'+(i+1)+'-pr1_vs_rep'+(i+1)+'-pr2',\n                peak1 = peak_pr1_[i],\n                peak2 = peak_pr2_[i],\n                peak_pooled = peak_[i],\n                peak_type = peak_type_,\n                blacklist = blacklist_,\n                chrsz = chrsz_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n                ta = ta_[i],\n                runtime_environment = runtime_environment\n            }\n        }\n    }\n\n    if ( !align_only && !true_rep_only && enable_idr ) {\n        scatter( i in range(num_rep) ) {\n            # IDR on pseduo replicates\n            call idr as idr_pr { input :\n                prefix = 'rep'+(i+1)+'-pr1_vs_rep'+(i+1)+'-pr2',\n                peak1 = peak_pr1_[i],\n                peak2 = peak_pr2_[i],\n                peak_pooled = peak_[i],\n                idr_thresh = idr_thresh,\n                peak_type = peak_type_,\n                rank = idr_rank_,\n                blacklist = blacklist_,\n                chrsz = chrsz_,\n                regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n                ta = ta_[i],\n                runtime_environment = runtime_environment\n            }\n        }\n    }\n\n    if ( !align_only && !true_rep_only && num_rep>1 ) {\n        # Naive overlap on pooled pseudo replicates\n        call overlap as overlap_ppr { input :\n            prefix = 'pooled-pr1_vs_pooled-pr2',\n            peak1 = peak_ppr1_,\n            peak2 = peak_ppr2_,\n            peak_pooled = peak_pooled_,\n            peak_type = peak_type_,\n            blacklist = blacklist_,\n            chrsz = chrsz_,\n            regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n            ta = pool_ta.ta_pooled,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    if ( !align_only && !true_rep_only && num_rep>1 ) {\n        # IDR on pooled pseduo replicates\n        call idr as idr_ppr { input :\n            prefix = 'pooled-pr1_vs_pooled-pr2',\n            peak1 = peak_ppr1_,\n            peak2 = peak_ppr2_,\n            peak_pooled = peak_pooled_,\n            idr_thresh = idr_thresh,\n            peak_type = peak_type_,\n            rank = idr_rank_,\n            blacklist = blacklist_,\n            chrsz = chrsz_,\n            regex_bfilt_peak_chr_name = regex_bfilt_peak_chr_name_,\n            ta = pool_ta.ta_pooled,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    # reproducibility QC for overlap/IDR peaks\n    if ( !align_only && !true_rep_only && num_rep > 0 ) {\n        # reproducibility QC for overlapping peaks\n        call reproducibility as reproducibility_overlap { input :\n            prefix = 'overlap',\n            peaks = select_all(overlap.bfilt_overlap_peak),\n            peaks_pr = if defined(overlap_pr.bfilt_overlap_peak) then select_first([overlap_pr.bfilt_overlap_peak]) else [],\n            peak_ppr = overlap_ppr.bfilt_overlap_peak,\n            peak_type = peak_type_,\n            chrsz = chrsz_,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    if ( !align_only && !true_rep_only && num_rep > 0 && enable_idr ) {\n        # reproducibility QC for IDR peaks\n        call reproducibility as reproducibility_idr { input :\n            prefix = 'idr',\n            peaks = select_all(idr.bfilt_idr_peak),\n            peaks_pr = if defined(idr_pr.bfilt_idr_peak) then select_first([idr_pr.bfilt_idr_peak]) else [],\n            peak_ppr = idr_ppr.bfilt_idr_peak,\n            peak_type = peak_type_,\n            chrsz = chrsz_,\n            runtime_environment = runtime_environment\n        }\n    }\n\n    # Generate final QC report and JSON\n    call qc_report { input :\n        pipeline_ver = pipeline_ver,\n        title = title,\n        description = description,\n        genome = genome_name_,\n        multimapping = multimapping,\n        paired_ends = paired_end_,\n        pipeline_type = pipeline_type,\n        aligner = aligner_,\n        no_dup_removal = no_dup_removal,\n        peak_caller = peak_caller_,\n        cap_num_peak = cap_num_peak_,\n        idr_thresh = idr_thresh,\n        pval_thresh = pval_thresh,\n        xcor_subsample_reads = xcor_subsample_reads,\n\n        samstat_qcs = select_all(align.samstat_qc),\n        nodup_samstat_qcs = select_all(filter.samstat_qc),\n\n        frac_mito_qcs = select_all(frac_mito.frac_mito_qc),\n        dup_qcs = select_all(filter.dup_qc),\n        lib_complexity_qcs = select_all(filter.lib_complexity_qc),\n        xcor_plots = select_all(xcor.plot_png),\n        xcor_scores = select_all(xcor.score),\n\n        jsd_plot = jsd.plot,\n        jsd_qcs = if defined(jsd.jsd_qcs) then select_first([jsd.jsd_qcs]) else [],\n\n        frip_qcs = select_all(call_peak.frip_qc),\n        frip_qcs_pr1 = select_all(call_peak_pr1.frip_qc),\n        frip_qcs_pr2 = select_all(call_peak_pr2.frip_qc),\n\n        frip_qc_pooled = call_peak_pooled.frip_qc,\n        frip_qc_ppr1 = call_peak_ppr1.frip_qc,\n        frip_qc_ppr2 = call_peak_ppr2.frip_qc,\n\n        idr_plots = select_all(idr.idr_plot),\n        idr_plots_pr = if defined(idr_pr.idr_plot) then select_first([idr_pr.idr_plot]) else [],\n        idr_plot_ppr = idr_ppr.idr_plot,\n        frip_idr_qcs = select_all(idr.frip_qc),\n        frip_idr_qcs_pr = if defined(idr_pr.frip_qc) then select_first([idr_pr.frip_qc]) else [],\n        frip_idr_qc_ppr = idr_ppr.frip_qc,\n        frip_overlap_qcs = select_all(overlap.frip_qc),\n        frip_overlap_qcs_pr = if defined(overlap_pr.frip_qc) then select_first([overlap_pr.frip_qc]) else [],\n        frip_overlap_qc_ppr = overlap_ppr.frip_qc,\n        idr_reproducibility_qc = reproducibility_idr.reproducibility_qc,\n        overlap_reproducibility_qc = reproducibility_overlap.reproducibility_qc,\n\n        annot_enrich_qcs = select_all(annot_enrich.annot_enrich_qc),\n        tss_enrich_qcs = select_all(tss_enrich.tss_enrich_qc),\n        tss_large_plots = select_all(tss_enrich.tss_large_plot),\n        roadmap_compare_plots = select_all(compare_signal_to_roadmap.roadmap_compare_plot),\n        fraglen_dist_plots = select_all(fraglen_stat_pe.fraglen_dist_plot),\n        fraglen_nucleosomal_qcs = select_all(fraglen_stat_pe.nucleosomal_qc),\n        gc_plots = select_all(gc_bias.gc_plot),\n        preseq_plots = select_all(preseq.preseq_plot),\n        picard_est_lib_size_qcs = select_all(preseq.picard_est_lib_size_qc),\n\n        peak_region_size_qcs = select_all(call_peak.peak_region_size_qc),\n        peak_region_size_plots = select_all(call_peak.peak_region_size_plot),\n        num_peak_qcs = select_all(call_peak.num_peak_qc),\n\n        idr_opt_peak_region_size_qc = reproducibility_idr.peak_region_size_qc,\n        idr_opt_peak_region_size_plot = reproducibility_overlap.peak_region_size_plot,\n        idr_opt_num_peak_qc = reproducibility_idr.num_peak_qc,\n\n        overlap_opt_peak_region_size_qc = reproducibility_overlap.peak_region_size_qc,\n        overlap_opt_peak_region_size_plot = reproducibility_overlap.peak_region_size_plot,\n        overlap_opt_num_peak_qc = reproducibility_overlap.num_peak_qc,\n\n        runtime_environment = runtime_environment\n    }\n\n    output {\n        File report = qc_report.report\n        File qc_json = qc_report.qc_json\n        Boolean qc_json_ref_match = qc_report.qc_json_ref_match\n    }\n}\n\ntask align {\n    input {        \n        # for task trim_adapter\n        Array[File] fastqs_R1         # [merge_id]\n        Array[File] fastqs_R2\n\n        String? adapter     # adapter for all fastqs,\n                            #    this will override individual adapters in adapters_R1/R2\n        Array[String] adapters_R1\n        Array[String] adapters_R2\n        Boolean paired_end\n        Boolean auto_detect_adapter\n        String cutadapt_param\n\n        # for task align\n        String aligner\n        String mito_chr_name\n        File chrsz            # 2-col chromosome sizes file\n        File idx_tar        # reference index tar or tar.gz\n        Int multimapping\n\n        # resource\n        Int cpu\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(fastqs_R1, \"G\") + size(fastqs_R2, \"G\")\n    Float mem_gb = 5.0 + size(idx_tar, \"G\") + mem_factor * input_file_size_gb\n    Float samtools_mem_gb = 0.8 * mem_gb\n    Int disk_gb = round(40.0 + disk_factor * input_file_size_gb)\n\n    # tmp vars for task trim_adapter\n    Array[Array[File]] tmp_fastqs = if paired_end then transpose([fastqs_R1, fastqs_R2])\n                else transpose([fastqs_R1])\n    Array[Array[String]] tmp_adapters = if paired_end then transpose([adapters_R1, adapters_R2])\n                else transpose([adapters_R1])\n    command {\n        set -e\n\n        # check if pipeline dependencies can be found\n        if [[ -z \"$(which encode_task_trim_adapter.py 2> /dev/null || true)\" ]]\n        then\n          echo -e \"\\n* Error: pipeline environment (docker, singularity or conda) not found.\" 1>&2\n          exit 3\n        fi\n\n        # trim adapter\n        python3 $(which encode_task_trim_adapter.py) \\\n            ${write_tsv(tmp_fastqs)} \\\n            ${'--adapter ' + adapter} \\\n            --adapters ${write_tsv(tmp_adapters)} \\\n            ${if paired_end then '--paired-end' else ''} \\\n            ${if auto_detect_adapter then '--auto-detect-adapter' else ''} \\\n            --cutadapt-param ' ${cutadapt_param}' \\\n            ${'--nth ' + cpu}\n\n        # align on trimmed/merged fastqs\n        if [ '${aligner}' == 'bowtie2' ]; then\n            python3 $(which encode_task_bowtie2.py) \\\n                ${idx_tar} \\\n                R1/*.fastq.gz \\\n                ${if paired_end then 'R2/*.fastq.gz' else ''} \\\n                ${if paired_end then '--paired-end' else ''} \\\n                ${'--multimapping ' + multimapping} \\\n                ${'--mem-gb ' + samtools_mem_gb} \\\n                ${'--nth ' + cpu}\n        fi\n\n        python3 $(which encode_task_post_align.py) \\\n            R1/*.fastq.gz $(ls *.bam) \\\n            ${'--mito-chr-name ' + mito_chr_name} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--mem-gb ' + samtools_mem_gb} \\\n            ${'--nth ' + cpu}\n        rm -rf R1 R2\n    }\n    output {\n        File bam = glob('*.bam')[0]\n        File bai = glob('*.bai')[0]\n        File samstat_qc = glob('*.samstats.qc')[0]\n        File non_mito_samstat_qc = glob('non_mito/*.samstats.qc')[0]\n        File read_len_log = glob('*.read_length.txt')[0]\n        Int read_len = read_int(read_len_log)\n    }\n    runtime {\n        cpu : cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n        preemptible: 0\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask frac_mito {\n    input {\n        File? non_mito_samstat\n        File? mito_samstat\n\n        RuntimeEnvironment runtime_environment\n    }\n\n    command {\n        set -e\n        python3 $(which encode_task_frac_mito.py) \\\n            ${non_mito_samstat} ${mito_samstat}\n    }\n    output {\n        File frac_mito_qc = glob('*.frac_mito.qc')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '4 GB'\n        time : 4\n        disks : 'local-disk 10 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask filter {\n    input {\n        File? bam\n        Boolean paired_end\n        Int multimapping\n        String dup_marker             # picard.jar MarkDuplicates (picard) or \n                                    # sambamba markdup (sambamba)\n        Int mapq_thresh                # threshold for low MAPQ reads removal\n        Array[String] filter_chrs     # chrs to be removed from final (nodup/filt) BAM\n        File chrsz                    # 2-col chromosome sizes file\n        Boolean no_dup_removal         # no dupe reads removal when filtering BAM\n        String mito_chr_name\n\n        Int cpu\n        Float mem_factor\n        String? picard_java_heap\n        Int time_hr\n        Float disk_factor\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(bam, \"G\")\n    Float picard_java_heap_factor = 0.9\n    Float mem_gb = 6.0 + mem_factor * input_file_size_gb\n    Float samtools_mem_gb = 0.8 * mem_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_filter.py) \\\n            ${bam} \\\n            ${if paired_end then '--paired-end' else ''} \\\n            ${'--multimapping ' + multimapping} \\\n            ${'--dup-marker ' + dup_marker} \\\n            ${'--mapq-thresh ' + mapq_thresh} \\\n            --filter-chrs ${sep=' ' filter_chrs} \\\n            ${'--chrsz ' + chrsz} \\\n            ${if no_dup_removal then '--no-dup-removal' else ''} \\\n            ${'--mito-chr-name ' + mito_chr_name} \\\n            ${'--mem-gb ' + samtools_mem_gb} \\\n            ${'--nth ' + cpu} \\\n            ${'--picard-java-heap ' + if defined(picard_java_heap) then picard_java_heap else (round(mem_gb * picard_java_heap_factor) + 'G')}\n    }\n    output {\n        File nodup_bam = glob('*.bam')[0]\n        File nodup_bai = glob('*.bai')[0]\n        File samstat_qc = glob('*.samstats.qc')[0]\n        File dup_qc = glob('*.dup.qc')[0]\n        File lib_complexity_qc = glob('*.lib_complexity.qc')[0]\n    }\n    runtime {\n        cpu : cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask bam2ta {\n    input {\n        File? bam\n        Boolean paired_end\n        Boolean disable_tn5_shift     # no tn5 shifting (it's for dnase-seq)\n        String mito_chr_name         # mito chromosome name\n        Int subsample                 # number of reads to subsample TAGALIGN\n                                    # this affects all downstream analysis\n        Int cpu\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(bam, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Float samtools_mem_gb = 0.8 * mem_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_bam2ta.py) \\\n            ${bam} \\\n            ${if paired_end then '--paired-end' else ''} \\\n            ${if disable_tn5_shift then '--disable-tn5-shift' else ''} \\\n            ${'--mito-chr-name ' + mito_chr_name} \\\n            ${'--subsample ' + subsample} \\\n            ${'--mem-gb ' + samtools_mem_gb} \\\n            ${'--nth ' + cpu}\n    }\n    output {\n        File ta = glob('*.tagAlign.gz')[0]\n    }\n    runtime {\n        cpu : cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask spr {\n    input {\n        File? ta\n        Boolean paired_end\n        Int pseudoreplication_random_seed\n\n        Float mem_factor\n        Float disk_factor\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(ta, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_spr.py) \\\n            ${ta} \\\n            ${'--pseudoreplication-random-seed ' + pseudoreplication_random_seed} \\\n            ${if paired_end then '--paired-end' else ''}\n    }\n    output {\n        File ta_pr1 = glob('*.pr1.tagAlign.gz')[0]\n        File ta_pr2 = glob('*.pr2.tagAlign.gz')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : 4\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask pool_ta {\n    input {\n        Array[File?] tas     # TAG-ALIGNs to be merged\n        Int? col             # number of columns in pooled TA\n        String? prefix         # basename prefix\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python3 $(which encode_task_pool_ta.py) \\\n            ${sep=' ' select_all(tas)} \\\n            ${'--prefix ' + prefix} \\\n            ${'--col ' + col}\n    }\n    output {\n        File ta_pooled = glob('*.tagAlign.gz')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '8 GB'\n        time : 4\n        disks : 'local-disk 100 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask xcor {\n    input {\n        File? ta\n        Boolean paired_end\n        String mito_chr_name\n        Int subsample  # number of reads to subsample TAGALIGN\n                    # this will be used for xcor only\n                    # will not affect any downstream analysis\n        Int cpu\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(ta, \"G\")\n    Float mem_gb = 8.0 + mem_factor * input_file_size_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_xcor.py) \\\n            ${ta} \\\n            ${if paired_end then '--paired-end' else ''} \\\n            ${'--mito-chr-name ' + mito_chr_name} \\\n            ${'--subsample ' + subsample} \\\n            --speak=0 \\\n            ${'--nth ' + cpu}\n    }\n    output {\n        File plot_pdf = glob('*.cc.plot.pdf')[0]\n        File plot_png = glob('*.cc.plot.png')[0]\n        File score = glob('*.cc.qc')[0]\n    }\n    runtime {\n        cpu : cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask jsd {\n    input {\n        Array[File?] nodup_bams\n        File? blacklist\n        Int mapq_thresh\n\n        Int cpu\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(nodup_bams, \"G\")\n    Float mem_gb = 5.0 + mem_factor * input_file_size_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_jsd.py) \\\n            ${sep=' ' select_all(nodup_bams)} \\\n            ${'--mapq-thresh '+ mapq_thresh} \\\n            ${'--blacklist '+ blacklist} \\\n            ${'--nth ' + cpu}\n    }\n    output {\n        File plot = glob('*.png')[0]\n        Array[File] jsd_qcs = glob('*.jsd.qc')\n    }\n    runtime {\n        cpu : cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask count_signal_track {\n    input {\n        File? ta             # tag-align\n        File chrsz            # 2-col chromosome sizes file\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float mem_gb = 8.0\n    command {\n        set -e\n        python3 $(which encode_task_count_signal_track.py) \\\n            ${ta} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--mem-gb ' + mem_gb}\n    }\n    output {\n        File pos_bw = glob('*.positive.bigwig')[0]\n        File neg_bw = glob('*.negative.bigwig')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask call_peak {\n    input {\n        String peak_caller\n        String peak_type\n\n        File? ta\n        String gensz        # Genome size (sum of entries in 2nd column of \n                            # chr. sizes file, or hs for human, ms for mouse)\n        File chrsz            # 2-col chromosome sizes file\n        Int cap_num_peak    # cap number of raw peaks called from MACS2\n        Float pval_thresh      # p.value threshold\n        Int smooth_win         # size of smoothing window\n        File? blacklist     # blacklist BED to filter raw peaks\n        String? regex_bfilt_peak_chr_name\n\n        Int cpu\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(ta, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n\n        if [ '${peak_caller}' == 'macs2' ]; then\n            python3 $(which encode_task_macs2_atac.py) \\\n                ${ta} \\\n                ${'--gensz ' + gensz} \\\n                ${'--chrsz ' + chrsz} \\\n                ${'--cap-num-peak ' + cap_num_peak} \\\n                ${'--pval-thresh '+ pval_thresh} \\\n                ${'--smooth-win '+ smooth_win} \\\n                ${'--mem-gb ' + mem_gb}\n        fi\n\n        python3 $(which encode_task_post_call_peak_atac.py) \\\n            $(ls *Peak.gz) \\\n            ${'--ta ' + ta} \\\n            ${'--regex-bfilt-peak-chr-name \\'' + regex_bfilt_peak_chr_name + '\\''} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--peak-type ' + peak_type} \\\n            ${'--blacklist ' + blacklist}\n    }\n    output {\n        File peak = glob('*[!.][!b][!f][!i][!l][!t].'+peak_type+'.gz')[0]\n        # generated by post_call_peak py\n        File bfilt_peak = glob('*.bfilt.'+peak_type+'.gz')[0]\n        File bfilt_peak_bb = glob('*.bfilt.'+peak_type+'.bb')[0]\n        File bfilt_peak_starch = glob('*.bfilt.'+peak_type+'.starch')[0]\n        File bfilt_peak_hammock = glob('*.bfilt.'+peak_type+'.hammock.gz*')[0]\n        File bfilt_peak_hammock_tbi = glob('*.bfilt.'+peak_type+'.hammock.gz*')[1]\n        File frip_qc = glob('*.frip.qc')[0]\n        File peak_region_size_qc = glob('*.peak_region_size.qc')[0]\n        File peak_region_size_plot = glob('*.peak_region_size.png')[0]\n        File num_peak_qc = glob('*.num_peak.qc')[0]\n    }\n    runtime {\n        cpu : if peak_caller == 'macs2' then 1 else cpu\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n        preemptible: 0\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask macs2_signal_track {\n    input {\n        File? ta\n        String gensz        # Genome size (sum of entries in 2nd column of \n                            # chr. sizes file, or hs for human, ms for mouse)\n        File chrsz            # 2-col chromosome sizes file\n        Float pval_thresh      # p.value threshold\n        Int smooth_win         # size of smoothing window\n\n        Float mem_factor\n        Int time_hr\n        Float disk_factor\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(ta, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n\n    command {\n        set -e\n        python3 $(which encode_task_macs2_signal_track_atac.py) \\\n            ${ta} \\\n            ${'--gensz '+ gensz} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--pval-thresh '+ pval_thresh} \\\n            ${'--smooth-win '+ smooth_win} \\\n            ${'--mem-gb ' + mem_gb}\n    }\n    output {\n        File pval_bw = glob('*.pval.signal.bigwig')[0]\n        File fc_bw = glob('*.fc.signal.bigwig')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : time_hr\n        disks : 'local-disk ${disk_gb} SSD'\n        preemptible: 0\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask idr {\n    input {\n        String prefix         # prefix for IDR output file\n        File? peak1\n        File? peak2\n        File? peak_pooled\n        Float idr_thresh\n        File? blacklist     # blacklist BED to filter raw peaks\n        String regex_bfilt_peak_chr_name\n        # parameters to compute FRiP\n        File? ta            # to calculate FRiP\n        File chrsz            # 2-col chromosome sizes file\n        String peak_type\n        String rank\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        touch null\n        python3 $(which encode_task_idr.py) \\\n            ${peak1} ${peak2} ${peak_pooled} \\\n            ${'--prefix ' + prefix} \\\n            ${'--idr-thresh ' + idr_thresh} \\\n            ${'--peak-type ' + peak_type} \\\n            --idr-rank ${rank} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--blacklist '+ blacklist} \\\n            ${'--regex-bfilt-peak-chr-name \\'' + regex_bfilt_peak_chr_name + '\\''} \\\n            ${'--ta ' + ta}\n    }\n    output {\n        File idr_peak = glob('*[!.][!b][!f][!i][!l][!t].'+peak_type+'.gz')[0]\n        File bfilt_idr_peak = glob('*.bfilt.'+peak_type+'.gz')[0]\n        File bfilt_idr_peak_bb = glob('*.bfilt.'+peak_type+'.bb')[0]\n        File bfilt_idr_peak_starch = glob('*.bfilt.'+peak_type+'.starch')[0]\n        File bfilt_idr_peak_hammock = glob('*.bfilt.'+peak_type+'.hammock.gz*')[0]\n        File bfilt_idr_peak_hammock_tbi = glob('*.bfilt.'+peak_type+'.hammock.gz*')[1]\n        File idr_plot = glob('*.txt.png')[0]\n        File idr_unthresholded_peak = glob('*.txt.gz')[0]\n        File idr_log = glob('*.idr*.log')[0]\n        File frip_qc = if defined(ta) then glob('*.frip.qc')[0] else glob('null')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '4 GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask overlap {\n    input {\n        String prefix         # prefix for IDR output file\n        File? peak1\n        File? peak2\n        File? peak_pooled\n        File? blacklist     # blacklist BED to filter raw peaks\n        String regex_bfilt_peak_chr_name\n        File? ta        # to calculate FRiP\n        File chrsz            # 2-col chromosome sizes file\n        String peak_type\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        touch null \n        python3 $(which encode_task_overlap.py) \\\n            ${peak1} ${peak2} ${peak_pooled} \\\n            ${'--prefix ' + prefix} \\\n            ${'--peak-type ' + peak_type} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--blacklist '+ blacklist} \\\n            --nonamecheck \\\n            ${'--regex-bfilt-peak-chr-name \\'' + regex_bfilt_peak_chr_name + '\\''} \\\n            ${'--ta ' + ta}\n    }\n    output {\n        File overlap_peak = glob('*[!.][!b][!f][!i][!l][!t].'+peak_type+'.gz')[0]\n        File bfilt_overlap_peak = glob('*.bfilt.'+peak_type+'.gz')[0]\n        File bfilt_overlap_peak_bb = glob('*.bfilt.'+peak_type+'.bb')[0]\n        File bfilt_overlap_peak_starch = glob('*.bfilt.'+peak_type+'.starch')[0]\n        File bfilt_overlap_peak_hammock = glob('*.bfilt.'+peak_type+'.hammock.gz*')[0]\n        File bfilt_overlap_peak_hammock_tbi = glob('*.bfilt.'+peak_type+'.hammock.gz*')[1]\n        File frip_qc = if defined(ta) then glob('*.frip.qc')[0] else glob('null')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '4 GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask reproducibility {\n    input {\n        String prefix\n        Array[File] peaks # peak files from pair of true replicates\n                            # in a sorted order. for example of 4 replicates,\n                            # 1,2 1,3 1,4 2,3 2,4 3,4.\n                            # x,y means peak file from rep-x vs rep-y\n        Array[File] peaks_pr    # peak files from pseudo replicates\n        File? peak_ppr            # Peak file from pooled pseudo replicate.\n        String peak_type\n        File chrsz            # 2-col chromosome sizes file\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python3 $(which encode_task_reproducibility.py) \\\n            ${sep=' ' peaks} \\\n            --peaks-pr ${sep=' ' peaks_pr} \\\n            ${'--peak-ppr '+ peak_ppr} \\\n            --prefix ${prefix} \\\n            ${'--peak-type ' + peak_type} \\\n            ${'--chrsz ' + chrsz}\n    }\n    output {\n        File optimal_peak = glob('*optimal_peak.*.gz')[0]\n        File optimal_peak_bb = glob('*optimal_peak.*.bb')[0]\n        File optimal_peak_starch = glob('*optimal_peak.*.starch')[0]\n        File optimal_peak_hammock = glob('*optimal_peak.*.hammock.gz*')[0]\n        File optimal_peak_hammock_tbi = glob('*optimal_peak.*.hammock.gz*')[1]\n        File conservative_peak = glob('*conservative_peak.*.gz')[0]\n        File conservative_peak_bb = glob('*conservative_peak.*.bb')[0]\n        File conservative_peak_starch = glob('*conservative_peak.*.starch')[0]\n        File conservative_peak_hammock = glob('*conservative_peak.*.hammock.gz*')[0]\n        File conservative_peak_hammock_tbi = glob('*conservative_peak.*.hammock.gz*')[1]\n        File reproducibility_qc = glob('*reproducibility.qc')[0]\n        # QC metrics for optimal peak\n        File peak_region_size_qc = glob('*.peak_region_size.qc')[0]\n        File peak_region_size_plot = glob('*.peak_region_size.png')[0]\n        File num_peak_qc = glob('*.num_peak.qc')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '4 GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask preseq {\n    input {\n        File? bam\n        Boolean paired_end\n\n        Float mem_factor\n        Float disk_factor\n        String? picard_java_heap\n        File? null\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(bam, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Float samtools_mem_gb = 0.8 * mem_gb\n    Int disk_gb = round(20.0 + disk_factor * input_file_size_gb)\n    Float picard_java_heap_factor = 0.9\n\n    command {\n        set -e\n        python3 $(which encode_task_preseq.py) \\\n            ${if paired_end then '--paired-end' else ''} \\\n            ${'--bam ' + bam} \\\n            ${'--mem-gb ' + samtools_mem_gb} \\\n            ${'--picard-java-heap ' + if defined(picard_java_heap) then picard_java_heap else (round(mem_gb * picard_java_heap_factor) + 'G')}\n        ${if !paired_end then 'touch null.picard_est_lib_size' else ''}\n    }\n    output {\n        File? picard_est_lib_size_qc = if paired_end then \n            glob('*.picard_est_lib_size.qc')[0] else null\n        File preseq_plot = glob('*.preseq.png')[0]\n        File preseq_log = glob('*.preseq.log')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : 4\n        disks : 'local-disk ${disk_gb} SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask annot_enrich {\n    input {\n        # Fraction of Reads In Annotated Regions\n        File? ta\n        File? blacklist\n        File? dnase\n        File? prom\n        File? enh\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python3 $(which encode_task_annot_enrich.py) \\\n            ${'--ta ' + ta} \\\n            ${'--blacklist ' + blacklist} \\\n            ${'--dnase ' + dnase} \\\n            ${'--prom ' + prom} \\\n            ${'--enh ' + enh}\n    }\n    output {\n        File annot_enrich_qc = glob('*.annot_enrich.qc')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '8 GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask tss_enrich {\n    # based on metaseq, which is still in python2\n    # python2 environment is required for this task\n    input {\n        Int? read_len\n        File? nodup_bam\n        File? tss\n        File chrsz\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python2 $(which encode_task_tss_enrich.py) \\\n            ${'--read-len ' + read_len} \\\n            ${'--nodup-bam ' + nodup_bam} \\\n            ${'--chrsz ' + chrsz} \\\n            ${'--tss ' + tss}\n    }\n    output {\n        File tss_plot = glob('*.tss_enrich.png')[0]\n        File tss_large_plot = glob('*.large_tss_enrich.png')[0]\n        File tss_enrich_qc = glob('*.tss_enrich.qc')[0]\n        Float tss_enrich = read_float(tss_enrich_qc)\n    }\n    runtime {\n        cpu : 1\n        memory : '8 GB'\n        time : 4\n        disks : 'local-disk 150 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask fraglen_stat_pe {\n    # for PE only\n    input {\n        File? nodup_bam\n        String? picard_java_heap\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float input_file_size_gb = size(nodup_bam, \"G\")\n    Float mem_gb = 8.0\n    Float picard_java_heap_factor = 0.9\n\n    command {\n        set -e\n        python3 $(which encode_task_fraglen_stat_pe.py) \\\n            ${'--nodup-bam ' + nodup_bam} \\\n            ${'--picard-java-heap ' + if defined(picard_java_heap) then picard_java_heap else (round(mem_gb * picard_java_heap_factor) + 'G')}\n    }\n    output {\n        File nucleosomal_qc = glob('*nucleosomal.qc')[0]\n        File fraglen_dist_plot = glob('*fraglen_dist.png')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : 6\n        disks : 'local-disk 150 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask gc_bias {\n    input {\n        File? nodup_bam\n        File ref_fa\n\n        String? picard_java_heap\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    Float mem_factor = 0.3\n    Float input_file_size_gb = size(nodup_bam, \"G\")\n    Float mem_gb = 4.0 + mem_factor * input_file_size_gb\n    Float picard_java_heap_factor = 0.9\n\n    command {\n        set -e\n        python3 $(which encode_task_gc_bias.py) \\\n            ${'--nodup-bam ' + nodup_bam} \\\n            ${'--ref-fa ' + ref_fa} \\\n            ${'--picard-java-heap ' + if defined(picard_java_heap) then picard_java_heap else (round(mem_gb * picard_java_heap_factor) + 'G')}\n    }\n    output {\n        File gc_plot = glob('*.gc_plot.png')[0]\n        File gc_log = glob('*.gc.txt')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '${mem_gb} GB'\n        time : 6\n        disks : 'local-disk 250 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask compare_signal_to_roadmap {\n    input {\n        File? pval_bw\n        File? dnase\n        File? reg2map_bed\n        File? reg2map\n        File? roadmap_meta\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python3 $(which encode_task_compare_signal_to_roadmap.py) \\\n            ${'--bigwig ' + pval_bw} \\\n            ${'--dnase ' + dnase} \\\n            ${'--reg2map-bed ' + reg2map_bed} \\\n            ${'--reg2map ' + reg2map} \\\n            ${'--roadmap-meta ' + roadmap_meta}\n    }\n    output {\n        File roadmap_compare_plot = glob('*roadmap_compare_plot.png')[0]\n        File roadmap_compare_log = glob('*roadmap_compare.log')[0]\n    }\n    runtime {\n        cpu : 1\n        memory : '8 GB'\n        time : 4\n        disks : 'local-disk 100 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask qc_report {\n    input {\n        String pipeline_ver\n        String title\n        String description\n        String? genome\n        # workflow params\n        Int multimapping\n        Array[Boolean] paired_ends\n        String pipeline_type\n        String aligner\n        Boolean no_dup_removal\n        String peak_caller\n        Int cap_num_peak\n        Float idr_thresh\n        Float pval_thresh\n        Int xcor_subsample_reads\n        # QCs\n        Array[File] frac_mito_qcs\n        Array[File] samstat_qcs\n        Array[File] nodup_samstat_qcs\n        Array[File] dup_qcs\n        Array[File] lib_complexity_qcs\n        Array[File] xcor_plots\n        Array[File] xcor_scores\n        File? jsd_plot\n        Array[File] jsd_qcs\n        Array[File] idr_plots\n        Array[File] idr_plots_pr\n        File? idr_plot_ppr\n        Array[File] frip_qcs\n        Array[File] frip_qcs_pr1\n        Array[File] frip_qcs_pr2\n        File? frip_qc_pooled\n        File? frip_qc_ppr1\n        File? frip_qc_ppr2\n        Array[File] frip_idr_qcs\n        Array[File] frip_idr_qcs_pr\n        File? frip_idr_qc_ppr\n        Array[File] frip_overlap_qcs\n        Array[File] frip_overlap_qcs_pr\n        File? frip_overlap_qc_ppr\n        File? idr_reproducibility_qc\n        File? overlap_reproducibility_qc\n\n        Array[File] annot_enrich_qcs\n        Array[File] tss_enrich_qcs\n        Array[File] tss_large_plots\n        Array[File] roadmap_compare_plots\n        Array[File] fraglen_dist_plots\n        Array[File] fraglen_nucleosomal_qcs\n        Array[File] gc_plots\n        Array[File] preseq_plots\n        Array[File] picard_est_lib_size_qcs\n\n        Array[File] peak_region_size_qcs\n        Array[File] peak_region_size_plots\n        Array[File] num_peak_qcs\n\n        File? idr_opt_peak_region_size_qc\n        File? idr_opt_peak_region_size_plot\n        File? idr_opt_num_peak_qc\n\n        File? overlap_opt_peak_region_size_qc\n        File? overlap_opt_peak_region_size_plot\n        File? overlap_opt_num_peak_qc\n\n        File? qc_json_ref\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        set -e\n        python3 $(which encode_task_qc_report.py) \\\n            --pipeline-prefix atac \\\n            ${'--pipeline-ver ' + pipeline_ver} \\\n            ${\"--title '\" + sub(title,\"'\",\"_\") + \"'\"} \\\n            ${\"--desc '\" + sub(description,\"'\",\"_\") + \"'\"} \\\n            ${'--genome ' + genome} \\\n            ${'--multimapping ' + multimapping} \\\n            --paired-ends ${sep=' ' paired_ends} \\\n            --pipeline-type ${pipeline_type} \\\n            --aligner ${aligner} \\\n            ${if (no_dup_removal) then '--no-dup-removal ' else ''} \\\n            --peak-caller ${peak_caller} \\\n            ${'--cap-num-peak ' + cap_num_peak} \\\n            --idr-thresh ${idr_thresh} \\\n            --pval-thresh ${pval_thresh} \\\n            --xcor-subsample-reads ${xcor_subsample_reads} \\\n            --frac-mito-qcs ${sep='_:_' frac_mito_qcs} \\\n            --samstat-qcs ${sep='_:_' samstat_qcs} \\\n            --nodup-samstat-qcs ${sep='_:_' nodup_samstat_qcs} \\\n            --dup-qcs ${sep='_:_' dup_qcs} \\\n            --lib-complexity-qcs ${sep='_:_' lib_complexity_qcs} \\\n            --xcor-plots ${sep='_:_' xcor_plots} \\\n            --xcor-scores ${sep='_:_' xcor_scores} \\\n            --idr-plots ${sep='_:_' idr_plots} \\\n            --idr-plots-pr ${sep='_:_' idr_plots_pr} \\\n            ${'--jsd-plot ' + jsd_plot} \\\n            --jsd-qcs ${sep='_:_' jsd_qcs} \\\n            ${'--idr-plot-ppr ' + idr_plot_ppr} \\\n            --frip-qcs ${sep='_:_' frip_qcs} \\\n            --frip-qcs-pr1 ${sep='_:_' frip_qcs_pr1} \\\n            --frip-qcs-pr2 ${sep='_:_' frip_qcs_pr2} \\\n            ${'--frip-qc-pooled ' + frip_qc_pooled} \\\n            ${'--frip-qc-ppr1 ' + frip_qc_ppr1} \\\n            ${'--frip-qc-ppr2 ' + frip_qc_ppr2} \\\n            --frip-idr-qcs ${sep='_:_' frip_idr_qcs} \\\n            --frip-idr-qcs-pr ${sep='_:_' frip_idr_qcs_pr} \\\n            ${'--frip-idr-qc-ppr ' + frip_idr_qc_ppr} \\\n            --frip-overlap-qcs ${sep='_:_' frip_overlap_qcs} \\\n            --frip-overlap-qcs-pr ${sep='_:_' frip_overlap_qcs_pr} \\\n            ${'--frip-overlap-qc-ppr ' + frip_overlap_qc_ppr} \\\n            ${'--idr-reproducibility-qc ' + idr_reproducibility_qc} \\\n            ${'--overlap-reproducibility-qc ' + overlap_reproducibility_qc} \\\n            --annot-enrich-qcs ${sep='_:_' annot_enrich_qcs} \\\n            --tss-enrich-qcs ${sep='_:_' tss_enrich_qcs} \\\n            --tss-large-plots ${sep='_:_' tss_large_plots} \\\n            --roadmap-compare-plots ${sep='_:_' roadmap_compare_plots} \\\n            --fraglen-dist-plots ${sep='_:_' fraglen_dist_plots} \\\n            --fraglen-nucleosomal-qcs ${sep='_:_' fraglen_nucleosomal_qcs} \\\n            --gc-plots ${sep='_:_' gc_plots} \\\n            --preseq-plots ${sep='_:_' preseq_plots} \\\n            --picard-est-lib-size-qcs ${sep='_:_' picard_est_lib_size_qcs} \\\n            --peak-region-size-qcs ${sep='_:_' peak_region_size_qcs} \\\n            --peak-region-size-plots ${sep='_:_' peak_region_size_plots} \\\n            --num-peak-qcs ${sep='_:_' num_peak_qcs} \\\n            ${'--idr-opt-peak-region-size-qc ' + idr_opt_peak_region_size_qc} \\\n            ${'--idr-opt-peak-region-size-plot ' + idr_opt_peak_region_size_plot} \\\n            ${'--idr-opt-num-peak-qc ' + idr_opt_num_peak_qc} \\\n            ${'--overlap-opt-peak-region-size-qc ' + overlap_opt_peak_region_size_qc} \\\n            ${'--overlap-opt-peak-region-size-plot ' + overlap_opt_peak_region_size_plot} \\\n            ${'--overlap-opt-num-peak-qc ' + overlap_opt_num_peak_qc} \\\n            --out-qc-html qc.html \\\n            --out-qc-json qc.json \\\n            ${'--qc-json-ref ' + qc_json_ref}\n    }\n    output {\n        File report = glob('*qc.html')[0]\n        File qc_json = glob('*qc.json')[0]\n        Boolean qc_json_ref_match = read_string('qc_json_ref_match.txt')=='True'\n    }\n    runtime {\n        cpu : 1\n        memory : '4 GB'\n        time : 4\n        disks : 'local-disk 50 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask read_genome_tsv {\n    input {\n        File? genome_tsv\n        String? null_s\n\n        RuntimeEnvironment runtime_environment\n    }\n    command <<<\n        echo \"$(basename ~{genome_tsv})\" > genome_name\n        # create empty files for all entries\n        touch ref_fa bowtie2_idx_tar chrsz gensz blacklist blacklist2\n        touch ref_mito_fa\n        touch bowtie2_mito_idx_tar\n        touch tss tss_enrich # for backward compatibility\n        touch dnase prom enh reg2map reg2map_bed roadmap_meta\n        touch mito_chr_name\n        touch regex_bfilt_peak_chr_name\n\n        python <<CODE\n        import os\n        with open('~{genome_tsv}','r') as fp:\n            for line in fp:\n                arr = line.strip('\\n').split('\\t')\n                if arr:\n                    key, val = arr\n                    with open(key,'w') as fp2:\n                        fp2.write(val)\n        CODE\n    >>>\n    output {\n        String? genome_name = read_string('genome_name')\n        String? ref_fa = if size('ref_fa')==0 then null_s else read_string('ref_fa')\n        String? ref_mito_fa = if size('ref_mito_fa')==0 then null_s else read_string('ref_mito_fa')\n        String? bowtie2_idx_tar = if size('bowtie2_idx_tar')==0 then null_s else read_string('bowtie2_idx_tar')\n        String? bowtie2_mito_idx_tar = if size('bowtie2_mito_idx_tar')==0 then null_s else read_string('bowtie2_mito_idx_tar')\n        String? chrsz = if size('chrsz')==0 then null_s else read_string('chrsz')\n        String? gensz = if size('gensz')==0 then null_s else read_string('gensz')\n        String? blacklist = if size('blacklist')==0 then null_s else read_string('blacklist')\n        String? blacklist2 = if size('blacklist2')==0 then null_s else read_string('blacklist2')\n        String? mito_chr_name = if size('mito_chr_name')==0 then null_s else read_string('mito_chr_name')\n        String? regex_bfilt_peak_chr_name = if size('regex_bfilt_peak_chr_name')==0 then 'chr[\\\\dXY]+'\n            else read_string('regex_bfilt_peak_chr_name')\n        String? tss = if size('tss')!=0 then read_string('tss')\n            else if size('tss_enrich')!=0 then read_string('tss_enrich') else null_s\n        String? dnase = if size('dnase')==0 then null_s else read_string('dnase')\n        String? prom = if size('prom')==0 then null_s else read_string('prom')\n        String? enh = if size('enh')==0 then null_s else read_string('enh')\n        String? reg2map = if size('reg2map')==0 then null_s else read_string('reg2map')\n        String? reg2map_bed = if size('reg2map_bed')==0 then null_s else read_string('reg2map_bed')\n        String? roadmap_meta = if size('roadmap_meta')==0 then null_s else read_string('roadmap_meta')\n    }\n    runtime {\n        maxRetries : 0\n        cpu : 1\n        memory : '2 GB'\n        time : 4\n        disks : 'local-disk 10 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n\ntask raise_exception {\n    input {\n        String msg\n\n        # runtime environment\n        RuntimeEnvironment runtime_environment\n    }\n    command {\n        echo -e \"\\n* Error: ${msg}\\n\" >&2\n        exit 2\n    }\n    output {\n        String error_msg = '${msg}'\n    }\n    runtime {\n        maxRetries : 0\n        cpu : 1\n        memory : '2 GB'\n        time : 4\n        disks : 'local-disk 10 SSD'\n\n        docker : runtime_environment.docker\n        singularity : runtime_environment.singularity\n        conda : runtime_environment.conda\n    }\n}\n",
        "root": "",
        "options": "{\n  \"backend\": \"Local\",\n  \"default_runtime_attributes\": {\n    \"environment\": \"singularity\",\n    \"maxRetries\": 1,\n    \"singularity\": \"https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif\",\n    \"singularity_bindpath\": \"/costellolab/data3/sermare/atac-seq-pipeline\"\n  }\n}",
        "inputs": "{\n    \"atac.pipeline_type\": \"atac\",\n    \"atac.genome_tsv\": \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/064fc44179753a3d83d3bd56ae3aeb84/hg38.local.tsv\",\n    \"atac.fastqs_rep1_R1\": [\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz\"\n    ],\n    \"atac.fastqs_rep1_R2\": [\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz\"\n    ],\n    \"atac.fastqs_rep2_R1\": [\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz\"\n    ],\n    \"atac.fastqs_rep2_R2\": [\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz\",\n        \"/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz\"\n    ],\n    \"atac.paired_end\": true,\n    \"atac.auto_detect_adapter\": true,\n    \"atac.enable_xcor\": true,\n    \"atac.title\": \"ENCSR356KRQ (subsampled 1/400)\",\n    \"atac.description\": \"ATAC-seq on primary keratinocytes in day 0.0 of differentiation\"\n}",
        "workflowUrl": "/costellolab/data3/sermare/atac-seq-pipeline/atac.wdl",
        "labels": "{\n    \"caper-backend\": \"Local\",\n    \"caper-str-label\": \"ENCSR356KRQ_subsampled\",\n    \"caper-user\": \"sermare\"\n}"
    },
    "calls": {
        "atac.bam2ta": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_bam2ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/inputs/-62603625/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --paired-end \\\n     \\\n    --mito-chr-name chrM \\\n    --subsample 0 \\\n    --mem-gb 3.2065324255079037 \\\n    --nth 2",
                "shardIndex": 0,
                "outputs": {
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "C74D97B01EAE257E44AA9D5BADE97BAF",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1EB01D534768C933E7F9F2951CA3E27C",
                        "input": {
                            "Boolean disable_tn5_shift": "68934A3E9455FA72420237EB05902327",
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "C20AD4D76FE97759AA27A0C99BFF6710",
                            "Int subsample": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Float input_file_size_gb": "B1D7BB7A3730744A04D757AEA2F04B95",
                            "Float disk_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "72FE1116BB77F00EDE27E27214EC97A9",
                            "Float samtools_mem_gb": "670C43D2F9E33E9BE1D998D446158CDA",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File bam": "99768eb593b999b66806b97e35fc1f8b",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.3,
                    "disable_tn5_shift": false,
                    "input_file_size_gb": 0.027218439616262913,
                    "subsample": 0,
                    "time_hr": 12,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.0,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 4.008165531884879,
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "samtools_mem_gb": 3.2065324255079037
                },
                "returnCode": 0,
                "jobId": "41711",
                "backend": "Local",
                "end": "2022-07-08T20:50:15.365Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:49:50.102Z",
                        "endTime": "2022-07-08T20:49:50.104Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:49:50.104Z",
                        "endTime": "2022-07-08T20:49:50.113Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:49:50.113Z",
                        "endTime": "2022-07-08T20:49:50.120Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.061Z",
                        "endTime": "2022-07-08T20:49:50.102Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "endTime": "2022-07-08T20:50:14.186Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:49:50.120Z"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.060Z",
                        "endTime": "2022-07-08T20:49:48.061Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:50:14.186Z",
                        "endTime": "2022-07-08T20:50:15.364Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:50:15.365Z",
                        "startTime": "2022-07-08T20:50:15.364Z"
                    }
                ],
                "start": "2022-07-08T20:49:48.060Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_bam2ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/inputs/-70362984/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --paired-end \\\n     \\\n    --mito-chr-name chrM \\\n    --subsample 0 \\\n    --mem-gb 3.2077024448662996 \\\n    --nth 2",
                "shardIndex": 1,
                "outputs": {
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "C74D97B01EAE257E44AA9D5BADE97BAF",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1EB01D534768C933E7F9F2951CA3E27C",
                        "input": {
                            "Boolean disable_tn5_shift": "68934A3E9455FA72420237EB05902327",
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "C20AD4D76FE97759AA27A0C99BFF6710",
                            "Int subsample": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Float input_file_size_gb": "8818900CAAEE5B6BD4258C32DE0FE1F6",
                            "Float disk_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "486C69A0C925F0562656B5500ABBB20F",
                            "Float samtools_mem_gb": "3F44A498D8C5E494B4B564683CF3A647",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File bam": "653b6b0dfc16ce79b4731ddf3b9e320d",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.3,
                    "disable_tn5_shift": false,
                    "input_file_size_gb": 0.032093520276248455,
                    "subsample": 0,
                    "time_hr": 12,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.0,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 4.0096280560828745,
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "samtools_mem_gb": 3.2077024448662996
                },
                "returnCode": 0,
                "jobId": "45531",
                "backend": "Local",
                "end": "2022-07-08T20:52:54.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:53.542Z",
                        "endTime": "2022-07-08T20:52:54.359Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:52:24.110Z",
                        "endTime": "2022-07-08T20:52:24.115Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:52:54.359Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:52:54.360Z"
                    },
                    {
                        "endTime": "2022-07-08T20:52:24.101Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:52:24.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:21.137Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:52:21.138Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:24.101Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:52:24.110Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:24.115Z",
                        "endTime": "2022-07-08T20:52:53.542Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:21.138Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:52:24.101Z"
                    }
                ],
                "start": "2022-07-08T20:52:21.137Z"
            }
        ],
        "atac.read_genome_tsv": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-read_genome_tsv/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "echo \"$(basename /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-read_genome_tsv/inputs/444204422/hg38.local.tsv)\" > genome_name\n# create empty files for all entries\ntouch ref_fa bowtie2_idx_tar chrsz gensz blacklist blacklist2\ntouch ref_mito_fa\ntouch bowtie2_mito_idx_tar\ntouch tss tss_enrich # for backward compatibility\ntouch dnase prom enh reg2map reg2map_bed roadmap_meta\ntouch mito_chr_name\ntouch regex_bfilt_peak_chr_name\n\npython <<CODE\nimport os\nwith open('/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-read_genome_tsv/inputs/444204422/hg38.local.tsv','r') as fp:\n    for line in fp:\n        arr = line.strip('\\n').split('\\t')\n        if arr:\n            key, val = arr\n            with open(key,'w') as fp2:\n                fp2.write(val)\nCODE",
                "shardIndex": -1,
                "outputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "tss": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f16cc7892540d7a9bc3207cc44eb8288/ENCFF766FGL.bed.gz",
                    "enh": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1d3aa436b05f16a509edb94789c061d3/ENCFF212UAV.bed.gz",
                    "ref_mito_fa": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f43b63a83784d3ec8055f1a22168ed89/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only.fasta.gz",
                    "ref_fa": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/caf534ed3cf684406e731d19be272b4a/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz",
                    "reg2map": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3b39284516e676ea52238f0636c0bbbf/hg38_dnase_avg_fseq_signal_formatted.txt.gz",
                    "roadmap_meta": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a9745b33b4ffdd83d7d2c5a7d3c8036a/hg38_dnase_avg_fseq_signal_metadata.txt",
                    "mito_chr_name": "chrM",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "bowtie2_idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3ff4ac4c3f59d096b1a3842a182072ae/ENCFF110MCL.tar.gz",
                    "genome_name": "hg38",
                    "reg2map_bed": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c73f434c3fa4f3f54bc2ecad09c065c2/hg38_celltype_compare_subsample.bed.gz",
                    "gensz": "hs",
                    "bowtie2_mito_idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/df5193e07055d13c48be59bacd0f56b8/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only_bowtie2_index.tar.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "blacklist2": null,
                    "prom": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/0cbd2c602ddad252bc39729fc8a29286/ENCFF140XLU.bed.gz",
                    "dnase": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/805e179275a9c0fb7a37def40c4312d1/ENCFF304XEX.bed.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "0",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "6F4922F45568161A8CDF4AD2299F6D23",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Optional(String) chrsz": "D4F18CDF90FCD98B1D444A137124EEFF",
                            "Optional(String) gensz": "4E9C991DACE79D32DC95E1786A251C28",
                            "Optional(String) bowtie2_idx_tar": "7002F9AE911D4075E4A0FB7FC2FBB1B0",
                            "Optional(String) reg2map_bed": "F4A65C2AF79D1EADC123E13AE4A2DAEF",
                            "Optional(String) genome_name": "7EC158EA4FE08BC5C050FCE05BB702F5",
                            "Optional(String) mito_chr_name": "95ACE380B920F62E8B4189B7BFA8DE5A",
                            "Optional(String) reg2map": "F3A19DABFBBDE1A0456ADC2AD4D974AA",
                            "Optional(String) roadmap_meta": "2EC581180DFACFCA320B109ABBE43F96",
                            "Optional(String) dnase": "1C6B72EE61E0869580852E9CE2D6F4CC",
                            "Optional(String) bowtie2_mito_idx_tar": "A851A256A62F876B6B5FDB933CB54A6A",
                            "Optional(String) prom": "D654CB0E9A6FCB9DB588508A6082633B",
                            "Optional(String) ref_fa": "FF4031A4B1F506164DB071652273A922",
                            "Optional(String) enh": "14BBB5AE5B3D132C0DE386E8395884D0",
                            "Optional(String) ref_mito_fa": "DD95E5A9E7E4DAAFC541BD9652ABA8BB",
                            "Optional(String) tss": "C683951EB65C940DEA3CD9CFC58DF75B",
                            "Optional(String) regex_bfilt_peak_chr_name": "A0964AEF638DE5FC78473C761B5B4B81",
                            "Optional(String) blacklist": "844E654445100F2887674F102FB5369F",
                            "Optional(String) blacklist2": "8B8D9781F2CFB8BF355C4AC17C0CCB14"
                        },
                        "input count": "A87FF679A2F3E71D9181A67B7542122C",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "06B49ACB263F83A66CBACD55FA078647",
                        "input": {
                            "File genome_tsv": "aabca769183cf85452d89df5e5e23f5f",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            }
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "genome_tsv": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/064fc44179753a3d83d3bd56ae3aeb84/hg38.local.tsv",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "null_s": null
                },
                "returnCode": 0,
                "jobId": "36599",
                "backend": "Local",
                "end": "2022-07-08T20:42:24.567Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-read_genome_tsv/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-read_genome_tsv",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:41:31.153Z",
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:41:31.360Z"
                    },
                    {
                        "endTime": "2022-07-08T20:41:28.155Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:41:26.116Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:24.567Z",
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:42:24.565Z"
                    },
                    {
                        "startTime": "2022-07-08T20:41:26.046Z",
                        "endTime": "2022-07-08T20:41:26.116Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:41:28.312Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:41:31.153Z"
                    },
                    {
                        "startTime": "2022-07-08T20:41:28.155Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:41:28.312Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:21.566Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:41:31.360Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:21.566Z",
                        "endTime": "2022-07-08T20:42:24.565Z",
                        "description": "UpdatingCallCache"
                    }
                ],
                "start": "2022-07-08T20:41:25.981Z"
            }
        ],
        "atac.pool_ta_pr1": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_pool_ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/inputs/450228679/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/inputs/442469320/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz \\\n    --prefix rep-pr1 \\",
                "shardIndex": -1,
                "outputs": {
                    "ta_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/execution/glob-199637d3015dccbe277f621a18be9eb4/rep-pr1.pooled.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta_pooled": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "FB53AF744073C79D1B4749F394DBC58C",
                        "input": {
                            "String prefix": "F339688F7FD33658C99CC1B2DAECEC25",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File tas": [
                                "454479e6d55bababc6c8c110940611d3",
                                "6c114ad5b1543030ff0293069bb3e114"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "tas": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz"
                    ],
                    "col": null,
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "prefix": "rep-pr1"
                },
                "returnCode": 0,
                "jobId": "48085",
                "backend": "Local",
                "end": "2022-07-08T20:53:42.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:25.468Z",
                        "endTime": "2022-07-08T20:53:32.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:53:32.107Z",
                        "endTime": "2022-07-08T20:53:32.113Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:53:32.101Z",
                        "endTime": "2022-07-08T20:53:32.101Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:32.101Z",
                        "endTime": "2022-07-08T20:53:32.107Z",
                        "description": "PreparingJob"
                    },
                    {
                        "endTime": "2022-07-08T20:53:41.885Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:53:32.113Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:25.467Z",
                        "endTime": "2022-07-08T20:53:25.468Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:53:42.359Z",
                        "endTime": "2022-07-08T20:53:42.359Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "endTime": "2022-07-08T20:53:42.359Z",
                        "startTime": "2022-07-08T20:53:41.885Z",
                        "description": "UpdatingCallCache"
                    }
                ],
                "start": "2022-07-08T20:53:25.467Z"
            }
        ],
        "atac.idr_pr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null\npython3 $(which encode_task_idr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/-1103841262/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/-473382637/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/-1155121054/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep1-pr1_vs_rep1-pr2 \\\n    --idr-thresh 0.05 \\\n    --peak-type narrowPeak \\\n    --idr-rank p.value \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                "shardIndex": 0,
                "outputs": {
                    "bfilt_idr_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.hammock.gz",
                    "bfilt_idr_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.hammock.gz.tbi",
                    "idr_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep1-pr1_vs_rep1-pr2.idr0.05.unthresholded-peaks.txt.png",
                    "idr_unthresholded_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-b34256f7f8497ceb77fad19f39663af0/rep1-pr1_vs_rep1-pr2.idr0.05.unthresholded-peaks.txt.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.frip.qc",
                    "idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep1-pr1_vs_rep1-pr2.idr0.05.narrowPeak.gz",
                    "bfilt_idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.gz",
                    "bfilt_idr_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.starch",
                    "idr_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-748df5c4b6fa48c407f98a93d42e64c6/rep1-pr1_vs_rep1-pr2.idr0.05.log",
                    "bfilt_idr_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-155eada107f68a2195912a39f5dee4bc/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.bb"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_idr_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File idr_plot": "8C2A61B8475499D094401E71D10EF7A5",
                            "File bfilt_idr_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File idr_unthresholded_peak": "D5DE07DD7B75A43B0EC0E76E60230445",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_idr_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_idr_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File idr_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File idr_log": "C06EE2EDC26CEA6DB33221E9459818FE",
                            "File bfilt_idr_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "C5C3C2247F2FDBE8A7657F1A4299F1B2",
                        "input": {
                            "File peak2": "ea0ea8b80cb7817ecbcf262de405f616",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String rank": "B7A5B8CB6541B45E733BDF70EC2FD63D",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "1985de51561382c1c12f3590b961438b",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "Float idr_thresh": "B14399CBAAC6DA4B5B733B483106383F",
                            "String prefix": "D3B9D7856D560D6435DB69A1320959A6",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "6bde80625dd3f48a27277a1f6dd59776"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prefix": "rep1-pr1_vs_rep1-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "rank": "p.value",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "idr_thresh": 0.05,
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "2875",
                "backend": "Local",
                "end": "2022-07-08T20:59:15.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:59:15.360Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:59:13.571Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:58:20.110Z",
                        "endTime": "2022-07-08T20:58:20.118Z"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:58:14.141Z",
                        "endTime": "2022-07-08T20:58:20.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:20.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:58:20.110Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.140Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:58:14.141Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:59:15.360Z",
                        "startTime": "2022-07-08T20:59:15.360Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:20.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:58:20.102Z"
                    },
                    {
                        "endTime": "2022-07-08T20:59:13.571Z",
                        "startTime": "2022-07-08T20:58:20.118Z",
                        "description": "RunningJob"
                    }
                ],
                "start": "2022-07-08T20:58:14.139Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null\npython3 $(which encode_task_idr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/-1111600621/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/-481141996/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/-1162880413/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep2-pr1_vs_rep2-pr2 \\\n    --idr-thresh 0.05 \\\n    --peak-type narrowPeak \\\n    --idr-rank p.value \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                "shardIndex": 1,
                "outputs": {
                    "bfilt_idr_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.hammock.gz",
                    "bfilt_idr_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.hammock.gz.tbi",
                    "idr_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep2-pr1_vs_rep2-pr2.idr0.05.unthresholded-peaks.txt.png",
                    "idr_unthresholded_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-b34256f7f8497ceb77fad19f39663af0/rep2-pr1_vs_rep2-pr2.idr0.05.unthresholded-peaks.txt.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.frip.qc",
                    "idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep2-pr1_vs_rep2-pr2.idr0.05.narrowPeak.gz",
                    "bfilt_idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.gz",
                    "bfilt_idr_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.starch",
                    "idr_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-748df5c4b6fa48c407f98a93d42e64c6/rep2-pr1_vs_rep2-pr2.idr0.05.log",
                    "bfilt_idr_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.bb"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_idr_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File idr_plot": "8C2A61B8475499D094401E71D10EF7A5",
                            "File bfilt_idr_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File idr_unthresholded_peak": "D5DE07DD7B75A43B0EC0E76E60230445",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_idr_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_idr_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File idr_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File idr_log": "C06EE2EDC26CEA6DB33221E9459818FE",
                            "File bfilt_idr_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "C5C3C2247F2FDBE8A7657F1A4299F1B2",
                        "input": {
                            "File peak2": "155112c2cb165fe417ef13be4d4af48f",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String rank": "B7A5B8CB6541B45E733BDF70EC2FD63D",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "bd1304b4901d80cece8630c74c5c22b5",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "Float idr_thresh": "B14399CBAAC6DA4B5B733B483106383F",
                            "String prefix": "BD6E4641CE7736B74BD12752F5CF9DC3",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "bc250193d0eee13248b11e102ead44c7"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prefix": "rep2-pr1_vs_rep2-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "rank": "p.value",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "idr_thresh": 0.05,
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "2723",
                "backend": "Local",
                "end": "2022-07-08T20:59:24.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:58:18.101Z",
                        "startTime": "2022-07-08T20:58:14.140Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:58:18.106Z",
                        "endTime": "2022-07-08T20:58:18.112Z"
                    },
                    {
                        "endTime": "2022-07-08T20:59:24.325Z",
                        "startTime": "2022-07-08T20:58:18.112Z",
                        "description": "RunningJob"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:59:24.358Z",
                        "endTime": "2022-07-08T20:59:24.359Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:18.101Z",
                        "endTime": "2022-07-08T20:58:18.101Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:58:18.101Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:58:18.106Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.140Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:58:14.140Z"
                    },
                    {
                        "endTime": "2022-07-08T20:59:24.358Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:59:24.325Z"
                    }
                ],
                "start": "2022-07-08T20:58:14.139Z"
            }
        ],
        "atac.pool_ta": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_pool_ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --prefix rep \\",
                "shardIndex": -1,
                "outputs": {
                    "ta_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327"
                        },
                        "output expression": {
                            "File ta_pooled": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "FB53AF744073C79D1B4749F394DBC58C",
                        "input": {
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File tas": [
                                "c5bfbc2e0cbc55dcdade63a7423df68b",
                                "77ccc2dd8f5d5f8a735fffbcaa615bad"
                            ],
                            "String prefix": "39D48941B7FCACE2B21796ED6A4A671B"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "prefix": "rep",
                    "tas": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz"
                    ],
                    "col": null
                },
                "returnCode": 0,
                "jobId": "47414",
                "backend": "Local",
                "end": "2022-07-08T20:53:21.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:08.102Z",
                        "endTime": "2022-07-08T20:53:08.108Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:53:08.101Z",
                        "endTime": "2022-07-08T20:53:08.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:01.958Z",
                        "endTime": "2022-07-08T20:53:01.959Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:53:08.115Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:53:19.469Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:21.360Z",
                        "startTime": "2022-07-08T20:53:21.360Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:01.959Z",
                        "endTime": "2022-07-08T20:53:08.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:53:08.108Z",
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:53:08.115Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:19.469Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:53:21.360Z"
                    }
                ],
                "start": "2022-07-08T20:53:01.957Z"
            }
        ],
        "atac.jsd": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_jsd.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/inputs/-62603625/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/inputs/-70362984/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --mapq-thresh 30 \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --nth 4",
                "shardIndex": -1,
                "outputs": {
                    "jsd_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-9c8d296ce3c847878b53bb751aed36dd/rep1.ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-9c8d296ce3c847878b53bb751aed36dd/rep2.ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc"
                    ],
                    "plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-fc36854b6867c1581ab159b09dd7e2f4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.jsd_plot.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Array(File) jsd_qcs": "0BC24A08F36093560592ABABF7B45F8C",
                            "File plot": "7E1F4339BF0E100D6B9E285B6B9F5D31"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "26C3E709F0C7331D5D3BBED84BEFF486",
                        "input": {
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "C20AD4D76FE97759AA27A0C99BFF6710",
                            "Float input_file_size_gb": "2D385CD63E4CC4E8973241A1D9B2227F",
                            "Float disk_factor": "D1BD83A33F1A841AB7FDA32449746CC4",
                            "Float mem_factor": "CB5AE17636E975F9BF71DDF5BC542075",
                            "Int cpu": "A87FF679A2F3E71D9181A67B7542122C",
                            "Float mem_gb": "D0EA85C7895C431ADD86F0B5653785EE",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File nodup_bams": [
                                "99768eb593b999b66806b97e35fc1f8b",
                                "653b6b0dfc16ce79b4731ddf3b9e320d"
                            ],
                            "Int mapq_thresh": "34173CB38F07F89DDBEBC2AC9128303F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.1,
                    "input_file_size_gb": 0.05931195989251137,
                    "time_hr": 12,
                    "mapq_thresh": 30,
                    "disk_factor": 2.0,
                    "disk_gb": 20,
                    "cpu": 4,
                    "nodup_bams": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam"
                    ],
                    "mem_gb": 5.005931195989251
                },
                "returnCode": 0,
                "jobId": "45946",
                "backend": "Local",
                "end": "2022-07-08T20:56:18.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:23.175Z",
                        "endTime": "2022-07-08T20:52:23.176Z",
                        "description": "Pending"
                    },
                    {
                        "endTime": "2022-07-08T20:56:18.359Z",
                        "startTime": "2022-07-08T20:56:16.728Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:52:30.122Z",
                        "endTime": "2022-07-08T20:52:30.128Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "endTime": "2022-07-08T20:52:30.107Z",
                        "startTime": "2022-07-08T20:52:30.107Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:52:30.107Z",
                        "endTime": "2022-07-08T20:52:30.122Z",
                        "description": "PreparingJob"
                    },
                    {
                        "endTime": "2022-07-08T20:56:16.728Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:52:30.128Z"
                    },
                    {
                        "startTime": "2022-07-08T20:56:18.359Z",
                        "endTime": "2022-07-08T20:56:18.359Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:52:23.176Z",
                        "endTime": "2022-07-08T20:52:30.107Z"
                    }
                ],
                "start": "2022-07-08T20:52:23.175Z"
            }
        ],
        "atac.annot_enrich": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_annot_enrich.py) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --dnase /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/inputs/1307076204/ENCFF304XEX.bed.gz \\\n    --prom /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/inputs/2067224719/ENCFF140XLU.bed.gz \\\n    --enh /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/inputs/1295214450/ENCFF212UAV.bed.gz",
                "shardIndex": 0,
                "outputs": {
                    "annot_enrich_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/execution/glob-5dc2759e1f2ec1b9d52ef565e3202c4e/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File annot_enrich_qc": "AF5D1EB7C4AFEB55E4082E50C1233E64"
                        },
                        "input count": "C9F0F895FB98AB9159F51FD0297E236D",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D086A900BBF173342053BD66CCE61962",
                        "input": {
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File dnase": "7e8a100a829b2d8a5379e32b2884dbe3",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "File enh": "b536f5e8c32c0a15293e77ba51ace605",
                            "File prom": "c6a6ceb23e2f951d3eb800657547f79a"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "enh": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1d3aa436b05f16a509edb94789c061d3/ENCFF212UAV.bed.gz",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prom": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/0cbd2c602ddad252bc39729fc8a29286/ENCFF140XLU.bed.gz",
                    "dnase": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/805e179275a9c0fb7a37def40c4312d1/ENCFF304XEX.bed.gz"
                },
                "returnCode": 0,
                "jobId": "42938",
                "backend": "Local",
                "end": "2022-07-08T20:51:09.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:50:20.718Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T20:50:20.718Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:24.102Z",
                        "endTime": "2022-07-08T20:50:24.108Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:51:09.361Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:51:09.361Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:20.718Z",
                        "endTime": "2022-07-08T20:50:24.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:50:24.114Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:51:08.554Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:24.108Z",
                        "endTime": "2022-07-08T20:50:24.114Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:51:08.554Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:51:09.361Z"
                    },
                    {
                        "endTime": "2022-07-08T20:50:24.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:50:24.101Z"
                    }
                ],
                "start": "2022-07-08T20:50:20.717Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_annot_enrich.py) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --dnase /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/inputs/1307076204/ENCFF304XEX.bed.gz \\\n    --prom /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/inputs/2067224719/ENCFF140XLU.bed.gz \\\n    --enh /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/inputs/1295214450/ENCFF212UAV.bed.gz",
                "shardIndex": 1,
                "outputs": {
                    "annot_enrich_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/execution/glob-5dc2759e1f2ec1b9d52ef565e3202c4e/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File annot_enrich_qc": "AF5D1EB7C4AFEB55E4082E50C1233E64"
                        },
                        "input count": "C9F0F895FB98AB9159F51FD0297E236D",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D086A900BBF173342053BD66CCE61962",
                        "input": {
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File dnase": "7e8a100a829b2d8a5379e32b2884dbe3",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "File enh": "b536f5e8c32c0a15293e77ba51ace605",
                            "File prom": "c6a6ceb23e2f951d3eb800657547f79a"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "enh": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1d3aa436b05f16a509edb94789c061d3/ENCFF212UAV.bed.gz",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prom": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/0cbd2c602ddad252bc39729fc8a29286/ENCFF140XLU.bed.gz",
                    "dnase": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/805e179275a9c0fb7a37def40c4312d1/ENCFF304XEX.bed.gz"
                },
                "returnCode": 0,
                "jobId": "47035",
                "backend": "Local",
                "end": "2022-07-08T20:53:54.358Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:53:02.109Z",
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:53:02.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:53.964Z",
                        "endTime": "2022-07-08T20:53:54.358Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.909Z",
                        "endTime": "2022-07-08T20:52:59.910Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:53:02.102Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:53:02.102Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:53:54.358Z",
                        "startTime": "2022-07-08T20:53:54.358Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:02.109Z",
                        "endTime": "2022-07-08T20:53:02.131Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:53:02.131Z",
                        "endTime": "2022-07-08T20:53:53.964Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.910Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:02.102Z"
                    }
                ],
                "start": "2022-07-08T20:52:59.909Z"
            }
        ],
        "atac.overlap_pr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null \npython3 $(which encode_task_overlap.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/-1103841262/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/-473382637/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/-1155121054/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep1-pr1_vs_rep1-pr2 \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --nonamecheck \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                "shardIndex": 0,
                "outputs": {
                    "bfilt_overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.gz",
                    "bfilt_overlap_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.hammock.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1-pr1_vs_rep1-pr2.overlap.bfilt.frip.qc",
                    "bfilt_overlap_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.starch",
                    "overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep1-pr1_vs_rep1-pr2.overlap.narrowPeak.gz",
                    "bfilt_overlap_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-155eada107f68a2195912a39f5dee4bc/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.bb",
                    "bfilt_overlap_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327"
                        },
                        "output expression": {
                            "File bfilt_overlap_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File overlap_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_overlap_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_overlap_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_overlap_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File bfilt_overlap_peak": "9AA37E04B33FA2979A74B09B286645DC"
                        },
                        "input count": "C20AD4D76FE97759AA27A0C99BFF6710",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "32C016665A9D930125E090A2D2CE9F25",
                        "input": {
                            "File peak2": "ea0ea8b80cb7817ecbcf262de405f616",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "1985de51561382c1c12f3590b961438b",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "String prefix": "D3B9D7856D560D6435DB69A1320959A6",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "6bde80625dd3f48a27277a1f6dd59776"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prefix": "rep1-pr1_vs_rep1-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "2570",
                "backend": "Local",
                "end": "2022-07-08T20:58:33.365Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:58:16.114Z",
                        "endTime": "2022-07-08T20:58:31.710Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:58:16.102Z",
                        "endTime": "2022-07-08T20:58:16.108Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:58:16.101Z",
                        "endTime": "2022-07-08T20:58:16.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.139Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:58:14.139Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.139Z",
                        "endTime": "2022-07-08T20:58:16.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:58:16.114Z",
                        "startTime": "2022-07-08T20:58:16.108Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:33.365Z",
                        "endTime": "2022-07-08T20:58:33.365Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:58:31.710Z",
                        "endTime": "2022-07-08T20:58:33.365Z",
                        "description": "UpdatingCallCache"
                    }
                ],
                "start": "2022-07-08T20:58:14.139Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null \npython3 $(which encode_task_overlap.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/-1111600621/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/-481141996/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/-1162880413/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep2-pr1_vs_rep2-pr2 \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --nonamecheck \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                "shardIndex": 1,
                "outputs": {
                    "bfilt_overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.gz",
                    "bfilt_overlap_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.hammock.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep2-pr1_vs_rep2-pr2.overlap.bfilt.frip.qc",
                    "bfilt_overlap_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.starch",
                    "overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep2-pr1_vs_rep2-pr2.overlap.narrowPeak.gz",
                    "bfilt_overlap_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.bb",
                    "bfilt_overlap_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_overlap_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File overlap_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_overlap_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_overlap_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_overlap_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File bfilt_overlap_peak": "9AA37E04B33FA2979A74B09B286645DC"
                        },
                        "input count": "C20AD4D76FE97759AA27A0C99BFF6710",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "32C016665A9D930125E090A2D2CE9F25",
                        "input": {
                            "File peak2": "155112c2cb165fe417ef13be4d4af48f",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "bd1304b4901d80cece8630c74c5c22b5",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "String prefix": "BD6E4641CE7736B74BD12752F5CF9DC3",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "bc250193d0eee13248b11e102ead44c7"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "prefix": "rep2-pr1_vs_rep2-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "3054",
                "backend": "Local",
                "end": "2022-07-08T20:58:39.358Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:58:38.424Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:58:22.112Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.141Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:58:14.141Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:58:39.358Z",
                        "endTime": "2022-07-08T20:58:39.358Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:22.100Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:58:22.101Z"
                    },
                    {
                        "endTime": "2022-07-08T20:58:22.106Z",
                        "startTime": "2022-07-08T20:58:22.101Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:58:14.141Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:58:22.100Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:22.106Z",
                        "endTime": "2022-07-08T20:58:22.112Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:58:38.424Z",
                        "endTime": "2022-07-08T20:58:39.358Z",
                        "description": "UpdatingCallCache"
                    }
                ],
                "start": "2022-07-08T20:58:14.141Z"
            }
        ],
        "atac.macs2_signal_track": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_macs2_signal_track_atac.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --gensz hs \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --pval-thresh 0.01 \\\n    --smooth-win 150 \\\n    --mem-gb 4.044360037893057",
                "shardIndex": 0,
                "outputs": {
                    "fc_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/execution/glob-8876d8ced974dc46a0c7a4fac20a3a95/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.fc.signal.bigwig",
                    "pval_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/execution/glob-7ab0340dfeb10ca109917cbdcc568548/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval.signal.bigwig"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File fc_bw": "30CA1AC0155EEF77A0D24129EB93BDE2",
                            "File pval_bw": "7F77D035692813E00FB136E1FC27603B"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "335A6B91D20A78105BF0CB53A675CB57",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "C2765955CF7EE33A1481DD0374525029",
                            "Float disk_factor": "8EE5D21B272D43A875504F3E5845E141",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "195863009FFA903E83AD7FD7E7DB63B1",
                            "Float mem_gb": "3981003323F7E2F43F33DF94E9F54CBA",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 12.0,
                    "input_file_size_gb": 0.003696669824421406,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 80.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "mem_gb": 4.044360037893057,
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "43090",
                "backend": "Local",
                "end": "2022-07-08T20:55:03.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:50:20.719Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T20:50:20.718Z"
                    },
                    {
                        "endTime": "2022-07-08T20:55:03.361Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:55:01.239Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:26.112Z",
                        "endTime": "2022-07-08T20:50:26.119Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:50:20.719Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:50:26.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:26.119Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:55:01.239Z"
                    },
                    {
                        "endTime": "2022-07-08T20:50:26.112Z",
                        "startTime": "2022-07-08T20:50:26.103Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:55:03.361Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:55:03.361Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:26.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:50:26.103Z"
                    }
                ],
                "start": "2022-07-08T20:50:20.718Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_macs2_signal_track_atac.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --gensz hs \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --pval-thresh 0.01 \\\n    --smooth-win 150 \\\n    --mem-gb 4.052793137729168",
                "shardIndex": 1,
                "outputs": {
                    "fc_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/execution/glob-8876d8ced974dc46a0c7a4fac20a3a95/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.fc.signal.bigwig",
                    "pval_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/execution/glob-7ab0340dfeb10ca109917cbdcc568548/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval.signal.bigwig"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5"
                        },
                        "output expression": {
                            "File pval_bw": "7F77D035692813E00FB136E1FC27603B",
                            "File fc_bw": "30CA1AC0155EEF77A0D24129EB93BDE2"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "335A6B91D20A78105BF0CB53A675CB57",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "5A9C5EE353C75E93C8197A4882BD1F15",
                            "Float disk_factor": "8EE5D21B272D43A875504F3E5845E141",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "195863009FFA903E83AD7FD7E7DB63B1",
                            "Float mem_gb": "8B35F37C4FDCF2D2BC06D4B21F609998",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac-macs2"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 12.0,
                    "input_file_size_gb": 0.004399428144097328,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 80.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "mem_gb": 4.052793137729168,
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "47169",
                "backend": "Local",
                "end": "2022-07-08T20:58:09.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:58:09.360Z",
                        "endTime": "2022-07-08T20:58:09.361Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:04.121Z",
                        "endTime": "2022-07-08T20:58:09.100Z",
                        "description": "RunningJob"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:53:04.113Z",
                        "endTime": "2022-07-08T20:53:04.121Z"
                    },
                    {
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:58:09.360Z",
                        "startTime": "2022-07-08T20:58:09.100Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.910Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:04.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:04.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:53:04.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:04.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:53:04.113Z"
                    },
                    {
                        "endTime": "2022-07-08T20:52:59.910Z",
                        "startTime": "2022-07-08T20:52:59.910Z",
                        "description": "Pending"
                    }
                ],
                "start": "2022-07-08T20:52:59.910Z"
            }
        ],
        "atac.call_peak_pr1": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/inputs/450228679/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.007402379065752\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/inputs/450228679/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 0,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "7498FFEAE85D451B4D9A1A493F4D5123",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "8B2548801351526A276743897D6DD3CE",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "454479e6d55bababc6c8c110940611d3",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.0018505947664380074,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.007402379065752,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "43974",
                "backend": "Local",
                "end": "2022-07-08T20:53:00.367Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:57.482Z",
                        "endTime": "2022-07-08T20:53:00.366Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:44.117Z",
                        "endTime": "2022-07-08T20:50:44.127Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.122Z",
                        "endTime": "2022-07-08T20:50:44.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.122Z",
                        "endTime": "2022-07-08T20:50:39.122Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:50:44.103Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:44.117Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:44.101Z",
                        "endTime": "2022-07-08T20:50:44.103Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:50:44.127Z",
                        "endTime": "2022-07-08T20:52:57.482Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:53:00.366Z",
                        "endTime": "2022-07-08T20:53:00.366Z",
                        "description": "UpdatingJobStore"
                    }
                ],
                "start": "2022-07-08T20:50:39.122Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/inputs/442469320/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.008808400481939\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/inputs/442469320/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "AA20587AA1ED1FE55BFF807E39B4C27F",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "9070DD6C1D9E29D75D9FBDEEADBA5E91",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "6c114ad5b1543030ff0293069bb3e114",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.002202100120484829,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.008808400481939,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "47698",
                "backend": "Local",
                "end": "2022-07-08T20:55:54.370Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:55:54.368Z",
                        "startTime": "2022-07-08T20:55:53.185Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:26.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:53:26.116Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:55:54.368Z",
                        "endTime": "2022-07-08T20:55:54.369Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:24.441Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:26.101Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:53:26.116Z",
                        "endTime": "2022-07-08T20:53:26.126Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:26.126Z",
                        "endTime": "2022-07-08T20:55:53.185Z",
                        "description": "RunningJob"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T20:53:24.440Z",
                        "endTime": "2022-07-08T20:53:24.441Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:26.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:53:26.102Z"
                    }
                ],
                "start": "2022-07-08T20:53:24.440Z"
            }
        ],
        "atac.fraglen_stat_pe": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_fraglen_stat_pe.py) \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/inputs/-62603625/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --picard-java-heap 7G",
                "shardIndex": 0,
                "outputs": {
                    "fraglen_dist_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/glob-91af6e0c311eb63a5d7756012b5bee93/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png",
                    "nucleosomal_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/glob-e3a982666d4957e5a84eacd606030c2c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File nucleosomal_qc": "71F9F59891FD2A77673C2151814A7DC3",
                            "File fraglen_dist_plot": "529A6363FC51FA2B0F9B34047437F9A6"
                        },
                        "input count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "F6FDAEEA9BED4457B0F00CD0876D71AA",
                        "input": {
                            "Float input_file_size_gb": "B1D7BB7A3730744A04D757AEA2F04B95",
                            "Float mem_gb": "585375C1448BFA3494298BDD79408081",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File nodup_bam": "99768eb593b999b66806b97e35fc1f8b"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "input_file_size_gb": 0.027218439616262913,
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "mem_gb": 8.0
                },
                "returnCode": 0,
                "jobId": "41853",
                "backend": "Local",
                "end": "2022-07-08T20:50:27.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:49:52.117Z",
                        "endTime": "2022-07-08T20:50:26.576Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.061Z",
                        "endTime": "2022-07-08T20:49:48.062Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:49:52.111Z",
                        "endTime": "2022-07-08T20:49:52.117Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:50:26.576Z",
                        "endTime": "2022-07-08T20:50:27.360Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:27.360Z",
                        "endTime": "2022-07-08T20:50:27.361Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:49:52.102Z",
                        "endTime": "2022-07-08T20:49:52.111Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:49:52.101Z",
                        "endTime": "2022-07-08T20:49:52.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "endTime": "2022-07-08T20:49:52.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:49:48.062Z"
                    }
                ],
                "start": "2022-07-08T20:49:48.061Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_fraglen_stat_pe.py) \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/inputs/-70362984/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --picard-java-heap 7G",
                "shardIndex": 1,
                "outputs": {
                    "nucleosomal_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/glob-e3a982666d4957e5a84eacd606030c2c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc",
                    "fraglen_dist_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/glob-91af6e0c311eb63a5d7756012b5bee93/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327"
                        },
                        "output expression": {
                            "File fraglen_dist_plot": "529A6363FC51FA2B0F9B34047437F9A6",
                            "File nucleosomal_qc": "71F9F59891FD2A77673C2151814A7DC3"
                        },
                        "input count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "F6FDAEEA9BED4457B0F00CD0876D71AA",
                        "input": {
                            "Float input_file_size_gb": "8818900CAAEE5B6BD4258C32DE0FE1F6",
                            "Float mem_gb": "585375C1448BFA3494298BDD79408081",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666"
                            },
                            "File nodup_bam": "653b6b0dfc16ce79b4731ddf3b9e320d"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                    },
                    "input_file_size_gb": 0.032093520276248455,
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "mem_gb": 8.0
                },
                "returnCode": 0,
                "jobId": "45656",
                "backend": "Local",
                "end": "2022-07-08T20:53:00.366Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:52:26.100Z",
                        "startTime": "2022-07-08T20:52:21.138Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:52:26.101Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:52:26.108Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:00.366Z",
                        "endTime": "2022-07-08T20:53:00.366Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:52:26.113Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:52:59.535Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:21.138Z",
                        "endTime": "2022-07-08T20:52:21.138Z",
                        "description": "Pending"
                    },
                    {
                        "endTime": "2022-07-08T20:52:26.101Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:52:26.100Z"
                    },
                    {
                        "endTime": "2022-07-08T20:52:26.113Z",
                        "startTime": "2022-07-08T20:52:26.108Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:52:59.535Z",
                        "endTime": "2022-07-08T20:53:00.366Z"
                    }
                ],
                "start": "2022-07-08T20:52:21.138Z"
            }
        ],
        "atac.call_peak": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.014786679297686\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 0,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "C2765955CF7EE33A1481DD0374525029",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "8DC07093CAFBFBE1654B651197556DBB",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.003696669824421406,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.014786679297686,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "43221",
                "backend": "Local",
                "end": "2022-07-08T20:54:21.369Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:50:20.719Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:50:20.720Z"
                    },
                    {
                        "startTime": "2022-07-08T20:54:20.265Z",
                        "endTime": "2022-07-08T20:54:21.369Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:28.126Z",
                        "endTime": "2022-07-08T20:54:20.265Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:50:28.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:50:28.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:54:21.369Z",
                        "endTime": "2022-07-08T20:54:21.369Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:50:28.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:28.114Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:50:28.114Z",
                        "endTime": "2022-07-08T20:50:28.126Z"
                    },
                    {
                        "endTime": "2022-07-08T20:50:28.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:50:20.720Z"
                    }
                ],
                "start": "2022-07-08T20:50:20.718Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.017597712576389\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "5A9C5EE353C75E93C8197A4882BD1F15",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "5A326E338891CCDCB289A2E3DDF5326C",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.004399428144097328,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.017597712576389,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "46890",
                "backend": "Local",
                "end": "2022-07-08T20:58:09.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:53:00.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:53:00.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:00.130Z",
                        "endTime": "2022-07-08T20:53:00.138Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.908Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:52:59.909Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:07.974Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:58:09.360Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:09.360Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:58:09.361Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.909Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:00.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:00.138Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:58:07.974Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:00.130Z",
                        "startTime": "2022-07-08T20:53:00.102Z",
                        "description": "PreparingJob"
                    }
                ],
                "start": "2022-07-08T20:52:59.908Z"
            }
        ],
        "atac.reproducibility_overlap": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_reproducibility.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/inputs/1053635816/rep1_vs_rep2.overlap.bfilt.narrowPeak.gz \\\n    --peaks-pr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/inputs/87297650/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/inputs/79538291/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.gz \\\n    --peak-ppr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/inputs/678381864/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.gz \\\n    --prefix overlap \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv",
                "shardIndex": -1,
                "outputs": {
                    "optimal_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-5b2709e8fa4f20cca33c67c963268b8c/overlap.optimal_peak.narrowPeak.starch",
                    "conservative_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-48f968fdbba07264a36ef0e5e4ad9da3/overlap.conservative_peak.narrowPeak.starch",
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-e2c73ffa35e91a202da536e2007c07a4/overlap.optimal_peak.peak_region_size.png",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-9826117ee260a5b864d958fe9ca989b0/overlap.optimal_peak.peak_region_size.qc",
                    "conservative_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-f628f97804061610489fb3df14b8b3f0/overlap.conservative_peak.narrowPeak.bb",
                    "optimal_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-240c97f2273cc92383b551c4d2655be9/overlap.optimal_peak.narrowPeak.bb",
                    "conservative_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-aae3f88ec555ee05b83e37921e9eb318/overlap.conservative_peak.narrowPeak.gz",
                    "conservative_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-29708b5a00e414f63a187d12af34d0d2/overlap.conservative_peak.narrowPeak.hammock.gz",
                    "optimal_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-1b1244d5baf1a7d98d4b7b76d79e43bf/overlap.optimal_peak.narrowPeak.gz",
                    "optimal_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-fe7dae7ccfff8f80b0a121847139e130/overlap.optimal_peak.narrowPeak.hammock.gz",
                    "reproducibility_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-2e0755477c7b64fb4cd35cd75c0b0f2a/overlap.reproducibility.qc",
                    "conservative_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-29708b5a00e414f63a187d12af34d0d2/overlap.conservative_peak.narrowPeak.hammock.gz.tbi",
                    "optimal_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-fe7dae7ccfff8f80b0a121847139e130/overlap.optimal_peak.narrowPeak.hammock.gz.tbi",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-3b1229fa29433fa118c2c80578c3259b/overlap.optimal_peak.num_peak.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File optimal_peak_hammock": "A2A50211B8F499FD036014D7316B856B",
                            "File optimal_peak": "E792AE7653F51CFF383E0F129F147864",
                            "File reproducibility_qc": "B87E093D4BF0AFD96E5223A38499136D",
                            "File optimal_peak_starch": "0E1B2521DD5C24A9D648480B4EB82D8B",
                            "File optimal_peak_hammock_tbi": "C54AABF460BC1E1FD78FF87DE6EC69EA",
                            "File conservative_peak_hammock": "0B8BF86DFAB8E61D244BD03F77DA71E9",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File conservative_peak_bb": "332821BB2A6A72161F97B63734680D94",
                            "File optimal_peak_bb": "760B26357255ABABCD779BB08AF52E8D",
                            "File conservative_peak_hammock_tbi": "408FB3573092D50CF4BF2994BBC0C10A",
                            "File conservative_peak_starch": "27D39928056E3A887F4D8766A2C345FE",
                            "File conservative_peak": "60F094243A793EE426AB64A114FDCB78",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "D3D9446802A44259755D38E6D163E820",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "CB6E3FE90C8B21140E5D7392D2A413CB",
                        "input": {
                            "File peaks_pr": [
                                "ab62af0f1593b71d86d53310faca98f3",
                                "6f22baf25e48213fe78ec1e943124884"
                            ],
                            "File peak_ppr": "5e5ca84f753dc16ba9e7de777127b39f",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File peaks": [
                                "7f27c386360c20b959c0a9d9a8c5b158"
                            ],
                            "String prefix": "A841E79414CB09388E49E356A980B6DD",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "peaks_pr": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1-pr1_vs_rep1-pr2.overlap.bfilt.narrowPeak.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep2-pr1_vs_rep2-pr2.overlap.bfilt.narrowPeak.gz"
                    ],
                    "prefix": "overlap",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak_ppr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.gz",
                    "peaks": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1_vs_rep2.overlap.bfilt.narrowPeak.gz"
                    ]
                },
                "returnCode": 0,
                "jobId": "5664",
                "backend": "Local",
                "end": "2022-07-08T21:00:57.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T21:00:57.359Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T21:00:57.360Z"
                    },
                    {
                        "endTime": "2022-07-08T21:00:54.488Z",
                        "startTime": "2022-07-08T21:00:36.115Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T21:00:36.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T21:00:36.109Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:35.948Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T21:00:36.101Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:36.109Z",
                        "endTime": "2022-07-08T21:00:36.115Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "endTime": "2022-07-08T21:00:57.359Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T21:00:54.488Z"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T21:00:35.948Z",
                        "endTime": "2022-07-08T21:00:35.948Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:36.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T21:00:36.102Z"
                    }
                ],
                "start": "2022-07-08T21:00:35.947Z"
            }
        ],
        "atac.tss_enrich": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython2 $(which encode_task_tss_enrich.py) \\\n    --read-len 76 \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/inputs/-62603625/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --tss /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/inputs/684533534/ENCFF766FGL.bed.gz",
                "shardIndex": 0,
                "outputs": {
                    "tss_enrich_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/glob-c2925ab77ebb371e8cafd2544a4ff6df/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc",
                    "tss_enrich": 19.469529156258762,
                    "tss_large_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/glob-0f56e22cbe1e192a4475f17c0a13db14/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png",
                    "tss_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/glob-0019bcacdbca3572b1d10d66892ea847/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-py2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "A87FF679A2F3E71D9181A67B7542122C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File tss_plot": "2AFE5C88C8054A090452EACE02F0AEAF",
                            "Float tss_enrich": "5AD940EE6B04B985FF50706637920CAC",
                            "File tss_enrich_qc": "01DAE78B54AEB47F54D9F142398DBADF",
                            "File tss_large_plot": "50C1BD1358E2A1961EC8E207127CD07A"
                        },
                        "input count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "5899F9AEC1BA59FC625251A6481E3890",
                        "input": {
                            "Int read_len": "FBD7939D674997CDB4692D34DE8633C4",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File tss": "34a3ae83f95bfd4bdc3a8bb6ce69eaaa",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "6AEFCE7A3D16736FA3CB1968E5C6A0B2"
                            },
                            "File nodup_bam": "99768eb593b999b66806b97e35fc1f8b"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac-py2",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                    },
                    "tss": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f16cc7892540d7a9bc3207cc44eb8288/ENCFF766FGL.bed.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "read_len": 76
                },
                "returnCode": 0,
                "jobId": "41996",
                "backend": "Local",
                "end": "2022-07-08T20:52:39.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:49:49.087Z",
                        "endTime": "2022-07-08T20:49:54.100Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:49:54.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:49:54.107Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:39.359Z",
                        "endTime": "2022-07-08T20:52:39.359Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:52:37.539Z",
                        "endTime": "2022-07-08T20:52:39.359Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:49:49.086Z",
                        "endTime": "2022-07-08T20:49:49.087Z",
                        "description": "Pending"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:49:54.107Z",
                        "endTime": "2022-07-08T20:49:54.113Z"
                    },
                    {
                        "endTime": "2022-07-08T20:49:54.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:49:54.100Z"
                    },
                    {
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:49:54.113Z",
                        "endTime": "2022-07-08T20:52:37.539Z"
                    }
                ],
                "start": "2022-07-08T20:49:49.086Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython2 $(which encode_task_tss_enrich.py) \\\n    --read-len 76 \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/inputs/-70362984/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --tss /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/inputs/684533534/ENCFF766FGL.bed.gz",
                "shardIndex": 1,
                "outputs": {
                    "tss_enrich_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/glob-c2925ab77ebb371e8cafd2544a4ff6df/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc",
                    "tss_enrich": 16.786519165410933,
                    "tss_large_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/glob-0f56e22cbe1e192a4475f17c0a13db14/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png",
                    "tss_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/glob-0019bcacdbca3572b1d10d66892ea847/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-py2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "A87FF679A2F3E71D9181A67B7542122C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File tss_plot": "2AFE5C88C8054A090452EACE02F0AEAF",
                            "Float tss_enrich": "5AD940EE6B04B985FF50706637920CAC",
                            "File tss_enrich_qc": "01DAE78B54AEB47F54D9F142398DBADF",
                            "File tss_large_plot": "50C1BD1358E2A1961EC8E207127CD07A"
                        },
                        "input count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "5899F9AEC1BA59FC625251A6481E3890",
                        "input": {
                            "Int read_len": "FBD7939D674997CDB4692D34DE8633C4",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File tss": "34a3ae83f95bfd4bdc3a8bb6ce69eaaa",
                            "String runtime_environment": {
                                "conda": "6AEFCE7A3D16736FA3CB1968E5C6A0B2",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666"
                            },
                            "File nodup_bam": "653b6b0dfc16ce79b4731ddf3b9e320d"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac-py2"
                    },
                    "tss": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f16cc7892540d7a9bc3207cc44eb8288/ENCFF766FGL.bed.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "read_len": 76
                },
                "returnCode": 0,
                "jobId": "45808",
                "backend": "Local",
                "end": "2022-07-08T20:55:30.362Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:28.102Z",
                        "endTime": "2022-07-08T20:52:28.107Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:22.155Z",
                        "endTime": "2022-07-08T20:52:22.156Z",
                        "description": "Pending"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:52:28.107Z",
                        "endTime": "2022-07-08T20:52:28.113Z"
                    },
                    {
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:52:28.101Z",
                        "endTime": "2022-07-08T20:52:28.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:55:29.887Z",
                        "endTime": "2022-07-08T20:55:30.362Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:52:28.113Z",
                        "endTime": "2022-07-08T20:55:29.887Z",
                        "description": "RunningJob"
                    },
                    {
                        "endTime": "2022-07-08T20:52:28.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:52:22.156Z"
                    },
                    {
                        "startTime": "2022-07-08T20:55:30.362Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:55:30.363Z"
                    }
                ],
                "start": "2022-07-08T20:52:22.155Z"
            }
        ],
        "atac.align_mito": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\n# check if pipeline dependencies can be found\nif [[ -z \"$(which encode_task_trim_adapter.py 2> /dev/null || true)\" ]]\nthen\n  echo -e \"\\n* Error: pipeline environment (docker, singularity or conda) not found.\" 1>&2\n  exit 3\nfi\n\n# trim adapter\npython3 $(which encode_task_trim_adapter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/write_tsv_567d0c439d9ebbbae010f29f693ed893.tmp \\\n     \\\n    --adapters /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/write_tsv_d41d8cd98f00b204e9800998ecf8427e.tmp \\\n    --paired-end \\\n    --auto-detect-adapter \\\n    --cutadapt-param ' -e 0.1 -m 5' \\\n    --nth 6\n\n# align on trimmed/merged fastqs\nif [ 'bowtie2' == 'bowtie2' ]; then\n    python3 $(which encode_task_bowtie2.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/inputs/687706234/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only_bowtie2_index.tar.gz \\\n        R1/*.fastq.gz \\\n        R2/*.fastq.gz \\\n        --paired-end \\\n        --multimapping 4 \\\n        --mem-gb 4.00367325887084 \\\n        --nth 6\nfi\n\npython3 $(which encode_task_post_align.py) \\\n    R1/*.fastq.gz $(ls *.bam) \\\n    --mito-chr-name chrM \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --mem-gb 4.00367325887084 \\\n    --nth 6\nrm -rf R1 R2",
                "shardIndex": 0,
                "outputs": {
                    "non_mito_samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc",
                    "read_len": 76,
                    "read_len_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-773fb92850749a2b4a829cf3c8c4de27/ENCFF341MYG.subsampled.400.trim.merged.read_length.txt",
                    "bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF341MYG.subsampled.400.trim.merged.srt.bam.bai",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.bam"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Int read_len": "25282EB58FECB582342A8B1C6C99FECF",
                            "File non_mito_samstat_qc": "BD36C94B6C4ACEBAEDA45822F5713BE8",
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File read_len_log": "CC7C87A75C5BFD29B68744DB9D1A3E61",
                            "File bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "02E74F10E0327AD868D138F2B4FDD6F0",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D171B3DA187B8A3152229D64C1043A26",
                        "input": {
                            "File tmp_fastqs": [
                                [
                                    "5f16579eb1d84cfb678af2d33936b10a",
                                    "eda5d244630820f88487056c99295f4a"
                                ],
                                [
                                    "de9014bd9d91a4fa91a746412d7cb49c",
                                    "b35e8985e9e4ac3a4f88467020c7402a"
                                ]
                            ],
                            "File fastqs_R1": [
                                "5f16579eb1d84cfb678af2d33936b10a",
                                "de9014bd9d91a4fa91a746412d7cb49c"
                            ],
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "642E92EFB79421734881B53E1E1B18B6",
                            "Float input_file_size_gb": "27E168F74C6464C9FC256227BB0BFB48",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File fastqs_R2": [
                                "eda5d244630820f88487056c99295f4a",
                                "b35e8985e9e4ac3a4f88467020c7402a"
                            ],
                            "Float mem_factor": "9FFC7A03C1959674FA8C0A7369460097",
                            "String cutadapt_param": "5F1DB4ACB7CFA98EBAB77C495298CB92",
                            "Int cpu": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "File idx_tar": "3e5009367b934b6e52d9f4466831bb29",
                            "Float mem_gb": "225E288573A27FCDD4DB44193D8B59F6",
                            "Float samtools_mem_gb": "FDB891239AADA56DE333064C436EF6BC",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "String aligner": "99E6A6AC2CD2C1E66B6C4CA6FE0D3837",
                            "Int disk_gb": "D645920E395FEDAD7BBBED0ECA3FE2E0",
                            "Boolean auto_detect_adapter": "B326B5062B2F0E69046810717534CB09"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "adapters_R1": [],
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "auto_detect_adapter": true,
                    "mem_factor": 0.15,
                    "fastqs_R2": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz"
                    ],
                    "multimapping": 4,
                    "input_file_size_gb": 0.029931053519248962,
                    "time_hr": 48,
                    "mito_chr_name": "chrM",
                    "adapter": null,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "tmp_fastqs": [
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz"
                        ]
                    ],
                    "fastqs_R1": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz"
                    ],
                    "disk_factor": 8.0,
                    "aligner": "bowtie2",
                    "disk_gb": 40,
                    "cpu": 6,
                    "cutadapt_param": "-e 0.1 -m 5",
                    "paired_end": true,
                    "tmp_adapters": [],
                    "mem_gb": 5.0045915735885504,
                    "adapters_R2": [],
                    "idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/df5193e07055d13c48be59bacd0f56b8/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only_bowtie2_index.tar.gz",
                    "samtools_mem_gb": 4.00367325887084
                },
                "returnCode": 0,
                "jobId": "37522",
                "backend": "Local",
                "end": "2022-07-08T20:44:09.369Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:42:31.449Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:42:31.449Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:42:36.132Z",
                        "endTime": "2022-07-08T20:42:36.145Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:36.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:42:36.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:36.145Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:44:07.347Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:36.102Z",
                        "endTime": "2022-07-08T20:42:36.132Z",
                        "description": "PreparingJob"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:44:09.368Z",
                        "endTime": "2022-07-08T20:44:09.369Z"
                    },
                    {
                        "endTime": "2022-07-08T20:44:09.368Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:44:07.347Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:36.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:42:31.449Z"
                    }
                ],
                "start": "2022-07-08T20:42:31.449Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\n# check if pipeline dependencies can be found\nif [[ -z \"$(which encode_task_trim_adapter.py 2> /dev/null || true)\" ]]\nthen\n  echo -e \"\\n* Error: pipeline environment (docker, singularity or conda) not found.\" 1>&2\n  exit 3\nfi\n\n# trim adapter\npython3 $(which encode_task_trim_adapter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/write_tsv_0f816f2304f34e1699e90cddf8a657d3.tmp \\\n     \\\n    --adapters /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/write_tsv_d41d8cd98f00b204e9800998ecf8427e.tmp \\\n    --paired-end \\\n    --auto-detect-adapter \\\n    --cutadapt-param ' -e 0.1 -m 5' \\\n    --nth 6\n\n# align on trimmed/merged fastqs\nif [ 'bowtie2' == 'bowtie2' ]; then\n    python3 $(which encode_task_bowtie2.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/inputs/687706234/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only_bowtie2_index.tar.gz \\\n        R1/*.fastq.gz \\\n        R2/*.fastq.gz \\\n        --paired-end \\\n        --multimapping 4 \\\n        --mem-gb 4.004456727989019 \\\n        --nth 6\nfi\n\npython3 $(which encode_task_post_align.py) \\\n    R1/*.fastq.gz $(ls *.bam) \\\n    --mito-chr-name chrM \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --mem-gb 4.004456727989019 \\\n    --nth 6\nrm -rf R1 R2",
                "shardIndex": 1,
                "outputs": {
                    "non_mito_samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc",
                    "read_len": 76,
                    "read_len_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-773fb92850749a2b4a829cf3c8c4de27/ENCFF641SFZ.subsampled.400.trim.merged.read_length.txt",
                    "bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam.bai",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Int read_len": "25282EB58FECB582342A8B1C6C99FECF",
                            "File non_mito_samstat_qc": "BD36C94B6C4ACEBAEDA45822F5713BE8",
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File read_len_log": "CC7C87A75C5BFD29B68744DB9D1A3E61",
                            "File bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "17E62166FC8586DFA4D1BC0E1742C08B",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D171B3DA187B8A3152229D64C1043A26",
                        "input": {
                            "File tmp_fastqs": [
                                [
                                    "373e6ad011172d9b8cb5b1076b8bb74b",
                                    "ddbaabac52ed65d3005314853bc76071"
                                ],
                                [
                                    "212cfb79dae2812ab93a034f6d15f080",
                                    "42e4dd42a41943c977cf13fd6b597610"
                                ],
                                [
                                    "ea4a331a8258f30c4fb0e5eccfbaccaa",
                                    "3e5e9a73985f8048454259336f956d80"
                                ],
                                [
                                    "16d88a8d90e14ff95fcf3ad6c3a0adc0",
                                    "d54452a45961430bfa17e4dbbf868131"
                                ],
                                [
                                    "2f33afb33f0809a948e17c448d6f0527",
                                    "1e4ade9f743c75ff0c3f472fb3932deb"
                                ],
                                [
                                    "2d1fe18c646a338c17d299acde0873df",
                                    "326bf6340aca670a5e3fa3e4d6ee932b"
                                ]
                            ],
                            "File fastqs_R1": [
                                "373e6ad011172d9b8cb5b1076b8bb74b",
                                "212cfb79dae2812ab93a034f6d15f080",
                                "ea4a331a8258f30c4fb0e5eccfbaccaa",
                                "16d88a8d90e14ff95fcf3ad6c3a0adc0",
                                "2f33afb33f0809a948e17c448d6f0527",
                                "2d1fe18c646a338c17d299acde0873df"
                            ],
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "642E92EFB79421734881B53E1E1B18B6",
                            "Float input_file_size_gb": "78AA2F7737C599EBEC6AC869C64B3C81",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File fastqs_R2": [
                                "ddbaabac52ed65d3005314853bc76071",
                                "42e4dd42a41943c977cf13fd6b597610",
                                "3e5e9a73985f8048454259336f956d80",
                                "d54452a45961430bfa17e4dbbf868131",
                                "1e4ade9f743c75ff0c3f472fb3932deb",
                                "326bf6340aca670a5e3fa3e4d6ee932b"
                            ],
                            "Float mem_factor": "9FFC7A03C1959674FA8C0A7369460097",
                            "String cutadapt_param": "5F1DB4ACB7CFA98EBAB77C495298CB92",
                            "Int cpu": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "File idx_tar": "3e5009367b934b6e52d9f4466831bb29",
                            "Float mem_gb": "5FAAA2373B4141037C0F28B313617980",
                            "Float samtools_mem_gb": "08358BA651C98AD4B74B00DA7C412B2C",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "String aligner": "99E6A6AC2CD2C1E66B6C4CA6FE0D3837",
                            "Int disk_gb": "D645920E395FEDAD7BBBED0ECA3FE2E0",
                            "Boolean auto_detect_adapter": "B326B5062B2F0E69046810717534CB09"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "adapters_R1": [],
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "auto_detect_adapter": true,
                    "mem_factor": 0.15,
                    "fastqs_R2": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz"
                    ],
                    "multimapping": 4,
                    "input_file_size_gb": 0.03645996283739805,
                    "time_hr": 48,
                    "mito_chr_name": "chrM",
                    "adapter": null,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "tmp_fastqs": [
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz"
                        ]
                    ],
                    "fastqs_R1": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz"
                    ],
                    "disk_factor": 8.0,
                    "aligner": "bowtie2",
                    "disk_gb": 40,
                    "cpu": 6,
                    "cutadapt_param": "-e 0.1 -m 5",
                    "paired_end": true,
                    "tmp_adapters": [],
                    "mem_gb": 5.005570909986273,
                    "adapters_R2": [],
                    "idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/df5193e07055d13c48be59bacd0f56b8/GRCh38_no_alt_analysis_set_GCA_000001405.15_mito_only_bowtie2_index.tar.gz",
                    "samtools_mem_gb": 4.004456727989019
                },
                "returnCode": 0,
                "jobId": "37388",
                "backend": "Local",
                "end": "2022-07-08T20:44:36.370Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:42:31.447Z",
                        "endTime": "2022-07-08T20:42:31.448Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:44:36.370Z",
                        "endTime": "2022-07-08T20:44:36.370Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:42:34.102Z",
                        "endTime": "2022-07-08T20:42:34.136Z"
                    },
                    {
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:44:36.370Z",
                        "startTime": "2022-07-08T20:44:34.582Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:34.149Z",
                        "startTime": "2022-07-08T20:42:34.136Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:42:34.149Z",
                        "endTime": "2022-07-08T20:44:34.582Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:42:34.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:42:34.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:31.448Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:42:34.101Z"
                    }
                ],
                "start": "2022-07-08T20:42:31.446Z"
            }
        ],
        "atac.bam2ta_no_dedup": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_bam2ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0/inputs/-1418576114/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam \\\n    --paired-end \\\n     \\\n    --mito-chr-name chrM \\\n    --subsample 0 \\\n    --mem-gb 3.2064647864550353 \\\n    --nth 2",
                "shardIndex": 0,
                "outputs": {
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "C74D97B01EAE257E44AA9D5BADE97BAF",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1EB01D534768C933E7F9F2951CA3E27C",
                        "input": {
                            "Boolean disable_tn5_shift": "68934A3E9455FA72420237EB05902327",
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "C20AD4D76FE97759AA27A0C99BFF6710",
                            "Int subsample": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Float input_file_size_gb": "C7A9C38A39F3AE6FB641E9076FCD99ED",
                            "Float disk_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "790CC9B40F18FE741D39F15ED42B7CBB",
                            "Float samtools_mem_gb": "0D1E184D99D0EE56696F4500731A84CA",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File bam": "88120b9c8c77209dedbea9a48157549c",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "mem_factor": 0.3,
                    "disable_tn5_shift": false,
                    "input_file_size_gb": 0.026936610229313374,
                    "subsample": 0,
                    "time_hr": 12,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.0,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 4.008080983068794,
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam",
                    "samtools_mem_gb": 3.2064647864550353
                },
                "returnCode": 0,
                "jobId": "42133",
                "backend": "Local",
                "end": "2022-07-08T20:50:21.363Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:49:56.120Z",
                        "startTime": "2022-07-08T20:49:56.113Z"
                    },
                    {
                        "endTime": "2022-07-08T20:49:56.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:49:53.166Z"
                    },
                    {
                        "endTime": "2022-07-08T20:49:56.113Z",
                        "startTime": "2022-07-08T20:49:56.102Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:50:18.770Z",
                        "endTime": "2022-07-08T20:50:21.363Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:49:53.165Z",
                        "endTime": "2022-07-08T20:49:53.166Z",
                        "description": "Pending"
                    },
                    {
                        "endTime": "2022-07-08T20:50:18.770Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:49:56.120Z"
                    },
                    {
                        "endTime": "2022-07-08T20:50:21.364Z",
                        "startTime": "2022-07-08T20:50:21.363Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:49:56.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:49:56.102Z"
                    }
                ],
                "start": "2022-07-08T20:49:53.165Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_bam2ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1/inputs/-1426335473/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam \\\n    --paired-end \\\n     \\\n    --mito-chr-name chrM \\\n    --subsample 0 \\\n    --mem-gb 3.2076205015927557 \\\n    --nth 2",
                "shardIndex": 1,
                "outputs": {
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "C74D97B01EAE257E44AA9D5BADE97BAF",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1EB01D534768C933E7F9F2951CA3E27C",
                        "input": {
                            "Boolean disable_tn5_shift": "68934A3E9455FA72420237EB05902327",
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "C20AD4D76FE97759AA27A0C99BFF6710",
                            "Int subsample": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Float input_file_size_gb": "2AD5B92FAD08571C272FC0CDAE6A208F",
                            "Float disk_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "B29C202A086E4FDB2775D6EC9B3FFB71",
                            "Float samtools_mem_gb": "A57D9DC445078E24F3C84C5FE41A5061",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File bam": "f09fa2f74a91039d6833b98ebcd72de0",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.3,
                    "disable_tn5_shift": false,
                    "input_file_size_gb": 0.031752089969813824,
                    "subsample": 0,
                    "time_hr": 12,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.0,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 4.0095256269909445,
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam",
                    "samtools_mem_gb": 3.2076205015927557
                },
                "returnCode": 0,
                "jobId": "45216",
                "backend": "Local",
                "end": "2022-07-08T20:52:45.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:45.358Z",
                        "endTime": "2022-07-08T20:52:45.359Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:52:13.997Z",
                        "endTime": "2022-07-08T20:52:13.998Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:52:14.102Z",
                        "endTime": "2022-07-08T20:52:14.113Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:14.101Z",
                        "endTime": "2022-07-08T20:52:14.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "endTime": "2022-07-08T20:52:14.120Z",
                        "startTime": "2022-07-08T20:52:14.113Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:52:14.120Z",
                        "endTime": "2022-07-08T20:52:44.801Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:44.801Z",
                        "endTime": "2022-07-08T20:52:45.358Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "endTime": "2022-07-08T20:52:14.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:52:13.998Z"
                    }
                ],
                "start": "2022-07-08T20:52:13.997Z"
            }
        ],
        "atac.filter": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_filter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/inputs/279197260/ENCFF341MYG.subsampled.400.trim.merged.srt.bam \\\n    --paired-end \\\n    --multimapping 4 \\\n    --dup-marker picard \\\n    --mapq-thresh 30 \\\n    --filter-chrs chrM MT \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n     \\\n    --mito-chr-name chrM \\\n    --mem-gb 4.818273294866085 \\\n    --nth 4 \\\n    --picard-java-heap 5G",
                "shardIndex": 0,
                "outputs": {
                    "dup_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF341MYG.subsampled.400.trim.merged.srt.dup.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc",
                    "nodup_bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam.bai",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "lib_complexity_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF341MYG.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File dup_qc": "D34C4EB2504C6E5EE8A8B6FF197A9EC7",
                            "File nodup_bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File lib_complexity_qc": "84CE21EEA5C3132AC521760733899074",
                            "File nodup_bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "B6D767D2F8ED5D21A44B0E5886680CB9",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "B69D56EF32845E9C763B780B1492910C",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "0D6335125CB55B04A361AAA9E1703C62",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "54FBF38CF649866815E0FEFC46A1F6C7",
                            "Int cpu": "A87FF679A2F3E71D9181A67B7542122C",
                            "Float mem_gb": "C42403DA237D281A4612640C61B03580",
                            "Float samtools_mem_gb": "26A55C9D8CE6730549B5FFA93C4338DA",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String dup_marker": "620573C97469647DF116392F8B351FEB",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Boolean no_dup_removal": "68934A3E9455FA72420237EB05902327",
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "File bam": "695e3b6e112fe3db030cb83b6048875a",
                            "Int mapq_thresh": "34173CB38F07F89DDBEBC2AC9128303F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "String filter_chrs": [
                                "4A8385B4D27A8EEDB503793999FE2D1B",
                                "A18113047870E64C14FA44BD36DB95E8"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.4,
                    "multimapping": 4,
                    "input_file_size_gb": 0.05710404645651579,
                    "no_dup_removal": false,
                    "time_hr": 24,
                    "mito_chr_name": "chrM",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "mapq_thresh": 30,
                    "disk_factor": 8.0,
                    "disk_gb": 20,
                    "cpu": 4,
                    "paired_end": true,
                    "mem_gb": 6.022841618582606,
                    "dup_marker": "picard",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.bam",
                    "filter_chrs": [
                        "chrM",
                        "MT"
                    ],
                    "samtools_mem_gb": 4.818273294866085
                },
                "returnCode": 0,
                "jobId": "40639",
                "backend": "Local",
                "end": "2022-07-08T20:49:42.363Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:48:21.346Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:48:21.347Z"
                    },
                    {
                        "endTime": "2022-07-08T20:48:26.127Z",
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:48:26.117Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:21.347Z",
                        "endTime": "2022-07-08T20:48:26.102Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:49:42.246Z",
                        "startTime": "2022-07-08T20:48:26.127Z"
                    },
                    {
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:49:42.363Z",
                        "startTime": "2022-07-08T20:49:42.246Z"
                    },
                    {
                        "startTime": "2022-07-08T20:49:42.363Z",
                        "endTime": "2022-07-08T20:49:42.363Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:48:26.103Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:48:26.117Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:26.102Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:48:26.103Z"
                    }
                ],
                "start": "2022-07-08T20:48:21.345Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_filter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/inputs/271437901/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam \\\n    --paired-end \\\n    --multimapping 4 \\\n    --dup-marker picard \\\n    --mapq-thresh 30 \\\n    --filter-chrs chrM MT \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n     \\\n    --mito-chr-name chrM \\\n    --mem-gb 4.822884979844094 \\\n    --nth 4 \\\n    --picard-java-heap 5G",
                "shardIndex": 1,
                "outputs": {
                    "dup_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF641SFZ.subsampled.400.trim.merged.srt.dup.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc",
                    "nodup_bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam.bai",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "lib_complexity_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF641SFZ.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File dup_qc": "D34C4EB2504C6E5EE8A8B6FF197A9EC7",
                            "File nodup_bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File lib_complexity_qc": "84CE21EEA5C3132AC521760733899074",
                            "File nodup_bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "B6D767D2F8ED5D21A44B0E5886680CB9",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "B69D56EF32845E9C763B780B1492910C",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "A6F7A1467D4FA88F0E6C6DC0DB166C39",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "54FBF38CF649866815E0FEFC46A1F6C7",
                            "Int cpu": "A87FF679A2F3E71D9181A67B7542122C",
                            "Float mem_gb": "1890AE7C973A9BF6366E1640E8777999",
                            "Float samtools_mem_gb": "6452895037029CB166F10E3DFE4F28F9",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String dup_marker": "620573C97469647DF116392F8B351FEB",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Boolean no_dup_removal": "68934A3E9455FA72420237EB05902327",
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "File bam": "afeae1405611cf0c0758e4328d8b9840",
                            "Int mapq_thresh": "34173CB38F07F89DDBEBC2AC9128303F",
                            "Int disk_gb": "3C59DC048E8850243BE8079A5C74D079",
                            "String filter_chrs": [
                                "4A8385B4D27A8EEDB503793999FE2D1B",
                                "A18113047870E64C14FA44BD36DB95E8"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.4,
                    "multimapping": 4,
                    "input_file_size_gb": 0.07151556201279163,
                    "no_dup_removal": false,
                    "time_hr": 24,
                    "mito_chr_name": "chrM",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "mapq_thresh": 30,
                    "disk_factor": 8.0,
                    "disk_gb": 21,
                    "cpu": 4,
                    "paired_end": true,
                    "mem_gb": 6.028606224805117,
                    "dup_marker": "picard",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam",
                    "filter_chrs": [
                        "chrM",
                        "MT"
                    ],
                    "samtools_mem_gb": 4.822884979844094
                },
                "returnCode": 0,
                "jobId": "43712",
                "backend": "Local",
                "end": "2022-07-08T20:52:15.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:12.653Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:52:15.359Z"
                    },
                    {
                        "endTime": "2022-07-08T20:50:39.119Z",
                        "startTime": "2022-07-08T20:50:39.118Z",
                        "description": "Pending"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:40.120Z",
                        "startTime": "2022-07-08T20:50:40.104Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:15.359Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:52:15.360Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:40.127Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:52:12.653Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:40.102Z",
                        "endTime": "2022-07-08T20:50:40.104Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.119Z",
                        "endTime": "2022-07-08T20:50:40.102Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:50:40.120Z",
                        "endTime": "2022-07-08T20:50:40.127Z"
                    }
                ],
                "start": "2022-07-08T20:50:39.118Z"
            }
        ],
        "atac.qc_report": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_qc_report.py) \\\n    --pipeline-prefix atac \\\n    --pipeline-ver v2.2.0 \\\n    --title 'ENCSR356KRQ (subsampled 1/400)' \\\n    --desc 'ATAC-seq on primary keratinocytes in day 0.0 of differentiation' \\\n    --genome hg38 \\\n    --multimapping 4 \\\n    --paired-ends true true \\\n    --pipeline-type atac \\\n    --aligner bowtie2 \\\n     \\\n    --peak-caller macs2 \\\n    --cap-num-peak 300000 \\\n    --idr-thresh 0.05 \\\n    --pval-thresh 0.01 \\\n    --xcor-subsample-reads 25000000 \\\n    --frac-mito-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1930979226/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1938738585/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc \\\n    --samstat-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-831661045/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-839420404/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc \\\n    --nodup-samstat-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1173461930/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1181221289/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc \\\n    --dup-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/640804292/ENCFF341MYG.subsampled.400.trim.merged.srt.dup.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/633044933/ENCFF641SFZ.subsampled.400.trim.merged.srt.dup.qc \\\n    --lib-complexity-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1392897071/ENCFF341MYG.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1400656430/ENCFF641SFZ.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc \\\n    --xcor-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/731846840/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/724087481/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png \\\n    --xcor-scores /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/2088112852/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/2080353493/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc \\\n    --idr-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/551355370/rep1_vs_rep2.idr0.05.unthresholded-peaks.txt.png \\\n    --idr-plots-pr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1869173100/rep1-pr1_vs_rep1-pr2.idr0.05.unthresholded-peaks.txt.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1876932459/rep2-pr1_vs_rep2-pr2.idr0.05.unthresholded-peaks.txt.png \\\n    --jsd-plot /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/2048401223/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.jsd_plot.png \\\n    --jsd-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1903246021/rep1.ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1903246021/rep2.ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc \\\n    --idr-plot-ppr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/586600490/pooled-pr1_vs_pooled-pr2.idr0.05.unthresholded-peaks.txt.png \\\n    --frip-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1761647776/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1753888417/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc \\\n    --frip-qcs-pr1 /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1812927568/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1805168209/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc \\\n    --frip-qcs-pr2 /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1851581103/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1859340462/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc \\\n    --frip-qc-pooled /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/333857824/rep.pooled.pval0.01.300K.bfilt.frip.qc \\\n    --frip-qc-ppr1 /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1445308708/rep-pr1.pooled.pval0.01.300K.bfilt.frip.qc \\\n    --frip-qc-ppr2 /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1437549349/rep-pr2.pooled.pval0.01.300K.bfilt.frip.qc \\\n    --frip-idr-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/42553656/rep1_vs_rep2.idr0.05.bfilt.frip.qc \\\n    --frip-idr-qcs-pr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1916992482/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.frip.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1909233123/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.frip.qc \\\n    --frip-idr-qc-ppr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/77798776/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.frip.qc \\\n    --frip-overlap-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/565380296/rep1_vs_rep2.overlap.bfilt.frip.qc \\\n    --frip-overlap-qcs-pr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-400957870/rep1-pr1_vs_rep1-pr2.overlap.bfilt.frip.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-408717229/rep2-pr1_vs_rep2-pr2.overlap.bfilt.frip.qc \\\n    --frip-overlap-qc-ppr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/190126344/pooled-pr1_vs_pooled-pr2.overlap.bfilt.frip.qc \\\n    --idr-reproducibility-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1624218937/idr.reproducibility.qc \\\n    --overlap-reproducibility-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1155202857/overlap.reproducibility.qc \\\n    --annot-enrich-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1492339392/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1484580033/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc \\\n    --tss-enrich-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1289973766/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1297733125/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc \\\n    --tss-large-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1244963415/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1252722774/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png \\\n    --roadmap-compare-plots  \\\n    --fraglen-dist-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1147226540/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1154985899/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png \\\n    --fraglen-nucleosomal-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1405708793/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1413468152/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc \\\n    --gc-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1927795866/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1920036507/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png \\\n    --preseq-plots  \\\n    --picard-est-lib-size-qcs  \\\n    --peak-region-size-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/900953565/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/893194206/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc \\\n    --peak-region-size-plots /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1964432284/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1972191643/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png \\\n    --num-peak-qcs /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1976566141/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc_:_/cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/1968806782/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc \\\n    --idr-opt-peak-region-size-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/2007923933/idr.optimal_peak.peak_region_size.qc \\\n    --idr-opt-peak-region-size-plot /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-388445836/overlap.optimal_peak.peak_region_size.png \\\n    --idr-opt-num-peak-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1211430787/idr.optimal_peak.num_peak.qc \\\n    --overlap-opt-peak-region-size-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-1818027283/overlap.optimal_peak.peak_region_size.qc \\\n    --overlap-opt-peak-region-size-plot /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-388445836/overlap.optimal_peak.peak_region_size.png \\\n    --overlap-opt-num-peak-qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/inputs/-742414707/overlap.optimal_peak.num_peak.qc \\\n    --out-qc-html qc.html \\\n    --out-qc-json qc.json \\",
                "shardIndex": -1,
                "outputs": {
                    "qc_json": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/glob-3440f922973abb7a616aaf203e0db08b/qc.json",
                    "report": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/glob-eae855c82d0f7e2185388856e7b2cc7b/qc.html",
                    "qc_json_ref_match": false
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "ECCBC87E4B5CE2FE28308FD9F2A7BAF3",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Boolean qc_json_ref_match": "070CCE87817E8CFB3CC26C02A6EB3E68",
                            "File report": "476581E48A7B9418343B0C14208E7F7A",
                            "File qc_json": "04041B797125F8B7B65E20307A0A15FA"
                        },
                        "input count": "9778D5D219C5080B9A6A17BEF029331C",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "0268C16E741D54D954CCB2E3383DCE53",
                        "input": {
                            "File frip_qcs_pr1": [
                                "69853a202ddc2877ebe79e7ee03c126f",
                                "c87a801eaec72462034f8010e2238162"
                            ],
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File frip_qc_ppr1": "699d420472c3266f0dee38b61cc3d8c7",
                            "File frip_qcs": [
                                "013922790c44a63a76ad4fbc656f7d30",
                                "da9e254bbb2b572bfbae1af2b020ec07"
                            ],
                            "File peak_region_size_plots": [
                                "e140817dfb95eef9b871206f55fceddb",
                                "e796649ad874174be1cf6dc71d05da5c"
                            ],
                            "File xcor_plots": [
                                "4f098075025a0ce57c4b8a2e637a1d0d",
                                "7643c55a3ed297d928af5f822475c7bc"
                            ],
                            "File idr_opt_peak_region_size_qc": "96350124625b400a47776398d787ffd3",
                            "File overlap_opt_peak_region_size_qc": "628170f273b6a851010dfc73f8c4951a",
                            "File frip_overlap_qc_ppr": "4b20936b8960e00bd6aa13c7975c1f06",
                            "File frip_idr_qcs_pr": [
                                "ba6d033fe7c602bb9f7ec75efdafaf9a",
                                "07703461b554053dab835597c8e739e1"
                            ],
                            "File frip_overlap_qcs": [
                                "b70690934e958fb5623aa200fbcab48b"
                            ],
                            "File peak_region_size_qcs": [
                                "6035d0d808482aaa172ff57a184cef2f",
                                "e9456472f2d4f4c92c2acbf4c41152a9"
                            ],
                            "File frip_qcs_pr2": [
                                "22b4ef316612924c386233cfa6cd89ef",
                                "1016f92029b34df25dea7eb62e7e2268"
                            ],
                            "String title": "AB3F11430C52BA8CAB0C1E77831ACD80",
                            "File idr_plot_ppr": "086d81fceda1fcc950cb3a92225c12a7",
                            "File overlap_opt_num_peak_qc": "ed13915f3231c9093b3171168cd17d5b",
                            "File frip_qc_pooled": "f43a964e1e8a60b6c3be360e75caa218",
                            "File frac_mito_qcs": [
                                "0349ad3ee88441af64d5c6faa7818f68",
                                "39985e411faacf8a1eda095989f96936"
                            ],
                            "Boolean paired_ends": [
                                "B326B5062B2F0E69046810717534CB09",
                                "B326B5062B2F0E69046810717534CB09"
                            ],
                            "File num_peak_qcs": [
                                "553c80e7277eb71eb693281de1697ee9",
                                "d0b6bc71a7483424e8d822d82c232970"
                            ],
                            "File frip_idr_qc_ppr": "1c265498e06c91a80bb7999eb7778298",
                            "File nodup_samstat_qcs": [
                                "e64d3cfae0da7b72aba55c49ad21ca8c",
                                "a6b2688308da32911e11aee2eb4b698e"
                            ],
                            "File frip_qc_ppr2": "4b46f72e564993cd550e31b4484f4ca8",
                            "File gc_plots": [
                                "a3be74b662fe85bdde805926f1b7741f",
                                "29bcb42a56324deff0576cc974a6fd92"
                            ],
                            "File idr_opt_peak_region_size_plot": "96f619877efe984cbd0a65bf517ce7d7",
                            "File annot_enrich_qcs": [
                                "6948be795a001f9538e570346d65c73e",
                                "65b3931168e4d5d5af9d6ffd87d80135"
                            ],
                            "File idr_plots": [
                                "55db90dac6086e9601999c81928eaa3f"
                            ],
                            "File idr_opt_num_peak_qc": "f5f6a19d6b0382469c85b05ecb47766f",
                            "File dup_qcs": [
                                "d92f73ee8ef93de615622a28f5529cf4",
                                "719ca0c87cfdc18abf6288a19666efa3"
                            ],
                            "File xcor_scores": [
                                "f7491ec715f9c5f04bc48c00ddce73af",
                                "be91108898ec0f0eb51e095f27befbf5"
                            ],
                            "File lib_complexity_qcs": [
                                "e01aaedcecb5e974af79584e32d8eede",
                                "fa2055f9aff357da67f556332e1281da"
                            ],
                            "File frip_overlap_qcs_pr": [
                                "f64e6ce69ebd75400725b1a45052b265",
                                "b874189be6178ad0dfee87387f6b4c8b"
                            ],
                            "File jsd_qcs": [
                                "af9e72ffc43483395ac8156f7dfe3c4f",
                                "d7f5d6eaa739103617c6240331702e43"
                            ],
                            "Int xcor_subsample_reads": "F9637C816DE716B54C5B24B56F189714",
                            "File samstat_qcs": [
                                "0e851f94da159cdea580fdb2c842ebfd",
                                "e475d289ae2fae7172094ba999add4de"
                            ],
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "String pipeline_ver": "104A164D77AC19E26290E757916B9794",
                            "File fraglen_nucleosomal_qcs": [
                                "b6e221a33312cb28923f72d75ab5e431",
                                "d0307045751f672a013f9e868b0a7931"
                            ],
                            "String genome": "3191073185BC0E55D8E07C04F931B500",
                            "Float idr_thresh": "B14399CBAAC6DA4B5B733B483106383F",
                            "File idr_plots_pr": [
                                "d246496061b9f42340b7f4d943f6ca73",
                                "1ac6549163f6b8bd2424188fd6ef319d"
                            ],
                            "File fraglen_dist_plots": [
                                "f0cc733f5177ca54de99fadfea7068c4",
                                "91fca819c93047ebe675e9778ab2a048"
                            ],
                            "File frip_idr_qcs": [
                                "7e954f238f0eff76586e98f4c14d7e87"
                            ],
                            "Boolean no_dup_removal": "68934A3E9455FA72420237EB05902327",
                            "String pipeline_type": "74D2E2801AEA539F80E62C8501E5E679",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "File overlap_opt_peak_region_size_plot": "96f619877efe984cbd0a65bf517ce7d7",
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "File idr_reproducibility_qc": "be302608f2fd0aaa75a5b4efb2a0854f",
                            "String aligner": "99E6A6AC2CD2C1E66B6C4CA6FE0D3837",
                            "File tss_enrich_qcs": [
                                "75c854be9719079c74e4d780d7cc5f2f",
                                "fc6332fa1f11123869445e4109df3347"
                            ],
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "File tss_large_plots": [
                                "1ac91ddeca85c2863d163315eb54fc2e",
                                "e02d1fd204a8fd0be5b41eeb94119e17"
                            ],
                            "File overlap_reproducibility_qc": "57ac639106ec8bdf2250c5a87e452fc5",
                            "File jsd_plot": "83d8fec512239de72ce1b62f105b1e34",
                            "String description": "553E9D99990573EA88396947C8FAE8E6"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "frip_qc_ppr1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep-pr1.pooled.pval0.01.300K.bfilt.frip.qc",
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "peak_region_size_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.qc"
                    ],
                    "frip_qcs_pr1": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr1/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.pval0.01.300K.bfilt.frip.qc"
                    ],
                    "fraglen_dist_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/glob-91af6e0c311eb63a5d7756012b5bee93/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/glob-91af6e0c311eb63a5d7756012b5bee93/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.fraglen_dist.png"
                    ],
                    "overlap_reproducibility_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-2e0755477c7b64fb4cd35cd75c0b0f2a/overlap.reproducibility.qc",
                    "frip_overlap_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1_vs_rep2.overlap.bfilt.frip.qc"
                    ],
                    "frip_idr_qcs_pr": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.frip.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.frip.qc"
                    ],
                    "frip_qc_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep.pooled.pval0.01.300K.bfilt.frip.qc",
                    "jsd_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-9c8d296ce3c847878b53bb751aed36dd/rep1.ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-9c8d296ce3c847878b53bb751aed36dd/rep2.ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bfilt.jsd.qc"
                    ],
                    "cap_num_peak": 300000,
                    "idr_opt_num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-3b1229fa29433fa118c2c80578c3259b/idr.optimal_peak.num_peak.qc",
                    "picard_est_lib_size_qcs": [],
                    "frip_idr_qc_ppr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-156b027b56a0fc9230201b265d9f4bf4/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.frip.qc",
                    "pipeline_ver": "v2.2.0",
                    "idr_reproducibility_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-2e0755477c7b64fb4cd35cd75c0b0f2a/idr.reproducibility.qc",
                    "multimapping": 4,
                    "description": "ATAC-seq on primary keratinocytes in day 0.0 of differentiation",
                    "pipeline_type": "atac",
                    "lib_complexity_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF341MYG.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF641SFZ.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc"
                    ],
                    "no_dup_removal": false,
                    "idr_plot_ppr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-8da83e7748d9e54f3e082eb4aa171757/pooled-pr1_vs_pooled-pr2.idr0.05.unthresholded-peaks.txt.png",
                    "peak_region_size_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.peak_region_size.png"
                    ],
                    "pval_thresh": 0.01,
                    "dup_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF341MYG.subsampled.400.trim.merged.srt.dup.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF641SFZ.subsampled.400.trim.merged.srt.dup.qc"
                    ],
                    "overlap_opt_num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-3b1229fa29433fa118c2c80578c3259b/overlap.optimal_peak.num_peak.qc",
                    "idr_thresh": 0.05,
                    "idr_opt_peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-9826117ee260a5b864d958fe9ca989b0/idr.optimal_peak.peak_region_size.qc",
                    "xcor_subsample_reads": 25000000,
                    "roadmap_compare_plots": [],
                    "qc_json_ref": null,
                    "annot_enrich_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-0/execution/glob-5dc2759e1f2ec1b9d52ef565e3202c4e/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-annot_enrich/shard-1/execution/glob-5dc2759e1f2ec1b9d52ef565e3202c4e/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.annot_enrich.qc"
                    ],
                    "xcor_scores": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/glob-75e08482e6a5fe7a0d0013bbdfdf694c/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/glob-75e08482e6a5fe7a0d0013bbdfdf694c/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc"
                    ],
                    "gc_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/execution/glob-694f39df899f77495217df4d47b68d34/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/execution/glob-694f39df899f77495217df4d47b68d34/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png"
                    ],
                    "frip_qc_ppr2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep-pr2.pooled.pval0.01.300K.bfilt.frip.qc",
                    "frip_overlap_qc_ppr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-156b027b56a0fc9230201b265d9f4bf4/pooled-pr1_vs_pooled-pr2.overlap.bfilt.frip.qc",
                    "nodup_samstat_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.samstats.qc"
                    ],
                    "aligner": "bowtie2",
                    "genome": "hg38",
                    "xcor_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/glob-c0eba07eee633b4055d7d9d85813fdf5/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/glob-c0eba07eee633b4055d7d9d85813fdf5/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png"
                    ],
                    "num_peak_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.num_peak.qc"
                    ],
                    "samstat_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc"
                    ],
                    "idr_plots_pr": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep1-pr1_vs_rep1-pr2.idr0.05.unthresholded-peaks.txt.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep2-pr1_vs_rep2-pr2.idr0.05.unthresholded-peaks.txt.png"
                    ],
                    "frip_overlap_qcs_pr": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1-pr1_vs_rep1-pr2.overlap.bfilt.frip.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_pr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep2-pr1_vs_rep2-pr2.overlap.bfilt.frip.qc"
                    ],
                    "frip_qcs_pr2": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc"
                    ],
                    "title": "ENCSR356KRQ (subsampled 1/400)",
                    "frip_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.bfilt.frip.qc"
                    ],
                    "preseq_plots": [],
                    "peak_caller": "macs2",
                    "idr_opt_peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-e2c73ffa35e91a202da536e2007c07a4/overlap.optimal_peak.peak_region_size.png",
                    "fraglen_nucleosomal_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-0/execution/glob-e3a982666d4957e5a84eacd606030c2c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-fraglen_stat_pe/shard-1/execution/glob-e3a982666d4957e5a84eacd606030c2c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.nucleosomal.qc"
                    ],
                    "overlap_opt_peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-9826117ee260a5b864d958fe9ca989b0/overlap.optimal_peak.peak_region_size.qc",
                    "frac_mito_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/execution/glob-9613b492fc1585afab8acb7aea0a8862/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/execution/glob-9613b492fc1585afab8acb7aea0a8862/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc"
                    ],
                    "jsd_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-jsd/execution/glob-fc36854b6867c1581ab159b09dd7e2f4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.jsd_plot.png",
                    "tss_large_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/glob-0f56e22cbe1e192a4475f17c0a13db14/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/glob-0f56e22cbe1e192a4475f17c0a13db14/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.large_tss_enrich.png"
                    ],
                    "overlap_opt_peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_overlap/execution/glob-e2c73ffa35e91a202da536e2007c07a4/overlap.optimal_peak.peak_region_size.png",
                    "frip_idr_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1_vs_rep2.idr0.05.bfilt.frip.qc"
                    ],
                    "paired_ends": [
                        true,
                        true
                    ],
                    "tss_enrich_qcs": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-0/execution/glob-c2925ab77ebb371e8cafd2544a4ff6df/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-tss_enrich/shard-1/execution/glob-c2925ab77ebb371e8cafd2544a4ff6df/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tss_enrich.qc"
                    ],
                    "idr_plots": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep1_vs_rep2.idr0.05.unthresholded-peaks.txt.png"
                    ]
                },
                "returnCode": 0,
                "jobId": "6760",
                "backend": "Local",
                "end": "2022-07-08T21:02:09.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T21:02:00.120Z",
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T21:02:00.111Z"
                    },
                    {
                        "startTime": "2022-07-08T21:02:00.101Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T21:02:00.111Z"
                    },
                    {
                        "description": "RunningJob",
                        "startTime": "2022-07-08T21:02:00.120Z",
                        "endTime": "2022-07-08T21:02:09.211Z"
                    },
                    {
                        "startTime": "2022-07-08T21:02:00.101Z",
                        "endTime": "2022-07-08T21:02:00.101Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T21:02:09.211Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T21:02:09.358Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T21:02:09.359Z",
                        "startTime": "2022-07-08T21:02:09.358Z"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T21:01:59.588Z",
                        "endTime": "2022-07-08T21:02:00.101Z"
                    },
                    {
                        "startTime": "2022-07-08T21:01:59.587Z",
                        "endTime": "2022-07-08T21:01:59.588Z",
                        "description": "Pending"
                    }
                ],
                "start": "2022-07-08T21:01:59.587Z"
            }
        ],
        "atac.reproducibility_idr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_reproducibility.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/inputs/530809176/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.gz \\\n    --peaks-pr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/inputs/-1889719294/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/inputs/-1897478653/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.gz \\\n    --peak-ppr /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/inputs/566054296/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.gz \\\n    --prefix idr \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv",
                "shardIndex": -1,
                "outputs": {
                    "optimal_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-5b2709e8fa4f20cca33c67c963268b8c/idr.optimal_peak.narrowPeak.starch",
                    "conservative_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-48f968fdbba07264a36ef0e5e4ad9da3/idr.conservative_peak.narrowPeak.starch",
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-e2c73ffa35e91a202da536e2007c07a4/idr.optimal_peak.peak_region_size.png",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-9826117ee260a5b864d958fe9ca989b0/idr.optimal_peak.peak_region_size.qc",
                    "conservative_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-f628f97804061610489fb3df14b8b3f0/idr.conservative_peak.narrowPeak.bb",
                    "optimal_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-240c97f2273cc92383b551c4d2655be9/idr.optimal_peak.narrowPeak.bb",
                    "conservative_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-aae3f88ec555ee05b83e37921e9eb318/idr.conservative_peak.narrowPeak.gz",
                    "conservative_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-29708b5a00e414f63a187d12af34d0d2/idr.conservative_peak.narrowPeak.hammock.gz",
                    "optimal_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-1b1244d5baf1a7d98d4b7b76d79e43bf/idr.optimal_peak.narrowPeak.gz",
                    "optimal_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-fe7dae7ccfff8f80b0a121847139e130/idr.optimal_peak.narrowPeak.hammock.gz",
                    "reproducibility_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-2e0755477c7b64fb4cd35cd75c0b0f2a/idr.reproducibility.qc",
                    "conservative_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-29708b5a00e414f63a187d12af34d0d2/idr.conservative_peak.narrowPeak.hammock.gz.tbi",
                    "optimal_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-fe7dae7ccfff8f80b0a121847139e130/idr.optimal_peak.narrowPeak.hammock.gz.tbi",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/glob-3b1229fa29433fa118c2c80578c3259b/idr.optimal_peak.num_peak.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File optimal_peak_hammock": "A2A50211B8F499FD036014D7316B856B",
                            "File optimal_peak": "E792AE7653F51CFF383E0F129F147864",
                            "File reproducibility_qc": "B87E093D4BF0AFD96E5223A38499136D",
                            "File optimal_peak_starch": "0E1B2521DD5C24A9D648480B4EB82D8B",
                            "File optimal_peak_hammock_tbi": "C54AABF460BC1E1FD78FF87DE6EC69EA",
                            "File conservative_peak_hammock": "0B8BF86DFAB8E61D244BD03F77DA71E9",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File conservative_peak_bb": "332821BB2A6A72161F97B63734680D94",
                            "File optimal_peak_bb": "760B26357255ABABCD779BB08AF52E8D",
                            "File conservative_peak_hammock_tbi": "408FB3573092D50CF4BF2994BBC0C10A",
                            "File conservative_peak_starch": "27D39928056E3A887F4D8766A2C345FE",
                            "File conservative_peak": "60F094243A793EE426AB64A114FDCB78",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "D3D9446802A44259755D38E6D163E820",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "CB6E3FE90C8B21140E5D7392D2A413CB",
                        "input": {
                            "File peaks_pr": [
                                "bc3fada9d9248dfd126e361fadf7a109",
                                "4e58dd52b43e9e822e5a2fda7a9f10e9"
                            ],
                            "File peak_ppr": "27a82302501463ef84f900259f7ded3c",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File peaks": [
                                "871dc5405411ce48b2fac633d36b57e5"
                            ],
                            "String prefix": "DF5EC21900D5A81E4C10CB16B6D1EC50",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "peak_type": "narrowPeak",
                    "peaks_pr": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1-pr1_vs_rep1-pr2.idr0.05.bfilt.narrowPeak.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_pr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep2-pr1_vs_rep2-pr2.idr0.05.bfilt.narrowPeak.gz"
                    ],
                    "prefix": "idr",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak_ppr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.gz",
                    "peaks": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.gz"
                    ]
                },
                "returnCode": 0,
                "jobId": "6446",
                "backend": "Local",
                "end": "2022-07-08T21:01:57.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-reproducibility_idr",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T21:01:43.268Z",
                        "endTime": "2022-07-08T21:01:44.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T21:01:44.102Z",
                        "endTime": "2022-07-08T21:01:44.107Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T21:01:44.107Z",
                        "endTime": "2022-07-08T21:01:44.113Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "endTime": "2022-07-08T21:01:44.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T21:01:44.101Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T21:01:57.359Z",
                        "startTime": "2022-07-08T21:01:57.359Z"
                    },
                    {
                        "endTime": "2022-07-08T21:01:57.154Z",
                        "startTime": "2022-07-08T21:01:44.113Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T21:01:57.154Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T21:01:57.359Z"
                    },
                    {
                        "description": "Pending",
                        "endTime": "2022-07-08T21:01:43.268Z",
                        "startTime": "2022-07-08T21:01:43.267Z"
                    }
                ],
                "start": "2022-07-08T21:01:43.267Z"
            }
        ],
        "atac.call_peak_pr2": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/inputs/-1513392624/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.00739998742938\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/inputs/-1513392624/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 0,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "B7638B5785FC816F38C0D12E4609483B",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "819B2B459A097F3DA60B4012B0B3AE41",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "e02bb588fd50bbc9d0878b2c0c9df37a",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.0018499968573451042,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.00739998742938,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "44121",
                "backend": "Local",
                "end": "2022-07-08T20:53:06.362Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:06.362Z",
                        "endTime": "2022-07-08T20:53:06.362Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:50:46.185Z",
                        "endTime": "2022-07-08T20:53:03.454Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:50:46.103Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:46.176Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:46.102Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:50:46.103Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.123Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:50:39.124Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:03.454Z",
                        "endTime": "2022-07-08T20:53:06.362Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.124Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:50:46.102Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:50:46.176Z",
                        "endTime": "2022-07-08T20:50:46.185Z"
                    }
                ],
                "start": "2022-07-08T20:50:39.122Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/inputs/-1521151983/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.008806694298983\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/inputs/-1521151983/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": 1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-e2c73ffa35e91a202da536e2007c07a4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-9826117ee260a5b864d958fe9ca989b0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-3b1229fa29433fa118c2c80578c3259b/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "FECD963CF14C7B8636D9FA5EABB6E8E2",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "51187CA437A6CA002894F02C6DBC92BB",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "35b666b577eeaf72af00e6bcb56fc1a5",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.002201673574745655,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.008806694298983,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "47824",
                "backend": "Local",
                "end": "2022-07-08T20:55:54.368Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pr2/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:28.125Z",
                        "endTime": "2022-07-08T20:55:53.132Z",
                        "description": "RunningJob"
                    },
                    {
                        "endTime": "2022-07-08T20:53:28.125Z",
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:53:28.116Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:28.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:53:28.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:24.441Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:53:24.442Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:55:54.368Z",
                        "endTime": "2022-07-08T20:55:54.369Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:28.101Z",
                        "startTime": "2022-07-08T20:53:24.442Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:53:28.116Z",
                        "startTime": "2022-07-08T20:53:28.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:55:53.132Z",
                        "endTime": "2022-07-08T20:55:54.368Z",
                        "description": "UpdatingCallCache"
                    }
                ],
                "start": "2022-07-08T20:53:24.441Z"
            }
        ],
        "atac.call_peak_ppr1": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/inputs/1887274678/rep-pr1.pooled.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.016209717839956\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/inputs/1887274678/rep-pr1.pooled.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": -1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-e2c73ffa35e91a202da536e2007c07a4/rep-pr1.pooled.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep-pr1.pooled.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-9826117ee260a5b864d958fe9ca989b0/rep-pr1.pooled.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep-pr1.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-155eada107f68a2195912a39f5dee4bc/rep-pr1.pooled.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr1.pooled.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep-pr1.pooled.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep-pr1.pooled.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-3b1229fa29433fa118c2c80578c3259b/rep-pr1.pooled.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep-pr1.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "FD0EA0811782B0CAD42EED270FBA6789",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "29A8E044EBA39F63946589D38C43E369",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "6eb70320a8e7b689f6da7ccf20084779",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac-macs2"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr1/execution/glob-199637d3015dccbe277f621a18be9eb4/rep-pr1.pooled.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.004052429459989071,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.016209717839956,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "48598",
                "backend": "Local",
                "end": "2022-07-08T20:58:18.362Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:47.907Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:53:47.908Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:48.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:53:48.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:47.908Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:48.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:18.361Z",
                        "endTime": "2022-07-08T20:58:18.362Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:53:48.113Z",
                        "startTime": "2022-07-08T20:53:48.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:58:17.297Z",
                        "endTime": "2022-07-08T20:58:18.361Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "endTime": "2022-07-08T20:53:48.122Z",
                        "startTime": "2022-07-08T20:53:48.113Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:53:48.122Z",
                        "endTime": "2022-07-08T20:58:17.297Z"
                    }
                ],
                "start": "2022-07-08T20:53:47.907Z"
            }
        ],
        "atac.overlap": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null \npython3 $(which encode_task_overlap.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/-1155121054/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/-1162880413/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/1712056290/rep.pooled.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep1_vs_rep2 \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --nonamecheck \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/inputs/1886193414/rep.pooled.tagAlign.gz",
                "shardIndex": 1,
                "outputs": {
                    "bfilt_overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1_vs_rep2.overlap.bfilt.narrowPeak.gz",
                    "bfilt_overlap_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1_vs_rep2.overlap.bfilt.narrowPeak.hammock.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1_vs_rep2.overlap.bfilt.frip.qc",
                    "bfilt_overlap_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep1_vs_rep2.overlap.bfilt.narrowPeak.starch",
                    "overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep1_vs_rep2.overlap.narrowPeak.gz",
                    "bfilt_overlap_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/rep1_vs_rep2.overlap.bfilt.narrowPeak.bb",
                    "bfilt_overlap_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1_vs_rep2.overlap.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_overlap_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File overlap_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_overlap_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_overlap_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_overlap_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File bfilt_overlap_peak": "9AA37E04B33FA2979A74B09B286645DC"
                        },
                        "input count": "C20AD4D76FE97759AA27A0C99BFF6710",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "32C016665A9D930125E090A2D2CE9F25",
                        "input": {
                            "File peak2": "bd1304b4901d80cece8630c74c5c22b5",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "b6071a3ec7d6c3cc4f7edc8f2b1d5337",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "String prefix": "B94CD68BFF342A9A2977A8DBA3FD0418",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "1985de51561382c1c12f3590b961438b"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "prefix": "rep1_vs_rep2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep.pooled.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "4755",
                "backend": "Local",
                "end": "2022-07-08T21:00:30.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T21:00:06.102Z",
                        "endTime": "2022-07-08T21:00:06.109Z",
                        "description": "PreparingJob"
                    },
                    {
                        "endTime": "2022-07-08T21:00:04.326Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T21:00:04.325Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:28.806Z",
                        "endTime": "2022-07-08T21:00:30.358Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T21:00:06.117Z",
                        "endTime": "2022-07-08T21:00:28.806Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T21:00:30.358Z",
                        "endTime": "2022-07-08T21:00:30.359Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "endTime": "2022-07-08T21:00:06.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T21:00:06.102Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T21:00:06.109Z",
                        "endTime": "2022-07-08T21:00:06.117Z"
                    },
                    {
                        "endTime": "2022-07-08T21:00:06.102Z",
                        "startTime": "2022-07-08T21:00:04.326Z",
                        "description": "RequestingExecutionToken"
                    }
                ],
                "start": "2022-07-08T21:00:04.325Z"
            }
        ],
        "atac.idr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null\npython3 $(which encode_task_idr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/-1155121054/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/-1162880413/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/1712056290/rep.pooled.pval0.01.300K.narrowPeak.gz \\\n    --prefix rep1_vs_rep2 \\\n    --idr-thresh 0.05 \\\n    --peak-type narrowPeak \\\n    --idr-rank p.value \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/inputs/1886193414/rep.pooled.tagAlign.gz",
                "shardIndex": 1,
                "outputs": {
                    "bfilt_idr_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.hammock.gz",
                    "bfilt_idr_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.hammock.gz.tbi",
                    "idr_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-8da83e7748d9e54f3e082eb4aa171757/rep1_vs_rep2.idr0.05.unthresholded-peaks.txt.png",
                    "idr_unthresholded_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-b34256f7f8497ceb77fad19f39663af0/rep1_vs_rep2.idr0.05.unthresholded-peaks.txt.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep1_vs_rep2.idr0.05.bfilt.frip.qc",
                    "idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep1_vs_rep2.idr0.05.narrowPeak.gz",
                    "bfilt_idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.gz",
                    "bfilt_idr_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.starch",
                    "idr_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-748df5c4b6fa48c407f98a93d42e64c6/rep1_vs_rep2.idr0.05.log",
                    "bfilt_idr_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/glob-155eada107f68a2195912a39f5dee4bc/rep1_vs_rep2.idr0.05.bfilt.narrowPeak.bb"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327"
                        },
                        "output expression": {
                            "File bfilt_idr_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File idr_plot": "8C2A61B8475499D094401E71D10EF7A5",
                            "File bfilt_idr_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File idr_unthresholded_peak": "D5DE07DD7B75A43B0EC0E76E60230445",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_idr_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_idr_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File idr_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File idr_log": "C06EE2EDC26CEA6DB33221E9459818FE",
                            "File bfilt_idr_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "C5C3C2247F2FDBE8A7657F1A4299F1B2",
                        "input": {
                            "File peak2": "bd1304b4901d80cece8630c74c5c22b5",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String rank": "B7A5B8CB6541B45E733BDF70EC2FD63D",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "b6071a3ec7d6c3cc4f7edc8f2b1d5337",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "Float idr_thresh": "B14399CBAAC6DA4B5B733B483106383F",
                            "String prefix": "B94CD68BFF342A9A2977A8DBA3FD0418",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "1985de51561382c1c12f3590b961438b"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "prefix": "rep1_vs_rep2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "rank": "p.value",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "idr_thresh": 0.05,
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak/shard-0/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep.pooled.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "5206",
                "backend": "Local",
                "end": "2022-07-08T21:01:39.366Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T21:01:36.378Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T21:00:12.117Z"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T21:00:04.327Z",
                        "endTime": "2022-07-08T21:00:04.328Z"
                    },
                    {
                        "endTime": "2022-07-08T21:01:39.365Z",
                        "startTime": "2022-07-08T21:01:36.378Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T21:00:12.102Z",
                        "endTime": "2022-07-08T21:00:12.110Z",
                        "description": "PreparingJob"
                    },
                    {
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T21:00:12.102Z",
                        "startTime": "2022-07-08T21:00:12.101Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:12.110Z",
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T21:00:12.117Z"
                    },
                    {
                        "startTime": "2022-07-08T21:01:39.365Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T21:01:39.365Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:04.328Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T21:00:12.101Z"
                    }
                ],
                "start": "2022-07-08T21:00:04.326Z"
            }
        ],
        "atac.filter_no_dedup": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_filter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/inputs/279197260/ENCFF341MYG.subsampled.400.trim.merged.srt.bam \\\n    --paired-end \\\n    --multimapping 4 \\\n    --dup-marker picard \\\n    --mapq-thresh 30 \\\n    --filter-chrs chrM MT \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --no-dup-removal \\\n    --mito-chr-name chrM \\\n    --mem-gb 4.818273294866085 \\\n    --nth 4 \\\n    --picard-java-heap 5G",
                "shardIndex": 0,
                "outputs": {
                    "dup_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF341MYG.subsampled.400.trim.merged.srt.dup.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.samstats.qc",
                    "nodup_bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam.bai",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam",
                    "lib_complexity_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF341MYG.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File dup_qc": "D34C4EB2504C6E5EE8A8B6FF197A9EC7",
                            "File nodup_bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File lib_complexity_qc": "84CE21EEA5C3132AC521760733899074",
                            "File nodup_bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "B6D767D2F8ED5D21A44B0E5886680CB9",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "B69D56EF32845E9C763B780B1492910C",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "0D6335125CB55B04A361AAA9E1703C62",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "54FBF38CF649866815E0FEFC46A1F6C7",
                            "Int cpu": "A87FF679A2F3E71D9181A67B7542122C",
                            "Float mem_gb": "C42403DA237D281A4612640C61B03580",
                            "Float samtools_mem_gb": "26A55C9D8CE6730549B5FFA93C4338DA",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String dup_marker": "620573C97469647DF116392F8B351FEB",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Boolean no_dup_removal": "B326B5062B2F0E69046810717534CB09",
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "File bam": "695e3b6e112fe3db030cb83b6048875a",
                            "Int mapq_thresh": "34173CB38F07F89DDBEBC2AC9128303F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "String filter_chrs": [
                                "4A8385B4D27A8EEDB503793999FE2D1B",
                                "A18113047870E64C14FA44BD36DB95E8"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.4,
                    "multimapping": 4,
                    "input_file_size_gb": 0.05710404645651579,
                    "no_dup_removal": true,
                    "time_hr": 24,
                    "mito_chr_name": "chrM",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "mapq_thresh": 30,
                    "disk_factor": 8.0,
                    "disk_gb": 20,
                    "cpu": 4,
                    "paired_end": true,
                    "mem_gb": 6.022841618582606,
                    "dup_marker": "picard",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.bam",
                    "filter_chrs": [
                        "chrM",
                        "MT"
                    ],
                    "samtools_mem_gb": 4.818273294866085
                },
                "returnCode": 0,
                "jobId": "40496",
                "backend": "Local",
                "end": "2022-07-08T20:49:51.364Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:49:51.364Z",
                        "endTime": "2022-07-08T20:49:51.364Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:48:21.346Z",
                        "endTime": "2022-07-08T20:48:24.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.883Z",
                        "endTime": "2022-07-08T20:49:51.364Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "endTime": "2022-07-08T20:48:24.123Z",
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:48:24.115Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:24.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:48:24.102Z"
                    },
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:48:24.102Z",
                        "endTime": "2022-07-08T20:48:24.115Z"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T20:48:21.345Z",
                        "endTime": "2022-07-08T20:48:21.346Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:24.123Z",
                        "endTime": "2022-07-08T20:49:48.883Z",
                        "description": "RunningJob"
                    }
                ],
                "start": "2022-07-08T20:48:21.345Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_filter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/inputs/271437901/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam \\\n    --paired-end \\\n    --multimapping 4 \\\n    --dup-marker picard \\\n    --mapq-thresh 30 \\\n    --filter-chrs chrM MT \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --no-dup-removal \\\n    --mito-chr-name chrM \\\n    --mem-gb 4.822884979844094 \\\n    --nth 4 \\\n    --picard-java-heap 5G",
                "shardIndex": 1,
                "outputs": {
                    "dup_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-1b4794e80f740fd50137e3a948d7ba79/ENCFF641SFZ.subsampled.400.trim.merged.srt.dup.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.samstats.qc",
                    "nodup_bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam.bai",
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.bam",
                    "lib_complexity_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/glob-57d0acc485690c2359d57a5a21e0aedb/ENCFF641SFZ.subsampled.400.trim.merged.srt.dupmark.lib_complexity.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File dup_qc": "D34C4EB2504C6E5EE8A8B6FF197A9EC7",
                            "File nodup_bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File lib_complexity_qc": "84CE21EEA5C3132AC521760733899074",
                            "File nodup_bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "B6D767D2F8ED5D21A44B0E5886680CB9",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "B69D56EF32845E9C763B780B1492910C",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "A6F7A1467D4FA88F0E6C6DC0DB166C39",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "54FBF38CF649866815E0FEFC46A1F6C7",
                            "Int cpu": "A87FF679A2F3E71D9181A67B7542122C",
                            "Float mem_gb": "1890AE7C973A9BF6366E1640E8777999",
                            "Float samtools_mem_gb": "6452895037029CB166F10E3DFE4F28F9",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String dup_marker": "620573C97469647DF116392F8B351FEB",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Boolean no_dup_removal": "B326B5062B2F0E69046810717534CB09",
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "File bam": "afeae1405611cf0c0758e4328d8b9840",
                            "Int mapq_thresh": "34173CB38F07F89DDBEBC2AC9128303F",
                            "Int disk_gb": "3C59DC048E8850243BE8079A5C74D079",
                            "String filter_chrs": [
                                "4A8385B4D27A8EEDB503793999FE2D1B",
                                "A18113047870E64C14FA44BD36DB95E8"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.4,
                    "multimapping": 4,
                    "input_file_size_gb": 0.07151556201279163,
                    "no_dup_removal": true,
                    "time_hr": 24,
                    "mito_chr_name": "chrM",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "mapq_thresh": 30,
                    "disk_factor": 8.0,
                    "disk_gb": 21,
                    "cpu": 4,
                    "paired_end": true,
                    "mem_gb": 6.028606224805117,
                    "dup_marker": "picard",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam",
                    "filter_chrs": [
                        "chrM",
                        "MT"
                    ],
                    "samtools_mem_gb": 4.822884979844094
                },
                "returnCode": 0,
                "jobId": "43844",
                "backend": "Local",
                "end": "2022-07-08T20:52:12.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter_no_dedup/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:50:42.124Z",
                        "endTime": "2022-07-08T20:52:09.895Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:50:42.115Z",
                        "endTime": "2022-07-08T20:50:42.124Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:42.115Z",
                        "startTime": "2022-07-08T20:50:42.103Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:12.361Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:52:12.361Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:42.102Z",
                        "endTime": "2022-07-08T20:50:42.103Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T20:50:39.120Z",
                        "endTime": "2022-07-08T20:50:39.121Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:09.895Z",
                        "endTime": "2022-07-08T20:52:12.361Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:39.121Z",
                        "endTime": "2022-07-08T20:50:42.102Z",
                        "description": "RequestingExecutionToken"
                    }
                ],
                "start": "2022-07-08T20:50:39.120Z"
            }
        ],
        "atac.overlap_ppr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null \npython3 $(which encode_task_overlap.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/-1471460122/rep-pr1.pooled.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/-1479219481/rep-pr2.pooled.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/1712056290/rep.pooled.pval0.01.300K.narrowPeak.gz \\\n    --prefix pooled-pr1_vs_pooled-pr2 \\\n    --peak-type narrowPeak \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --nonamecheck \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/inputs/1886193414/rep.pooled.tagAlign.gz",
                "shardIndex": -1,
                "outputs": {
                    "bfilt_overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.gz",
                    "bfilt_overlap_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.hammock.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-156b027b56a0fc9230201b265d9f4bf4/pooled-pr1_vs_pooled-pr2.overlap.bfilt.frip.qc",
                    "bfilt_overlap_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.starch",
                    "overlap_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/pooled-pr1_vs_pooled-pr2.overlap.narrowPeak.gz",
                    "bfilt_overlap_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-155eada107f68a2195912a39f5dee4bc/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.bb",
                    "bfilt_overlap_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/pooled-pr1_vs_pooled-pr2.overlap.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "8F14E45FCEEA167A5A36DEDD4BEA2543",
                        "runtime attribute": {
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5"
                        },
                        "output expression": {
                            "File bfilt_overlap_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File overlap_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_overlap_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_overlap_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_overlap_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File bfilt_overlap_peak": "9AA37E04B33FA2979A74B09B286645DC"
                        },
                        "input count": "C20AD4D76FE97759AA27A0C99BFF6710",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "32C016665A9D930125E090A2D2CE9F25",
                        "input": {
                            "File peak2": "655a91554f9e065f8b66af3ac54dae5a",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "b6071a3ec7d6c3cc4f7edc8f2b1d5337",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "String prefix": "C1D0659F1AB24856E8FDEF6D0FAEE90B",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "edc5e21a53af704c24564733df93b198"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "prefix": "pooled-pr1_vs_pooled-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr2.pooled.pval0.01.300K.narrowPeak.gz",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr1.pooled.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep.pooled.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "5041",
                "backend": "Local",
                "end": "2022-07-08T21:00:33.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-overlap_ppr",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T21:00:10.102Z",
                        "endTime": "2022-07-08T21:00:10.107Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T21:00:10.107Z",
                        "endTime": "2022-07-08T21:00:10.111Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T21:00:31.372Z",
                        "endTime": "2022-07-08T21:00:33.360Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T21:00:10.111Z",
                        "endTime": "2022-07-08T21:00:31.372Z",
                        "description": "RunningJob"
                    },
                    {
                        "endTime": "2022-07-08T21:00:10.102Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T21:00:10.101Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:33.360Z",
                        "endTime": "2022-07-08T21:00:33.360Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T21:00:04.327Z",
                        "endTime": "2022-07-08T21:00:10.101Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:04.327Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T21:00:04.327Z"
                    }
                ],
                "start": "2022-07-08T21:00:04.327Z"
            }
        ],
        "atac.call_peak_ppr2": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/inputs/1879515319/rep-pr2.pooled.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.0162054263055325\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/inputs/1879515319/rep-pr2.pooled.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": -1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-e2c73ffa35e91a202da536e2007c07a4/rep-pr2.pooled.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep-pr2.pooled.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-9826117ee260a5b864d958fe9ca989b0/rep-pr2.pooled.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep-pr2.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-155eada107f68a2195912a39f5dee4bc/rep-pr2.pooled.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr2.pooled.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep-pr2.pooled.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep-pr2.pooled.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-3b1229fa29433fa118c2c80578c3259b/rep-pr2.pooled.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep-pr2.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "1E17438F0D46D9ACCE5D88F0628DAEBB",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "29849195B1C2A94F74FE12C14B091995",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "1dd524b9cc4f2fff081228b15510d541",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/execution/glob-199637d3015dccbe277f621a18be9eb4/rep-pr2.pooled.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.004051356576383114,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.0162054263055325,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "48749",
                "backend": "Local",
                "end": "2022-07-08T20:57:48.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:53:52.101Z",
                        "endTime": "2022-07-08T20:53:52.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:52.114Z",
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:53:52.130Z"
                    },
                    {
                        "endTime": "2022-07-08T20:57:45.444Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:53:52.130Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:50.979Z",
                        "endTime": "2022-07-08T20:53:52.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "endTime": "2022-07-08T20:57:48.359Z",
                        "startTime": "2022-07-08T20:57:45.444Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:53:52.102Z",
                        "endTime": "2022-07-08T20:53:52.114Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:53:50.978Z",
                        "endTime": "2022-07-08T20:53:50.979Z",
                        "description": "Pending"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:57:48.359Z",
                        "startTime": "2022-07-08T20:57:48.359Z"
                    }
                ],
                "start": "2022-07-08T20:53:50.977Z"
            }
        ],
        "atac.align": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\n# check if pipeline dependencies can be found\nif [[ -z \"$(which encode_task_trim_adapter.py 2> /dev/null || true)\" ]]\nthen\n  echo -e \"\\n* Error: pipeline environment (docker, singularity or conda) not found.\" 1>&2\n  exit 3\nfi\n\n# trim adapter\npython3 $(which encode_task_trim_adapter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/write_tsv_35635bad2188433c311cd2006e29b01e.tmp \\\n     \\\n    --adapters /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/write_tsv_d41d8cd98f00b204e9800998ecf8427e.tmp \\\n    --paired-end \\\n    --auto-detect-adapter \\\n    --cutadapt-param ' -e 0.1 -m 5' \\\n    --nth 6\n\n# align on trimmed/merged fastqs\nif [ 'bowtie2' == 'bowtie2' ]; then\n    python3 $(which encode_task_bowtie2.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/inputs/869740843/ENCFF110MCL.tar.gz \\\n        R1/*.fastq.gz \\\n        R2/*.fastq.gz \\\n        --paired-end \\\n        --multimapping 4 \\\n        --mem-gb 6.796997847855092 \\\n        --nth 6\nfi\n\npython3 $(which encode_task_post_align.py) \\\n    R1/*.fastq.gz $(ls *.bam) \\\n    --mito-chr-name chrM \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --mem-gb 6.796997847855092 \\\n    --nth 6\nrm -rf R1 R2",
                "shardIndex": 0,
                "outputs": {
                    "non_mito_samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc",
                    "read_len": 76,
                    "read_len_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-773fb92850749a2b4a829cf3c8c4de27/ENCFF341MYG.subsampled.400.trim.merged.read_length.txt",
                    "bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF341MYG.subsampled.400.trim.merged.srt.bam.bai",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.bam"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Int read_len": "25282EB58FECB582342A8B1C6C99FECF",
                            "File non_mito_samstat_qc": "BD36C94B6C4ACEBAEDA45822F5713BE8",
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File read_len_log": "CC7C87A75C5BFD29B68744DB9D1A3E61",
                            "File bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "02E74F10E0327AD868D138F2B4FDD6F0",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D171B3DA187B8A3152229D64C1043A26",
                        "input": {
                            "File tmp_fastqs": [
                                [
                                    "5f16579eb1d84cfb678af2d33936b10a",
                                    "eda5d244630820f88487056c99295f4a"
                                ],
                                [
                                    "de9014bd9d91a4fa91a746412d7cb49c",
                                    "b35e8985e9e4ac3a4f88467020c7402a"
                                ]
                            ],
                            "File fastqs_R1": [
                                "5f16579eb1d84cfb678af2d33936b10a",
                                "de9014bd9d91a4fa91a746412d7cb49c"
                            ],
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "642E92EFB79421734881B53E1E1B18B6",
                            "Float input_file_size_gb": "27E168F74C6464C9FC256227BB0BFB48",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File fastqs_R2": [
                                "eda5d244630820f88487056c99295f4a",
                                "b35e8985e9e4ac3a4f88467020c7402a"
                            ],
                            "Float mem_factor": "9FFC7A03C1959674FA8C0A7369460097",
                            "String cutadapt_param": "5F1DB4ACB7CFA98EBAB77C495298CB92",
                            "Int cpu": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "File idx_tar": "4b1e24df54219b54619da9e1a5392b44",
                            "Float mem_gb": "5EF4534A6BED9A370D124E1ABCC3BBD4",
                            "Float samtools_mem_gb": "4EEB1E9B6827C5C06BDDF0455C90137F",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "String aligner": "99E6A6AC2CD2C1E66B6C4CA6FE0D3837",
                            "Int disk_gb": "D645920E395FEDAD7BBBED0ECA3FE2E0",
                            "Boolean auto_detect_adapter": "B326B5062B2F0E69046810717534CB09"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "adapters_R1": [],
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "auto_detect_adapter": true,
                    "mem_factor": 0.15,
                    "fastqs_R2": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz"
                    ],
                    "multimapping": 4,
                    "input_file_size_gb": 0.029931053519248962,
                    "time_hr": 48,
                    "mito_chr_name": "chrM",
                    "adapter": null,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "tmp_fastqs": [
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz"
                        ]
                    ],
                    "fastqs_R1": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz"
                    ],
                    "disk_factor": 8.0,
                    "aligner": "bowtie2",
                    "disk_gb": 40,
                    "cpu": 6,
                    "cutadapt_param": "-e 0.1 -m 5",
                    "paired_end": true,
                    "tmp_adapters": [],
                    "mem_gb": 8.496247309818864,
                    "adapters_R2": [],
                    "idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3ff4ac4c3f59d096b1a3842a182072ae/ENCFF110MCL.tar.gz",
                    "samtools_mem_gb": 6.796997847855092
                },
                "returnCode": 0,
                "jobId": "37113",
                "backend": "Local",
                "end": "2022-07-08T20:48:15.369Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:42:30.174Z",
                        "startTime": "2022-07-08T20:42:30.157Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:42:28.369Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:42:28.371Z"
                    },
                    {
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:48:14.828Z",
                        "startTime": "2022-07-08T20:42:30.174Z"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:42:30.102Z",
                        "startTime": "2022-07-08T20:42:28.371Z"
                    },
                    {
                        "endTime": "2022-07-08T20:42:30.157Z",
                        "startTime": "2022-07-08T20:42:30.103Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:42:30.102Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:42:30.103Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:15.368Z",
                        "endTime": "2022-07-08T20:48:15.369Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "endTime": "2022-07-08T20:48:15.368Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:48:14.828Z"
                    }
                ],
                "start": "2022-07-08T20:42:28.368Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\n# check if pipeline dependencies can be found\nif [[ -z \"$(which encode_task_trim_adapter.py 2> /dev/null || true)\" ]]\nthen\n  echo -e \"\\n* Error: pipeline environment (docker, singularity or conda) not found.\" 1>&2\n  exit 3\nfi\n\n# trim adapter\npython3 $(which encode_task_trim_adapter.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/write_tsv_861f6588e7a7bedb8829abf06b3abd7e.tmp \\\n     \\\n    --adapters /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/write_tsv_d41d8cd98f00b204e9800998ecf8427e.tmp \\\n    --paired-end \\\n    --auto-detect-adapter \\\n    --cutadapt-param ' -e 0.1 -m 5' \\\n    --nth 6\n\n# align on trimmed/merged fastqs\nif [ 'bowtie2' == 'bowtie2' ]; then\n    python3 $(which encode_task_bowtie2.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/inputs/869740843/ENCFF110MCL.tar.gz \\\n        R1/*.fastq.gz \\\n        R2/*.fastq.gz \\\n        --paired-end \\\n        --multimapping 4 \\\n        --mem-gb 6.797781316973269 \\\n        --nth 6\nfi\n\npython3 $(which encode_task_post_align.py) \\\n    R1/*.fastq.gz $(ls *.bam) \\\n    --mito-chr-name chrM \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --mem-gb 6.797781316973269 \\\n    --nth 6\nrm -rf R1 R2",
                "shardIndex": 1,
                "outputs": {
                    "non_mito_samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "samstat_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc",
                    "read_len": 76,
                    "read_len_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-773fb92850749a2b4a829cf3c8c4de27/ENCFF641SFZ.subsampled.400.trim.merged.read_length.txt",
                    "bai": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-6efbc60cb1e0959bab4e467327a9416c/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam.bai",
                    "bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.bam"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "Int read_len": "25282EB58FECB582342A8B1C6C99FECF",
                            "File non_mito_samstat_qc": "BD36C94B6C4ACEBAEDA45822F5713BE8",
                            "File samstat_qc": "EF7F94200A66D0F363422B1FF5348D90",
                            "File bai": "DC8EF4DE24731F8D0B23B82E2CA15141",
                            "File read_len_log": "CC7C87A75C5BFD29B68744DB9D1A3E61",
                            "File bam": "4D95F2D23046D5295A149CA785FD216E"
                        },
                        "input count": "17E62166FC8586DFA4D1BC0E1742C08B",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "D171B3DA187B8A3152229D64C1043A26",
                        "input": {
                            "File tmp_fastqs": [
                                [
                                    "373e6ad011172d9b8cb5b1076b8bb74b",
                                    "ddbaabac52ed65d3005314853bc76071"
                                ],
                                [
                                    "212cfb79dae2812ab93a034f6d15f080",
                                    "42e4dd42a41943c977cf13fd6b597610"
                                ],
                                [
                                    "ea4a331a8258f30c4fb0e5eccfbaccaa",
                                    "3e5e9a73985f8048454259336f956d80"
                                ],
                                [
                                    "16d88a8d90e14ff95fcf3ad6c3a0adc0",
                                    "d54452a45961430bfa17e4dbbf868131"
                                ],
                                [
                                    "2f33afb33f0809a948e17c448d6f0527",
                                    "1e4ade9f743c75ff0c3f472fb3932deb"
                                ],
                                [
                                    "2d1fe18c646a338c17d299acde0873df",
                                    "326bf6340aca670a5e3fa3e4d6ee932b"
                                ]
                            ],
                            "File fastqs_R1": [
                                "373e6ad011172d9b8cb5b1076b8bb74b",
                                "212cfb79dae2812ab93a034f6d15f080",
                                "ea4a331a8258f30c4fb0e5eccfbaccaa",
                                "16d88a8d90e14ff95fcf3ad6c3a0adc0",
                                "2f33afb33f0809a948e17c448d6f0527",
                                "2d1fe18c646a338c17d299acde0873df"
                            ],
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "642E92EFB79421734881B53E1E1B18B6",
                            "Float input_file_size_gb": "78AA2F7737C599EBEC6AC869C64B3C81",
                            "Float disk_factor": "585375C1448BFA3494298BDD79408081",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "File fastqs_R2": [
                                "ddbaabac52ed65d3005314853bc76071",
                                "42e4dd42a41943c977cf13fd6b597610",
                                "3e5e9a73985f8048454259336f956d80",
                                "d54452a45961430bfa17e4dbbf868131",
                                "1e4ade9f743c75ff0c3f472fb3932deb",
                                "326bf6340aca670a5e3fa3e4d6ee932b"
                            ],
                            "Float mem_factor": "9FFC7A03C1959674FA8C0A7369460097",
                            "String cutadapt_param": "5F1DB4ACB7CFA98EBAB77C495298CB92",
                            "Int cpu": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "File idx_tar": "4b1e24df54219b54619da9e1a5392b44",
                            "Float mem_gb": "646DCF5E8CFEB83891EA327DBEE16633",
                            "Float samtools_mem_gb": "CFD8EAFCD45B8AAD819E264BF8FB3FA4",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "Int multimapping": "A87FF679A2F3E71D9181A67B7542122C",
                            "String aligner": "99E6A6AC2CD2C1E66B6C4CA6FE0D3837",
                            "Int disk_gb": "D645920E395FEDAD7BBBED0ECA3FE2E0",
                            "Boolean auto_detect_adapter": "B326B5062B2F0E69046810717534CB09"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "adapters_R1": [],
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "auto_detect_adapter": true,
                    "mem_factor": 0.15,
                    "fastqs_R2": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz"
                    ],
                    "multimapping": 4,
                    "input_file_size_gb": 0.03645996283739805,
                    "time_hr": 48,
                    "mito_chr_name": "chrM",
                    "adapter": null,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "tmp_fastqs": [
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz"
                        ],
                        [
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz",
                            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz"
                        ]
                    ],
                    "fastqs_R1": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz"
                    ],
                    "disk_factor": 8.0,
                    "aligner": "bowtie2",
                    "disk_gb": 40,
                    "cpu": 6,
                    "cutadapt_param": "-e 0.1 -m 5",
                    "paired_end": true,
                    "tmp_adapters": [],
                    "mem_gb": 8.497226646216586,
                    "adapters_R2": [],
                    "idx_tar": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3ff4ac4c3f59d096b1a3842a182072ae/ENCFF110MCL.tar.gz",
                    "samtools_mem_gb": 6.797781316973269
                },
                "returnCode": 0,
                "jobId": "37249",
                "backend": "Local",
                "end": "2022-07-08T20:50:33.369Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:42:32.155Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:50:31.523Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:32.101Z",
                        "endTime": "2022-07-08T20:42:32.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "endTime": "2022-07-08T20:50:33.369Z",
                        "startTime": "2022-07-08T20:50:31.523Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:42:28.371Z",
                        "endTime": "2022-07-08T20:42:32.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "endTime": "2022-07-08T20:42:32.155Z",
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:42:32.143Z"
                    },
                    {
                        "startTime": "2022-07-08T20:42:28.370Z",
                        "endTime": "2022-07-08T20:42:28.371Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:42:32.102Z",
                        "endTime": "2022-07-08T20:42:32.143Z",
                        "description": "PreparingJob"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:50:33.369Z",
                        "startTime": "2022-07-08T20:50:33.369Z"
                    }
                ],
                "start": "2022-07-08T20:42:28.370Z"
            }
        ],
        "atac.frac_mito": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_frac_mito.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/inputs/-95099432/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/inputs/-779147793/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc",
                "shardIndex": 0,
                "outputs": {
                    "frac_mito_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/execution/glob-9613b492fc1585afab8acb7aea0a8862/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5"
                        },
                        "output expression": {
                            "File frac_mito_qc": "7C3982ECE803F12A876FC3F1419ED65B"
                        },
                        "input count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1541E7F3CB6111667E7A8116A6096F59",
                        "input": {
                            "File non_mito_samstat": "410c4d27e29c40fe0bcb2b452d4519d2",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File mito_samstat": "22c28a7ca531fd19edb8e0dfec414da1"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "mito_samstat": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-0/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF341MYG.subsampled.400.trim.merged.srt.samstats.qc",
                    "non_mito_samstat": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-0/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF341MYG.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    }
                },
                "returnCode": 0,
                "jobId": "40351",
                "backend": "Local",
                "end": "2022-07-08T20:48:30.363Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:48:29.805Z",
                        "startTime": "2022-07-08T20:48:22.119Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:29.805Z",
                        "endTime": "2022-07-08T20:48:30.363Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:48:22.101Z",
                        "endTime": "2022-07-08T20:48:22.103Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:48:22.110Z",
                        "endTime": "2022-07-08T20:48:22.119Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "endTime": "2022-07-08T20:48:20.323Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T20:48:20.322Z"
                    },
                    {
                        "startTime": "2022-07-08T20:48:22.103Z",
                        "endTime": "2022-07-08T20:48:22.110Z",
                        "description": "PreparingJob"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:48:30.363Z",
                        "endTime": "2022-07-08T20:48:30.363Z"
                    },
                    {
                        "endTime": "2022-07-08T20:48:22.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:48:20.323Z"
                    }
                ],
                "start": "2022-07-08T20:48:20.322Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_frac_mito.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/inputs/-102858791/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/inputs/-786907152/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc",
                "shardIndex": 1,
                "outputs": {
                    "frac_mito_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/execution/glob-9613b492fc1585afab8acb7aea0a8862/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc.frac_mito.qc"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File frac_mito_qc": "7C3982ECE803F12A876FC3F1419ED65B"
                        },
                        "input count": "E4DA3B7FBBCE2345D7772B0674A318D5",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "1541E7F3CB6111667E7A8116A6096F59",
                        "input": {
                            "File mito_samstat": "b990de5aff41a5a8be5c18a12d48499f",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666"
                            },
                            "File non_mito_samstat": "6b6306d7fc1989343d810ae2bb26923c"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "mito_samstat": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align_mito/shard-1/execution/glob-7b38d9959cf6f3deb83ac2bd156d8317/ENCFF641SFZ.subsampled.400.trim.merged.srt.samstats.qc",
                    "non_mito_samstat": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-align/shard-1/execution/glob-bc1afa799665df5c7d6afd70d2ae2cb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.no_chrM.samstats.qc",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    }
                },
                "returnCode": 0,
                "jobId": "43572",
                "backend": "Local",
                "end": "2022-07-08T20:50:48.362Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-frac_mito/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:50:47.955Z",
                        "endTime": "2022-07-08T20:50:48.362Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:48.362Z",
                        "endTime": "2022-07-08T20:50:48.363Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "endTime": "2022-07-08T20:50:38.101Z",
                        "description": "RequestingExecutionToken",
                        "startTime": "2022-07-08T20:50:38.090Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:50:38.200Z",
                        "startTime": "2022-07-08T20:50:38.109Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:38.101Z",
                        "endTime": "2022-07-08T20:50:38.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:50:38.200Z",
                        "endTime": "2022-07-08T20:50:47.955Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:50:38.102Z",
                        "endTime": "2022-07-08T20:50:38.109Z",
                        "description": "PreparingJob"
                    },
                    {
                        "description": "Pending",
                        "startTime": "2022-07-08T20:50:38.089Z",
                        "endTime": "2022-07-08T20:50:38.090Z"
                    }
                ],
                "start": "2022-07-08T20:50:38.089Z"
            }
        ],
        "atac.macs2_signal_track_pooled": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_macs2_signal_track_atac.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/inputs/1886193414/rep.pooled.tagAlign.gz \\\n    --gensz hs \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --pval-thresh 0.01 \\\n    --smooth-win 150 \\\n    --mem-gb 4.097150683403015",
                "shardIndex": -1,
                "outputs": {
                    "pval_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/execution/glob-7ab0340dfeb10ca109917cbdcc568548/rep.pooled.pval.signal.bigwig",
                    "fc_bw": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/execution/glob-8876d8ced974dc46a0c7a4fac20a3a95/rep.pooled.fc.signal.bigwig"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File fc_bw": "30CA1AC0155EEF77A0D24129EB93BDE2",
                            "File pval_bw": "7F77D035692813E00FB136E1FC27603B"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "335A6B91D20A78105BF0CB53A675CB57",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "6E8E44C209DCAC6A0D3A6F2533A7B93E",
                            "Float disk_factor": "8EE5D21B272D43A875504F3E5845E141",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "195863009FFA903E83AD7FD7E7DB63B1",
                            "Float mem_gb": "7F0595FE54A43CE60041CEA20F8DD33C",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "3C59DC048E8850243BE8079A5C74D079"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac-macs2",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "mem_factor": 12.0,
                    "input_file_size_gb": 0.008095890283584595,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 80.0,
                    "disk_gb": 21,
                    "gensz": "hs",
                    "mem_gb": 4.097150683403015,
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "48222",
                "backend": "Local",
                "end": "2022-07-08T21:03:03.356Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-macs2_signal_track_pooled",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T21:03:02.839Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T21:03:03.356Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:34.112Z",
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:53:34.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:27.508Z",
                        "endTime": "2022-07-08T20:53:34.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T21:03:03.356Z",
                        "endTime": "2022-07-08T21:03:03.356Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:34.118Z",
                        "endTime": "2022-07-08T21:03:02.839Z",
                        "description": "RunningJob"
                    },
                    {
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:53:34.102Z",
                        "startTime": "2022-07-08T20:53:34.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:34.112Z",
                        "endTime": "2022-07-08T20:53:34.118Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:53:27.507Z",
                        "endTime": "2022-07-08T20:53:27.508Z",
                        "description": "Pending"
                    }
                ],
                "start": "2022-07-08T20:53:27.506Z"
            }
        ],
        "atac.xcor": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_xcor.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/inputs/2127444374/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz \\\n    --paired-end \\\n    --mito-chr-name chrM \\\n    --subsample 25000000 \\\n    --speak=0 \\\n    --nth 2",
                "shardIndex": 0,
                "outputs": {
                    "plot_pdf": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/glob-febe739b0bd718b63be38dddfffc9043/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.pdf",
                    "score": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/glob-75e08482e6a5fe7a0d0013bbdfdf694c/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc",
                    "plot_png": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/glob-c0eba07eee633b4055d7d9d85813fdf5/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-spp",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "ECCBC87E4B5CE2FE28308FD9F2A7BAF3",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File plot_png": "DDF36AC8BB3CC47BBA9E01E4D8C873B0",
                            "File score": "77C2D3725C4EBADB74F5F9CD241C560A",
                            "File plot_pdf": "9127AD7AD7449AE4B68301CC74B7A87F"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "576E2D763206E4564D30D8E56396D591",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "Int subsample": "F9637C816DE716B54C5B24B56F189714",
                            "Float input_file_size_gb": "5278F88FC55815B63F506114CA78D1B2",
                            "Float disk_factor": "C33AB40F1472EF16492879F9A7BBF170",
                            "Float mem_factor": "E4C2E8EDAC362ACAB7123654B9E73432",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "778A118FB2310BEA57E7F77C86A61F4E",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "E573A1226B221F1794F055FBC38FEC7E"
                            },
                            "File ta": "e4054960277c3d2fbf0b0954cbe673dc",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-spp",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 1.0,
                    "input_file_size_gb": 0.0036998074501752853,
                    "subsample": 25000000,
                    "time_hr": 6,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.5,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 8.003699807450175
                },
                "returnCode": 0,
                "jobId": "43354",
                "backend": "Local",
                "end": "2022-07-08T20:51:06.366Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:50:22.756Z",
                        "endTime": "2022-07-08T20:50:22.757Z",
                        "description": "Pending"
                    },
                    {
                        "endTime": "2022-07-08T20:50:30.101Z",
                        "startTime": "2022-07-08T20:50:22.757Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:50:30.113Z",
                        "endTime": "2022-07-08T20:50:30.121Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:51:03.606Z",
                        "endTime": "2022-07-08T20:51:06.366Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:50:30.121Z",
                        "endTime": "2022-07-08T20:51:03.606Z",
                        "description": "RunningJob"
                    },
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:50:30.102Z",
                        "endTime": "2022-07-08T20:50:30.113Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:30.101Z",
                        "endTime": "2022-07-08T20:50:30.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:51:06.366Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:51:06.366Z"
                    }
                ],
                "start": "2022-07-08T20:50:22.756Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_xcor.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/inputs/2119685015/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz \\\n    --paired-end \\\n    --mito-chr-name chrM \\\n    --subsample 25000000 \\\n    --speak=0 \\\n    --nth 2",
                "shardIndex": 1,
                "outputs": {
                    "plot_pdf": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/glob-febe739b0bd718b63be38dddfffc9043/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.pdf",
                    "score": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/glob-75e08482e6a5fe7a0d0013bbdfdf694c/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.qc",
                    "plot_png": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/glob-c0eba07eee633b4055d7d9d85813fdf5/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.no_chrM.R1.25M.cc.plot.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-spp",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "ECCBC87E4B5CE2FE28308FD9F2A7BAF3",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File score": "77C2D3725C4EBADB74F5F9CD241C560A",
                            "File plot_png": "DDF36AC8BB3CC47BBA9E01E4D8C873B0",
                            "File plot_pdf": "9127AD7AD7449AE4B68301CC74B7A87F"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "576E2D763206E4564D30D8E56396D591",
                        "input": {
                            "String mito_chr_name": "4A8385B4D27A8EEDB503793999FE2D1B",
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Int time_hr": "1679091C5A880FAF6FB5E6087EB1B2DC",
                            "Int subsample": "F9637C816DE716B54C5B24B56F189714",
                            "Float input_file_size_gb": "DDD3CA9E718C3D28509BCA846806E709",
                            "Float disk_factor": "C33AB40F1472EF16492879F9A7BBF170",
                            "Float mem_factor": "E4C2E8EDAC362ACAB7123654B9E73432",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "10D8FA6C445334304C9F55F1E2746A62",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "E573A1226B221F1794F055FBC38FEC7E",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "5706d0ac6388d912c260bd0087a92ab6",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-spp",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta_no_dedup/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.filt.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 1.0,
                    "input_file_size_gb": 0.004402785561978817,
                    "subsample": 25000000,
                    "time_hr": 6,
                    "mito_chr_name": "chrM",
                    "disk_factor": 4.5,
                    "disk_gb": 20,
                    "cpu": 2,
                    "paired_end": true,
                    "mem_gb": 8.004402785561979
                },
                "returnCode": 0,
                "jobId": "46515",
                "backend": "Local",
                "end": "2022-07-08T20:53:21.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-xcor/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:52:48.102Z",
                        "startTime": "2022-07-08T20:52:48.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:21.360Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:53:21.361Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:21.360Z",
                        "startTime": "2022-07-08T20:53:20.568Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "startTime": "2022-07-08T20:52:48.124Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:53:20.568Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:46.637Z",
                        "endTime": "2022-07-08T20:52:46.638Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T20:52:48.102Z",
                        "endTime": "2022-07-08T20:52:48.115Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:52:48.115Z",
                        "description": "CallCacheReading",
                        "endTime": "2022-07-08T20:52:48.124Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:46.638Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:52:48.101Z"
                    }
                ],
                "start": "2022-07-08T20:52:46.637Z"
            }
        ],
        "atac.spr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_spr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/inputs/146527921/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --pseudoreplication-random-seed 0 \\\n    --paired-end",
                "shardIndex": 0,
                "outputs": {
                    "ta_pr2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz",
                    "ta_pr1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta_pr1": "919B10E5D6DDA1C2C67A06AEE1236F8A",
                            "File ta_pr2": "0251A947B16C8348441745FD01BF184B"
                        },
                        "input count": "6512BD43D9CAA6E02C990B0A82652DCA",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "11ECA02A896E7E806820836214A8A9D8",
                        "input": {
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Float input_file_size_gb": "C2765955CF7EE33A1481DD0374525029",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "Float mem_factor": "75CF3AC5E70C76583BE3EFB5012BD44E",
                            "Float mem_gb": "F18725D526E6BCFA877C4957E6874EC0",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "c5bfbc2e0cbc55dcdade63a7423df68b",
                            "Int pseudoreplication_random_seed": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-0/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 20.0,
                    "input_file_size_gb": 0.003696669824421406,
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "pseudoreplication_random_seed": 0,
                    "paired_end": true,
                    "mem_gb": 4.073933396488428
                },
                "returnCode": 0,
                "jobId": "42800",
                "backend": "Local",
                "end": "2022-07-08T20:50:33.370Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:50:20.717Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:50:20.718Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:20.718Z",
                        "endTime": "2022-07-08T20:50:22.102Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:50:33.369Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T20:50:33.369Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:22.102Z",
                        "endTime": "2022-07-08T20:50:22.103Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:50:22.117Z",
                        "startTime": "2022-07-08T20:50:22.103Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:22.124Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:50:32.968Z"
                    },
                    {
                        "description": "CallCacheReading",
                        "startTime": "2022-07-08T20:50:22.117Z",
                        "endTime": "2022-07-08T20:50:22.124Z"
                    },
                    {
                        "startTime": "2022-07-08T20:50:32.968Z",
                        "description": "UpdatingCallCache",
                        "endTime": "2022-07-08T20:50:33.369Z"
                    }
                ],
                "start": "2022-07-08T20:50:20.716Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_spr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/inputs/138768562/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz \\\n    --pseudoreplication-random-seed 0 \\\n    --paired-end",
                "shardIndex": 1,
                "outputs": {
                    "ta_pr2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz",
                    "ta_pr1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-478c0ad30d0d033ce59a75ef84dab32e/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr1.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta_pr2": "0251A947B16C8348441745FD01BF184B",
                            "File ta_pr1": "919B10E5D6DDA1C2C67A06AEE1236F8A"
                        },
                        "input count": "6512BD43D9CAA6E02C990B0A82652DCA",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "11ECA02A896E7E806820836214A8A9D8",
                        "input": {
                            "Boolean paired_end": "B326B5062B2F0E69046810717534CB09",
                            "Float input_file_size_gb": "5A9C5EE353C75E93C8197A4882BD1F15",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "Float mem_factor": "75CF3AC5E70C76583BE3EFB5012BD44E",
                            "Float mem_gb": "71BD797FDB0AA7E61315063089623D5F",
                            "String runtime_environment": {
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File ta": "77ccc2dd8f5d5f8a735fffbcaa615bad",
                            "Int pseudoreplication_random_seed": "CFCD208495D565EF66E7DFF9F98764DA",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-bam2ta/shard-1/execution/glob-199637d3015dccbe277f621a18be9eb4/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.tagAlign.gz",
                    "mem_factor": 20.0,
                    "input_file_size_gb": 0.004399428144097328,
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "pseudoreplication_random_seed": 0,
                    "paired_end": true,
                    "mem_gb": 4.087988562881947
                },
                "returnCode": 0,
                "jobId": "47295",
                "backend": "Local",
                "end": "2022-07-08T20:53:18.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:53:18.315Z",
                        "endTime": "2022-07-08T20:53:18.360Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:53:06.102Z",
                        "endTime": "2022-07-08T20:53:06.112Z"
                    },
                    {
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:53:06.101Z",
                        "endTime": "2022-07-08T20:53:06.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:59.910Z",
                        "endTime": "2022-07-08T20:53:06.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:53:06.117Z",
                        "endTime": "2022-07-08T20:53:18.315Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T20:53:18.360Z",
                        "endTime": "2022-07-08T20:53:18.360Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "endTime": "2022-07-08T20:52:59.910Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T20:52:59.910Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:06.112Z",
                        "endTime": "2022-07-08T20:53:06.117Z",
                        "description": "CallCacheReading"
                    }
                ],
                "start": "2022-07-08T20:52:59.909Z"
            }
        ],
        "atac.pool_ta_pr2": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_pool_ta.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/inputs/-1513392624/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/inputs/-1521151983/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz \\\n    --prefix rep-pr2 \\",
                "shardIndex": -1,
                "outputs": {
                    "ta_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/execution/glob-199637d3015dccbe277f621a18be9eb4/rep-pr2.pooled.tagAlign.gz"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C4CA4238A0B923820DCC509A6F75849B",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File ta_pooled": "9EB184A935F0EDE297EE65CA4AE0260B"
                        },
                        "input count": "1679091C5A880FAF6FB5E6087EB1B2DC",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "FB53AF744073C79D1B4749F394DBC58C",
                        "input": {
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "String prefix": "93F5D33D5D0982904EE5741617D6C3AF",
                            "File tas": [
                                "e02bb588fd50bbc9d0878b2c0c9df37a",
                                "35b666b577eeaf72af00e6bcb56fc1a5"
                            ]
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "prefix": "rep-pr2",
                    "col": null,
                    "tas": [
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-0/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz",
                        "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-spr/shard-1/execution/glob-a7cc663e5a8a49cc3d9bc036f4370f1c/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.tn5.pr2.tagAlign.gz"
                    ]
                },
                "returnCode": 0,
                "jobId": "47953",
                "backend": "Local",
                "end": "2022-07-08T20:53:45.361Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta_pr2",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "Pending",
                        "endTime": "2022-07-08T20:53:25.467Z",
                        "startTime": "2022-07-08T20:53:25.467Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:30.102Z",
                        "endTime": "2022-07-08T20:53:30.109Z",
                        "description": "PreparingJob"
                    },
                    {
                        "startTime": "2022-07-08T20:53:30.109Z",
                        "endTime": "2022-07-08T20:53:30.116Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "endTime": "2022-07-08T20:53:43.118Z",
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:53:30.116Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:45.360Z",
                        "endTime": "2022-07-08T20:53:45.361Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:53:43.118Z",
                        "endTime": "2022-07-08T20:53:45.360Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "endTime": "2022-07-08T20:53:30.101Z",
                        "startTime": "2022-07-08T20:53:25.467Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "startTime": "2022-07-08T20:53:30.101Z",
                        "endTime": "2022-07-08T20:53:30.102Z",
                        "description": "WaitingForValueStore"
                    }
                ],
                "start": "2022-07-08T20:53:25.466Z"
            }
        ],
        "atac.idr_ppr": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\ntouch null\npython3 $(which encode_task_idr.py) \\\n    /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/-1471460122/rep-pr1.pooled.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/-1479219481/rep-pr2.pooled.pval0.01.300K.narrowPeak.gz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/1712056290/rep.pooled.pval0.01.300K.narrowPeak.gz \\\n    --prefix pooled-pr1_vs_pooled-pr2 \\\n    --idr-thresh 0.05 \\\n    --peak-type narrowPeak \\\n    --idr-rank p.value \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/156641011/ENCFF356LFX.bed.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/inputs/1886193414/rep.pooled.tagAlign.gz",
                "shardIndex": -1,
                "outputs": {
                    "bfilt_idr_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.hammock.gz",
                    "bfilt_idr_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.hammock.gz.tbi",
                    "idr_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-8da83e7748d9e54f3e082eb4aa171757/pooled-pr1_vs_pooled-pr2.idr0.05.unthresholded-peaks.txt.png",
                    "idr_unthresholded_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-b34256f7f8497ceb77fad19f39663af0/pooled-pr1_vs_pooled-pr2.idr0.05.unthresholded-peaks.txt.gz",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-156b027b56a0fc9230201b265d9f4bf4/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.frip.qc",
                    "idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/pooled-pr1_vs_pooled-pr2.idr0.05.narrowPeak.gz",
                    "bfilt_idr_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.gz",
                    "bfilt_idr_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.starch",
                    "idr_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-748df5c4b6fa48c407f98a93d42e64c6/pooled-pr1_vs_pooled-pr2.idr0.05.log",
                    "bfilt_idr_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/glob-155eada107f68a2195912a39f5dee4bc/pooled-pr1_vs_pooled-pr2.idr0.05.bfilt.narrowPeak.bb"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_idr_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File idr_plot": "8C2A61B8475499D094401E71D10EF7A5",
                            "File bfilt_idr_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File idr_unthresholded_peak": "D5DE07DD7B75A43B0EC0E76E60230445",
                            "File frip_qc": "FFBDC0CF158D56A15AA0F87CB842D5C8",
                            "File bfilt_idr_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_idr_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File idr_peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File idr_log": "C06EE2EDC26CEA6DB33221E9459818FE",
                            "File bfilt_idr_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8"
                        },
                        "input count": "AAB3238922BCC25A6F606EB525FFDC56",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "C5C3C2247F2FDBE8A7657F1A4299F1B2",
                        "input": {
                            "File peak2": "655a91554f9e065f8b66af3ac54dae5a",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "String rank": "B7A5B8CB6541B45E733BDF70EC2FD63D",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "File peak_pooled": "b6071a3ec7d6c3cc4f7edc8f2b1d5337",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "Float idr_thresh": "B14399CBAAC6DA4B5B733B483106383F",
                            "String prefix": "C1D0659F1AB24856E8FDEF6D0FAEE90B",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53",
                            "File peak1": "edc5e21a53af704c24564733df93b198"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "prefix": "pooled-pr1_vs_pooled-pr2",
                    "peak2": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr2/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr2.pooled.pval0.01.300K.narrowPeak.gz",
                    "rank": "p.value",
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "idr_thresh": 0.05,
                    "peak1": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_ppr1/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep-pr1.pooled.pval0.01.300K.narrowPeak.gz",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "peak_pooled": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep.pooled.pval0.01.300K.narrowPeak.gz"
                },
                "returnCode": 0,
                "jobId": "4893",
                "backend": "Local",
                "end": "2022-07-08T21:01:39.365Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-idr_ppr",
                "attempt": 1,
                "executionEvents": [
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T21:00:08.102Z",
                        "endTime": "2022-07-08T21:00:08.109Z"
                    },
                    {
                        "startTime": "2022-07-08T21:01:39.365Z",
                        "description": "UpdatingJobStore",
                        "endTime": "2022-07-08T21:01:39.365Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:08.115Z",
                        "endTime": "2022-07-08T21:01:38.372Z",
                        "description": "RunningJob"
                    },
                    {
                        "startTime": "2022-07-08T21:00:08.109Z",
                        "endTime": "2022-07-08T21:00:08.115Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T21:00:08.101Z",
                        "startTime": "2022-07-08T21:00:04.327Z"
                    },
                    {
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T21:01:38.372Z",
                        "endTime": "2022-07-08T21:01:39.365Z"
                    },
                    {
                        "startTime": "2022-07-08T21:00:04.326Z",
                        "endTime": "2022-07-08T21:00:04.327Z",
                        "description": "Pending"
                    },
                    {
                        "startTime": "2022-07-08T21:00:08.101Z",
                        "endTime": "2022-07-08T21:00:08.102Z",
                        "description": "WaitingForValueStore"
                    }
                ],
                "start": "2022-07-08T21:00:04.326Z"
            }
        ],
        "atac.call_peak_pooled": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\n\nif [ 'macs2' == 'macs2' ]; then\n    python3 $(which encode_task_macs2_atac.py) \\\n        /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/inputs/1886193414/rep.pooled.tagAlign.gz \\\n        --gensz hs \\\n        --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n        --cap-num-peak 300000 \\\n        --pval-thresh 0.01 \\\n        --smooth-win 150 \\\n        --mem-gb 4.032383561134338\nfi\n\npython3 $(which encode_task_post_call_peak_atac.py) \\\n    $(ls *Peak.gz) \\\n    --ta /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/inputs/1886193414/rep.pooled.tagAlign.gz \\\n    --regex-bfilt-peak-chr-name 'chr[\\dXY]+' \\\n    --chrsz /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/inputs/-599978804/GRCh38_EBV.chrom.sizes.tsv \\\n    --peak-type narrowPeak \\\n    --blacklist /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/inputs/156641011/ENCFF356LFX.bed.gz",
                "shardIndex": -1,
                "outputs": {
                    "peak_region_size_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-e2c73ffa35e91a202da536e2007c07a4/rep.pooled.pval0.01.300K.bfilt.peak_region_size.png",
                    "bfilt_peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-2e6c87fc90e45fa5dbda88934d454cd3/rep.pooled.pval0.01.300K.bfilt.narrowPeak.gz",
                    "peak_region_size_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-9826117ee260a5b864d958fe9ca989b0/rep.pooled.pval0.01.300K.bfilt.peak_region_size.qc",
                    "bfilt_peak_hammock": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz",
                    "bfilt_peak_bb": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-155eada107f68a2195912a39f5dee4bc/rep.pooled.pval0.01.300K.bfilt.narrowPeak.bb",
                    "peak": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-254907fcd430d7e6c9bf67ac4585adb4/rep.pooled.pval0.01.300K.narrowPeak.gz",
                    "bfilt_peak_starch": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-c803fbc8adf0005e2a0b14b4815c0106/rep.pooled.pval0.01.300K.bfilt.narrowPeak.starch",
                    "frip_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-156b027b56a0fc9230201b265d9f4bf4/rep.pooled.pval0.01.300K.bfilt.frip.qc",
                    "num_peak_qc": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-3b1229fa29433fa118c2c80578c3259b/rep.pooled.pval0.01.300K.bfilt.num_peak.qc",
                    "bfilt_peak_hammock_tbi": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/glob-08ed81b9c4c9ccf6c3692d9ea29b11e0/rep.pooled.pval0.01.300K.bfilt.narrowPeak.hammock.gz.tbi"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac-macs2",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "D3D9446802A44259755D38E6D163E820",
                        "runtime attribute": {
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File bfilt_peak_hammock_tbi": "1D7A1D8E68AE180F84BF00427775A2B8",
                            "File peak_region_size_qc": "720E1A212D4BA14147030C0D6DD8F364",
                            "File bfilt_peak_bb": "548824A543F147DE9E2FDA4F0AEBA711",
                            "File bfilt_peak_hammock": "00070404F73DBACD1B0710271BCB785E",
                            "File bfilt_peak_starch": "68A471BB69D3C769B6EFD75D8BA384BB",
                            "File peak": "2B4C2D30823B687890B9ABBFA7507878",
                            "File frip_qc": "0F4D312A3A9795A96AFD8EE944F523D5",
                            "File peak_region_size_plot": "E22900E42131389FEE2B1E7D06CFCD6B",
                            "File bfilt_peak": "9AA37E04B33FA2979A74B09B286645DC",
                            "File num_peak_qc": "73034CF133263C952B8B89C85DDF60CC"
                        },
                        "input count": "98F13708210194C475687BE6106A3B84",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "55BB5A4C04179BC1D5EAC6990BA1EBE4",
                        "input": {
                            "Float pval_thresh": "04817EFD11C15364A6EC239780038862",
                            "File blacklist": "7e8c03078a264545d0ddc473e3fc3542",
                            "Int time_hr": "1FF1DE774005F8DA13F42943881C655F",
                            "Float input_file_size_gb": "6E8E44C209DCAC6A0D3A6F2533A7B93E",
                            "Float disk_factor": "5BA1DE412E01037F8843D097DCFAF28A",
                            "File chrsz": "2e6833f0fadd9fe48eadf199903710e8",
                            "Float mem_factor": "07078A97D66756F213DBCA3E379BF084",
                            "Int cpu": "C81E728D9D4C2F636F067F89CC14862C",
                            "Float mem_gb": "4A52CDFEE21B396BC6A33CED85FFE878",
                            "String regex_bfilt_peak_chr_name": "C742E46BA2D35AFA2B5C0BBCB7D31CE7",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "conda": "AF6974046E3595B9CD5DC020F273CB14",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File ta": "8fdbc91bebe6892947cedf0e790b6b89",
                            "String gensz": "9D9DC598642ACC744E92C2B722799B98",
                            "String peak_caller": "92FD39F2D5A89AF59D0CC6A6D3E98FE9",
                            "Int smooth_win": "7EF605FC8DBA5425D6965FBD4C8FBE1F",
                            "Int disk_gb": "98F13708210194C475687BE6106A3B84",
                            "Int cap_num_peak": "1DED704CE9BA546ACC563F4C9EF0EB52",
                            "String peak_type": "9F6EB79808F888389F5E27EE57FF2B53"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "blacklist": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/f183dcba5d34f959d8b55ed438ee2e22/ENCFF356LFX.bed.gz",
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "conda": "encd-atac-macs2",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "peak_type": "narrowPeak",
                    "ta": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-pool_ta/execution/glob-199637d3015dccbe277f621a18be9eb4/rep.pooled.tagAlign.gz",
                    "mem_factor": 4.0,
                    "cap_num_peak": 300000,
                    "input_file_size_gb": 0.008095890283584595,
                    "time_hr": 24,
                    "pval_thresh": 0.01,
                    "chrsz": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/c52f52c7bfa357f55a39b1de7e4d0b0c/GRCh38_EBV.chrom.sizes.tsv",
                    "disk_factor": 30.0,
                    "disk_gb": 20,
                    "gensz": "hs",
                    "regex_bfilt_peak_chr_name": "chr[\\dXY]+",
                    "cpu": 2,
                    "mem_gb": 4.032383561134338,
                    "peak_caller": "macs2",
                    "smooth_win": 150
                },
                "returnCode": 0,
                "jobId": "48365",
                "backend": "Local",
                "end": "2022-07-08T21:00:00.359Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-call_peak_pooled",
                "attempt": 1,
                "executionEvents": [
                    {
                        "endTime": "2022-07-08T20:53:36.125Z",
                        "startTime": "2022-07-08T20:53:36.117Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "startTime": "2022-07-08T20:53:27.508Z",
                        "endTime": "2022-07-08T20:53:27.508Z",
                        "description": "Pending"
                    },
                    {
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:53:36.117Z",
                        "startTime": "2022-07-08T20:53:36.108Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T21:00:00.359Z",
                        "endTime": "2022-07-08T21:00:00.359Z"
                    },
                    {
                        "endTime": "2022-07-08T20:53:36.108Z",
                        "description": "WaitingForValueStore",
                        "startTime": "2022-07-08T20:53:36.101Z"
                    },
                    {
                        "endTime": "2022-07-08T21:00:00.359Z",
                        "description": "UpdatingCallCache",
                        "startTime": "2022-07-08T20:59:59.806Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:36.125Z",
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:59:59.806Z"
                    },
                    {
                        "startTime": "2022-07-08T20:53:27.508Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:53:36.101Z"
                    }
                ],
                "start": "2022-07-08T20:53:27.507Z"
            }
        ],
        "atac.gc_bias": [
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_gc_bias.py) \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/inputs/-62603625/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --ref-fa /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/inputs/710325369/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz \\\n    --picard-java-heap 4G",
                "shardIndex": 0,
                "outputs": {
                    "gc_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/execution/glob-694f39df899f77495217df4d47b68d34/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png",
                    "gc_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/execution/glob-c0a46850c35224a4bb72e9205baac93f/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc.txt"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File gc_log": "007392B9D0AFBD531C8597373C500AC4",
                            "File gc_plot": "6C8CC6BDE4DA73290324018E6A917F70"
                        },
                        "input count": "45C48CCE2E2D7FBDEA1AFC51C7C6AD26",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "A714212254405F7BE797B5F47D3AFE1A",
                        "input": {
                            "File ref_fa": "d272bec72938e2779c8b7e0c9fe3c0c2",
                            "Float input_file_size_gb": "B1D7BB7A3730744A04D757AEA2F04B95",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Float mem_gb": "72FE1116BB77F00EDE27E27214EC97A9",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String runtime_environment": {
                                "conda": "CCA06306C767205C8FA7B5389285A21A",
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68"
                            },
                            "File nodup_bam": "99768eb593b999b66806b97e35fc1f8b"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                        "conda": "encd-atac"
                    },
                    "mem_factor": 0.3,
                    "ref_fa": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/caf534ed3cf684406e731d19be272b4a/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz",
                    "input_file_size_gb": 0.027218439616262913,
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-0/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF341MYG.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "mem_gb": 4.008165531884879
                },
                "returnCode": 0,
                "jobId": "41574",
                "backend": "Local",
                "end": "2022-07-08T20:57:24.365Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-0",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:57:22.174Z",
                        "endTime": "2022-07-08T20:57:24.365Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "description": "RunningJob",
                        "startTime": "2022-07-08T20:49:48.123Z",
                        "endTime": "2022-07-08T20:57:22.174Z"
                    },
                    {
                        "description": "UpdatingJobStore",
                        "startTime": "2022-07-08T20:57:24.365Z",
                        "endTime": "2022-07-08T20:57:24.365Z"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.101Z",
                        "endTime": "2022-07-08T20:49:48.102Z",
                        "description": "WaitingForValueStore"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.114Z",
                        "endTime": "2022-07-08T20:49:48.123Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "PreparingJob",
                        "startTime": "2022-07-08T20:49:48.102Z",
                        "endTime": "2022-07-08T20:49:48.114Z"
                    },
                    {
                        "startTime": "2022-07-08T20:49:48.061Z",
                        "endTime": "2022-07-08T20:49:48.101Z",
                        "description": "RequestingExecutionToken"
                    },
                    {
                        "endTime": "2022-07-08T20:49:48.061Z",
                        "description": "Pending",
                        "startTime": "2022-07-08T20:49:48.060Z"
                    }
                ],
                "start": "2022-07-08T20:49:48.059Z"
            },
            {
                "executionStatus": "Done",
                "stdout": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/execution/stdout",
                "backendStatus": "Done",
                "compressedDockerSize": 964019845,
                "commandLine": "set -e\npython3 $(which encode_task_gc_bias.py) \\\n    --nodup-bam /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/inputs/-70362984/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam \\\n    --ref-fa /cromwell-executions/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/inputs/710325369/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz \\\n    --picard-java-heap 4G",
                "shardIndex": 1,
                "outputs": {
                    "gc_log": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/execution/glob-c0a46850c35224a4bb72e9205baac93f/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc.txt",
                    "gc_plot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/execution/glob-694f39df899f77495217df4d47b68d34/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.gc_plot.png"
                },
                "runtimeAttributes": {
                    "failOnStderr": "false",
                    "conda": "encd-atac",
                    "continueOnReturnCode": "0",
                    "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
                    "singularity_bindpath": "/costellolab/data3/sermare/atac-seq-pipeline",
                    "maxRetries": "1",
                    "environment": "singularity",
                    "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif"
                },
                "callCaching": {
                    "allowResultReuse": true,
                    "hit": false,
                    "result": "Cache Miss",
                    "hashes": {
                        "output count": "C81E728D9D4C2F636F067F89CC14862C",
                        "runtime attribute": {
                            "docker": "A4C5BBF1C0662895B7039EF81EFB7FB5",
                            "failOnStderr": "68934A3E9455FA72420237EB05902327",
                            "continueOnReturnCode": "CFCD208495D565EF66E7DFF9F98764DA"
                        },
                        "output expression": {
                            "File gc_log": "007392B9D0AFBD531C8597373C500AC4",
                            "File gc_plot": "6C8CC6BDE4DA73290324018E6A917F70"
                        },
                        "input count": "45C48CCE2E2D7FBDEA1AFC51C7C6AD26",
                        "backend name": "509820290D57F333403F490DDE7316F4",
                        "command template": "A714212254405F7BE797B5F47D3AFE1A",
                        "input": {
                            "File ref_fa": "d272bec72938e2779c8b7e0c9fe3c0c2",
                            "Float input_file_size_gb": "8818900CAAEE5B6BD4258C32DE0FE1F6",
                            "Float mem_factor": "E85B79ABFD76B7C13B1334D8D8C194A5",
                            "Float mem_gb": "486C69A0C925F0562656B5500ABBB20F",
                            "Float picard_java_heap_factor": "A894124CC6D5C5C71AFE060D5DDE0762",
                            "String runtime_environment": {
                                "singularity": "6E324E7090ADD8388D7815BD30B33666",
                                "docker": "EC78EEB58B2AF5FA87D8CBBCB1E91B68",
                                "conda": "CCA06306C767205C8FA7B5389285A21A"
                            },
                            "File nodup_bam": "653b6b0dfc16ce79b4731ddf3b9e320d"
                        }
                    },
                    "effectiveCallCachingMode": "ReadAndWriteCache"
                },
                "inputs": {
                    "runtime_environment": {
                        "conda": "encd-atac",
                        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
                        "docker": "encodedcc/atac-seq-pipeline:v2.2.0"
                    },
                    "mem_factor": 0.3,
                    "ref_fa": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/caf534ed3cf684406e731d19be272b4a/GRCh38_no_alt_analysis_set_GCA_000001405.15.fasta.gz",
                    "input_file_size_gb": 0.032093520276248455,
                    "picard_java_heap": null,
                    "picard_java_heap_factor": 0.9,
                    "nodup_bam": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-filter/shard-1/execution/glob-3bcbe4e7489c90f75e0523ac6f3a9385/ENCFF641SFZ.subsampled.400.trim.merged.srt.nodup.no_chrM_MT.bam",
                    "mem_gb": 4.0096280560828745
                },
                "returnCode": 0,
                "jobId": "45399",
                "backend": "Local",
                "end": "2022-07-08T20:59:03.360Z",
                "dockerImageUsed": "encodedcc/atac-seq-pipeline@sha256:ec65c7feb5235f7c496fd175861e70c53cb9fc679964e407cc2927bf064f4e95",
                "stderr": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1/execution/stderr",
                "callRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-gc_bias/shard-1",
                "attempt": 1,
                "executionEvents": [
                    {
                        "startTime": "2022-07-08T20:52:21.137Z",
                        "description": "Pending",
                        "endTime": "2022-07-08T20:52:21.137Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:22.101Z",
                        "description": "WaitingForValueStore",
                        "endTime": "2022-07-08T20:52:22.102Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:22.102Z",
                        "description": "PreparingJob",
                        "endTime": "2022-07-08T20:52:22.113Z"
                    },
                    {
                        "startTime": "2022-07-08T20:52:21.137Z",
                        "description": "RequestingExecutionToken",
                        "endTime": "2022-07-08T20:52:22.101Z"
                    },
                    {
                        "startTime": "2022-07-08T20:59:03.360Z",
                        "endTime": "2022-07-08T20:59:03.360Z",
                        "description": "UpdatingJobStore"
                    },
                    {
                        "startTime": "2022-07-08T20:59:00.919Z",
                        "endTime": "2022-07-08T20:59:03.360Z",
                        "description": "UpdatingCallCache"
                    },
                    {
                        "endTime": "2022-07-08T20:52:22.120Z",
                        "startTime": "2022-07-08T20:52:22.113Z",
                        "description": "CallCacheReading"
                    },
                    {
                        "description": "RunningJob",
                        "endTime": "2022-07-08T20:59:00.919Z",
                        "startTime": "2022-07-08T20:52:22.120Z"
                    }
                ],
                "start": "2022-07-08T20:52:21.136Z"
            }
        ]
    },
    "outputs": {
        "atac.qc_json_ref_match": false,
        "atac.qc_json": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/glob-3440f922973abb7a616aaf203e0db08b/qc.json",
        "atac.report": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165/call-qc_report/execution/glob-eae855c82d0f7e2185388856e7b2cc7b/qc.html"
    },
    "workflowRoot": "/costellolab/data3/sermare/atac-seq-pipeline/atac/9eb8a2c8-4828-4ec5-bde1-0de722307165",
    "actualWorkflowLanguage": "WDL",
    "id": "9eb8a2c8-4828-4ec5-bde1-0de722307165",
    "inputs": {
        "blacklist": null,
        "fastqs_rep6_R1": [],
        "adapters_rep2_R1": [],
        "auto_detect_adapter": true,
        "jsd_disk_factor": 2.0,
        "xcor_mem_factor": 1.0,
        "atac.pool_ta.col": null,
        "tss": null,
        "peaks_pr2": [],
        "enh": null,
        "adapters_rep6_R2": [],
        "align_cpu": 6,
        "fastqs_rep4_R1": [],
        "align_time_hr": 48,
        "fastqs_rep2_R1": [
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3c6d0cab14c16eaeaf22560de63ac804/ENCFF641SFZ.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/218fa2f732797e84fa153d479e7dcafb/ENCFF751XTV.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/dfea21b33ce8e0ab13fd158e7e812586/ENCFF927LSG.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/44b253b6db9e0ea8de62aea604878556/ENCFF859BDM.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/db6282276790c12cb2e76b1ed84fb26f/ENCFF193RRC.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/88672b6fafd695007baf55f7f9757fed/ENCFF366DFI.subsampled.400.fastq.gz"
        ],
        "ref_mito_fa": null,
        "adapters_rep10_R2": [],
        "ref_fa": null,
        "cap_num_peak": 300000,
        "enable_fraglen_stat": true,
        "gc_bias_picard_java_heap": null,
        "reg2map": null,
        "conda_python2": "encd-atac-py2",
        "atac.pool_blacklist.prefix": null,
        "multimapping": 4,
        "conda_macs2": "encd-atac-macs2",
        "jsd_time_hr": 12,
        "fastqs_rep5_R2": [],
        "fastqs_rep7_R2": [],
        "description": "ATAC-seq on primary keratinocytes in day 0.0 of differentiation",
        "conda": "encd-atac",
        "enable_tss_enrich": true,
        "adapters_rep2_R2": [],
        "pipeline_type": "atac",
        "enable_gc_bias": true,
        "bam2ta_time_hr": 12,
        "no_dup_removal": false,
        "filter_cpu": 4,
        "preseq_disk_factor": 5.0,
        "adapters_rep5_R1": [],
        "roadmap_meta": null,
        "call_peak_cpu": 2,
        "fastqs_rep9_R2": [],
        "fastqs_rep8_R2": [],
        "adapters_rep3_R2": [],
        "adapters_rep10_R1": [],
        "tas": [],
        "atac.qc_report.qc_json_ref": null,
        "adapters_rep8_R2": [],
        "mito_chr_name": null,
        "adapter": null,
        "call_peak_mem_factor": 4.0,
        "adapters_rep8_R1": [],
        "pval_thresh": 0.01,
        "chrsz": null,
        "peak_ppr2": null,
        "fastqs_rep6_R2": [],
        "bowtie2_idx_tar": null,
        "atac.pool_ta_pr1.col": null,
        "jsd_mem_factor": 0.1,
        "true_rep_only": false,
        "bam2ta_cpu": 2,
        "idr_thresh": 0.05,
        "fastqs_rep3_R2": [],
        "peaks_pr1": [],
        "xcor_subsample_reads": 25000000,
        "jsd_cpu": 4,
        "fraglen_stat_picard_java_heap": null,
        "fastqs_rep5_R1": [],
        "adapters_rep9_R2": [],
        "atac.preseq.null": null,
        "spr_mem_factor": 20.0,
        "atac.read_genome_tsv.null_s": null,
        "mapq_thresh": 30,
        "genome_tsv": "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/064fc44179753a3d83d3bd56ae3aeb84/hg38.local.tsv",
        "fastqs_rep4_R2": [],
        "filter_disk_factor": 8.0,
        "subsample_reads": 0,
        "peak_ppr1": null,
        "genome_name": null,
        "adapters_rep5_R2": [],
        "fastqs_rep8_R1": [],
        "docker": "encodedcc/atac-seq-pipeline:v2.2.0",
        "enable_jsd": true,
        "call_peak_disk_factor": 30.0,
        "macs2_signal_track_disk_factor": 80.0,
        "fastqs_rep10_R2": [],
        "bam2ta_mem_factor": 0.3,
        "adapters_rep3_R1": [],
        "filter_time_hr": 24,
        "align_disk_factor": 8.0,
        "xcor_time_hr": 6,
        "atac.pool_ta_pr2.col": null,
        "fastqs_rep9_R1": [],
        "adapters_rep4_R2": [],
        "reg2map_bed": null,
        "gensz": null,
        "macs2_signal_track_time_hr": 24,
        "adapters_rep1_R1": [],
        "fastqs_rep2_R2": [
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/713c163a0f65d7350956d72323fc0310/ENCFF031ARQ.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/1654703543de9eb53b95469e4c26856c/ENCFF590SYZ.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/69b00bab505645c65eb5957a0b6b2392/ENCFF734PEQ.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/3810785b7e92ca7d6c4612c20c3ca534/ENCFF007USV.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/482c9ce8ed007c251adca385c7d4ce95/ENCFF886FSC.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a3a22d635ec162098e31bcea6655fb34/ENCFF573UXK.subsampled.400.fastq.gz"
        ],
        "fastqs_rep3_R1": [],
        "fastqs_rep1_R1": [
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/7ded2935aace2939d00d8fb5b47867ae/ENCFF341MYG.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/ca04bcf10cb8ac66068bc5f15a436f03/ENCFF106QGY.subsampled.400.fastq.gz"
        ],
        "bowtie2_mito_idx_tar": null,
        "enable_count_signal_track": false,
        "call_peak_time_hr": 24,
        "enable_idr": true,
        "bam2ta_disk_factor": 4.0,
        "read_len": [],
        "regex_bfilt_peak_chr_name": null,
        "filter_picard_java_heap": null,
        "enable_compare_to_roadmap": false,
        "filter_mem_factor": 0.4,
        "nodup_bams": [],
        "cutadapt_param": "-e 0.1 -m 5",
        "pseudoreplication_random_seed": 0,
        "blacklist2": null,
        "adapters_rep7_R1": [],
        "paired_end": true,
        "adapters_rep9_R1": [],
        "xcor_disk_factor": 4.5,
        "conda_spp": "encd-atac-spp",
        "dup_marker": "picard",
        "prom": null,
        "peaks": [],
        "preseq_mem_factor": 0.5,
        "adapters_rep6_R1": [],
        "title": "ENCSR356KRQ (subsampled 1/400)",
        "adapters_rep1_R2": [],
        "align_mem_factor": 0.15,
        "fastqs_rep10_R1": [],
        "macs2_signal_track_mem_factor": 12.0,
        "fastqs_rep1_R2": [
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/27d48f46ef8e2ac6910ac87f3ccbe163/ENCFF248EJF.subsampled.400.fastq.gz",
            "/costellolab/data3/sermare/atac-seq-pipeline/.caper_tmp/a7ff3728754970409a3d2f093cf38b52/ENCFF368TYI.subsampled.400.fastq.gz"
        ],
        "adapters_rep7_R2": [],
        "smooth_win": 150,
        "enable_annot_enrich": true,
        "enable_preseq": false,
        "enable_xcor": true,
        "singularity": "https://encode-pipeline-singularity-image.s3.us-west-2.amazonaws.com/atac-seq-pipeline_v2.2.0.sif",
        "adapters_rep4_R1": [],
        "spr_disk_factor": 30.0,
        "filter_chrs": [
            "chrM",
            "MT"
        ],
        "peak_pooled": null,
        "xcor_cpu": 2,
        "preseq_picard_java_heap": null,
        "align_only": false,
        "dnase": null,
        "paired_ends": [],
        "fastqs_rep7_R1": [],
        "bams": []
    },
    "labels": {
        "caper-str-label": "ENCSR356KRQ_subsampled",
        "caper-backend": "Local",
        "caper-user": "sermare",
        "cromwell-workflow-id": "cromwell-9eb8a2c8-4828-4ec5-bde1-0de722307165"
    },
    "submission": "2022-07-08T20:41:11.052Z",
    "status": "Succeeded",
    "end": "2022-07-08T21:03:05.098Z",
    "start": "2022-07-08T20:41:12.258Z"
}
